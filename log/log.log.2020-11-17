
 2020-11-16 09:44:36,287 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-886} connected  
 
 2020-11-16 09:44:36,318 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-887} connected  
 
 2020-11-16 09:44:36,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-888} connected  
 
 2020-11-16 09:44:36,362 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-889} connected  
 
 2020-11-16 09:44:36,382 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-890} connected  
 
 2020-11-16 09:44:36,390 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:44:36,728 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 09:44:36,764 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 09:44:36,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 09:44:36,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 23.5051 millis. select * from t_types  
 
 2020-11-16 09:44:36,788 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 09:44:36,792 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 09:44:36,814 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 09:44:36,820 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 09:44:36,822 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 09:44:36,823 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 09:44:36,826 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 09:44:36,828 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 09:44:36,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 09:44:36,834 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 09:44:36,837 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:44:36,866 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:44:36,868 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 09:44:36,869 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 09:44:36,870 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 09:44:36,872 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.5528 millis. select * from t_tages  
 
 2020-11-16 09:44:36,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 09:44:36,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 09:44:36,877 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 09:44:36,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 09:44:36,880 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 09:44:36,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 09:44:36,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 09:44:36,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 09:44:36,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 09:44:36,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 09:44:36,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:44:37,551 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:44:37,553 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 09:44:37,554 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 09:44:37,560 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 7.2734 millis. select * from t_types  
 
 2020-11-16 09:44:37,562 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-16 09:44:37,562 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-16 09:44:37,564 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 09:44:37,569 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 09:44:37,570 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 09:44:37,572 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 09:44:37,574 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 09:44:37,576 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 09:44:37,577 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-16 09:44:37,578 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 09:44:37,580 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:44:37,581 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:44:37,583 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 09:44:37,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 09:44:37,586 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.3509 millis. select * from t_tages  
 
 2020-11-16 09:44:37,586 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 09:44:37,587 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 09:44:37,588 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 09:44:37,589 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 09:44:37,589 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 09:44:37,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 09:44:37,591 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 09:44:37,592 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 09:44:37,593 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 09:44:37,594 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 09:44:37,595 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:52:55,227 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-891} connected  
 
 2020-11-16 09:52:55,248 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-892} connected  
 
 2020-11-16 09:52:55,266 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-893} connected  
 
 2020-11-16 09:52:55,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-894} connected  
 
 2020-11-16 09:52:55,302 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-895} connected  
 
 2020-11-16 09:52:55,309 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:52:55,567 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 09:52:55,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 09:52:55,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 09:52:55,605 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 20.622 millis. select * from t_types  
 
 2020-11-16 09:52:55,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 09:52:55,615 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 09:52:55,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 09:52:55,643 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 09:52:55,644 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 09:52:55,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 09:52:55,647 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 09:52:55,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 09:52:55,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 09:52:55,654 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 09:52:55,656 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:52:55,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:52:55,686 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 09:52:55,687 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 09:52:55,687 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 09:52:55,689 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.8522 millis. select * from t_tages  
 
 2020-11-16 09:52:55,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 09:52:55,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 09:52:55,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 09:52:55,692 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 09:52:55,693 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 09:52:55,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 09:52:55,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 09:52:55,696 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 09:52:55,697 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 09:52:55,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 09:52:55,699 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:57:24,596 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-896} connected  
 
 2020-11-16 09:57:24,633 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-897} connected  
 
 2020-11-16 09:57:24,663 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-898} connected  
 
 2020-11-16 09:57:24,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-899} connected  
 
 2020-11-16 09:57:24,717 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-900} connected  
 
 2020-11-16 09:57:24,726 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:57:25,053 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 09:57:25,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 09:57:25,096 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 09:57:25,119 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 32.8191 millis. select * from t_types  
 
 2020-11-16 09:57:25,129 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 09:57:25,134 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 09:57:25,159 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 09:57:25,167 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 09:57:25,169 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 09:57:25,171 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 09:57:25,175 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 09:57:25,177 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 09:57:25,179 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 09:57:25,185 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 09:57:25,189 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:57:25,230 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:57:25,232 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 09:57:25,235 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 09:57:25,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 09:57:25,239 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.7067 millis. select * from t_tages  
 
 2020-11-16 09:57:25,240 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 09:57:25,241 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 09:57:25,242 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 09:57:25,245 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 09:57:25,246 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 09:57:25,248 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 09:57:25,249 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 09:57:25,250 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 09:57:25,252 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 09:57:25,253 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 09:57:25,254 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:57:26,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:57:26,065 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 09:57:26,065 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 09:57:26,071 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 6.6746 millis. select * from t_types  
 
 2020-11-16 09:57:26,072 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-16 09:57:26,072 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-16 09:57:26,075 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 09:57:26,079 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 09:57:26,082 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 09:57:26,083 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 09:57:26,086 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 09:57:26,088 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 09:57:26,089 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-16 09:57:26,091 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 09:57:26,092 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:57:26,093 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:57:26,094 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 09:57:26,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 09:57:26,096 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.0025 millis. select * from t_tages  
 
 2020-11-16 09:57:26,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 09:57:26,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 09:57:26,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 09:57:26,098 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 09:57:26,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 09:57:26,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 09:57:26,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 09:57:26,102 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 09:57:26,103 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 09:57:26,104 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 09:57:26,104 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:58:37,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-901} connected  
 
 2020-11-16 09:58:37,775 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-902} connected  
 
 2020-11-16 09:58:37,792 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-903} connected  
 
 2020-11-16 09:58:37,806 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-904} connected  
 
 2020-11-16 09:58:37,819 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-905} connected  
 
 2020-11-16 09:58:37,824 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:58:38,012 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 09:58:38,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 09:58:38,064 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 09:58:38,086 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 30.6823 millis. select * from t_types  
 
 2020-11-16 09:58:38,094 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 09:58:38,098 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 09:58:38,117 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 09:58:38,122 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 09:58:38,123 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 09:58:38,124 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 09:58:38,126 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 09:58:38,127 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 09:58:38,128 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 09:58:38,132 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 09:58:38,134 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 09:58:38,159 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 09:58:38,161 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 09:58:38,163 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 09:58:38,164 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 09:58:38,166 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.3422 millis. select * from t_tages  
 
 2020-11-16 09:58:38,167 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 09:58:38,168 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 09:58:38,169 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 09:58:38,171 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 09:58:38,172 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 09:58:38,173 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 09:58:38,175 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 09:58:38,176 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 09:58:38,177 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 09:58:38,178 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 09:58:38,179 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:04:48,821 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-906} connected  
 
 2020-11-16 10:04:48,876 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-907} connected  
 
 2020-11-16 10:04:48,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-908} connected  
 
 2020-11-16 10:04:48,953 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-909} connected  
 
 2020-11-16 10:04:48,989 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-910} connected  
 
 2020-11-16 10:04:49,002 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:04:49,357 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 10:04:49,388 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 10:04:49,389 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 10:04:49,405 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 23.0238 millis. select * from t_types  
 
 2020-11-16 10:04:49,414 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 10:04:49,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 10:04:49,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 10:04:49,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 10:04:49,463 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 10:04:49,464 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 10:04:49,469 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 10:04:49,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 10:04:49,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 10:04:49,482 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 10:04:49,487 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:04:49,541 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:04:49,545 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 10:04:49,548 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 10:04:49,549 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 10:04:49,554 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 6.2355 millis. select * from t_tages  
 
 2020-11-16 10:04:49,556 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 10:04:49,558 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 10:04:49,561 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 10:04:49,564 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 10:04:49,568 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 10:04:49,571 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 10:04:49,574 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 10:04:49,577 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 10:04:49,580 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 10:04:49,582 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 10:04:49,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:05:51,318 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-911} connected  
 
 2020-11-16 10:05:51,358 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-912} connected  
 
 2020-11-16 10:05:51,381 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-913} connected  
 
 2020-11-16 10:05:51,400 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-914} connected  
 
 2020-11-16 10:05:51,415 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-915} connected  
 
 2020-11-16 10:05:51,422 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:05:51,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 10:05:51,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 10:05:51,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 10:05:51,659 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 17.9655 millis. select * from t_types  
 
 2020-11-16 10:05:51,663 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 10:05:51,666 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 10:05:51,677 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 10:05:51,680 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 10:05:51,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 10:05:51,682 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 10:05:51,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 10:05:51,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 10:05:51,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 10:05:51,687 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 10:05:51,689 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:05:51,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:05:51,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 10:05:51,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 10:05:51,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 10:05:51,706 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.539 millis. select * from t_tages  
 
 2020-11-16 10:05:51,706 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 10:05:51,707 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 10:05:51,707 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 10:05:51,708 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 10:05:51,709 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 10:05:51,709 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 10:05:51,709 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 10:05:51,710 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 10:05:51,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 10:05:51,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 10:05:51,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:09:34,732 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-916} connected  
 
 2020-11-16 10:09:34,751 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-917} connected  
 
 2020-11-16 10:09:34,767 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-918} connected  
 
 2020-11-16 10:09:34,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-919} connected  
 
 2020-11-16 10:09:34,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-920} connected  
 
 2020-11-16 10:09:34,843 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:09:35,325 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 10:09:35,393 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 10:09:35,395 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 10:09:35,430 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 47.8012 millis. select * from t_types  
 
 2020-11-16 10:09:35,445 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 10:09:35,452 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 10:09:35,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 10:09:35,493 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 10:09:35,495 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 10:09:35,496 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 10:09:35,499 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 10:09:35,500 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 10:09:35,502 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 10:09:35,505 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 10:09:35,507 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:09:35,536 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:09:35,538 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 10:09:35,540 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 10:09:35,542 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 10:09:35,544 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.4123 millis. select * from t_tages  
 
 2020-11-16 10:09:35,545 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 10:09:35,546 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 10:09:35,547 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 10:09:35,548 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 10:09:35,550 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 10:09:35,551 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 10:09:35,551 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 10:09:35,552 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 10:09:35,553 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 10:09:35,554 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 10:09:35,555 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:09:48,201 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:09:48,385 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 10:09:48,390 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 10:09:48,391 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 10:09:48,405 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 15.3619 millis. select * from t_user where username=?  
 
 2020-11-16 10:09:48,406 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 10:09:48,407 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 10:09:48,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 10:09:48,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 10:09:48,422 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 10:09:48,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:09:55,550 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:09:55,551 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:09:55,585 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:09:55,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_types  
 
 2020-11-16 10:09:55,592 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : []  
 
 2020-11-16 10:09:55,593 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : []  
 
 2020-11-16 10:09:55,603 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 11.422 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 10:09:55,605 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-16 10:09:55,606 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [count(0)]  
 
 2020-11-16 10:09:55,608 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [6]  
 
 2020-11-16 10:09:55,611 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-16 10:09:55,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 10:09:55,622 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select * from t_types LIMIT ?   
 
 2020-11-16 10:09:55,628 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [5]  
 
 2020-11-16 10:09:55,629 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER]  
 
 2020-11-16 10:09:55,634 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 6.7972 millis. select * from t_types LIMIT ?   
 
 2020-11-16 10:09:55,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} open  
 
 2020-11-16 10:09:55,637 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Header: [id, name]  
 
 2020-11-16 10:09:55,638 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [8, 方法论]  
 
 2020-11-16 10:09:55,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [9, 理论类]  
 
 2020-11-16 10:09:55,643 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [21, 错误日记]  
 
 2020-11-16 10:09:55,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [23, 开发日记]  
 
 2020-11-16 10:09:55,647 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [24, 实践论]  
 
 2020-11-16 10:09:55,650 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} closed  
 
 2020-11-16 10:09:55,652 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 10:09:55,653 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:09:57,741 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:09:57,744 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. SELECT count(0) FROM t_tages  
 
 2020-11-16 10:09:57,745 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : []  
 
 2020-11-16 10:09:57,746 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : []  
 
 2020-11-16 10:09:57,749 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 3.8001 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 10:09:57,750 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} open  
 
 2020-11-16 10:09:57,750 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Header: [count(0)]  
 
 2020-11-16 10:09:57,751 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Result: [6]  
 
 2020-11-16 10:09:57,752 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} closed  
 
 2020-11-16 10:09:57,753 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-16 10:09:57,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. select * from t_tages LIMIT ?   
 
 2020-11-16 10:09:57,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [5]  
 
 2020-11-16 10:09:57,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER]  
 
 2020-11-16 10:09:57,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 2.7119 millis. select * from t_tages LIMIT ?   
 
 2020-11-16 10:09:57,760 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} open  
 
 2020-11-16 10:09:57,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Header: [id, tage]  
 
 2020-11-16 10:09:57,762 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [1, 学习]  
 
 2020-11-16 10:09:57,764 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [2, 错误笔记]  
 
 2020-11-16 10:09:57,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [3, 数据库笔记]  
 
 2020-11-16 10:09:57,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [4, 程序运行日记]  
 
 2020-11-16 10:09:57,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [5, 开发日记]  
 
 2020-11-16 10:09:57,767 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} closed  
 
 2020-11-16 10:09:57,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-16 10:09:57,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:10:08,795 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:10:08,796 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [admin]  
 
 2020-11-16 10:10:08,797 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 10:10:08,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.2309 millis. select * from t_user where username=?  
 
 2020-11-16 10:10:08,799 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50007} open  
 
 2020-11-16 10:10:08,799 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50007} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 10:10:08,800 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50007} Result: [4, admin, $2a$10$77KRGBQYXA3LOR.2plwkGex4Ns9uhk0EFw7LwGvKCqFKvRCeYFXne, 24354666@qq.com, 2, https://picsum.photos/seed/picsum/200/300, 2020-11-14 05:06:04.0, 2020-11-14 05:06:04.0]  
 
 2020-11-16 10:10:08,802 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50007} closed  
 
 2020-11-16 10:10:08,802 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 10:10:08,803 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:10:11,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:10:11,860 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 10:10:11,861 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 10:10:11,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 2.6077 millis. select * from t_types  
 
 2020-11-16 10:10:11,863 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} open  
 
 2020-11-16 10:10:11,864 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Header: [id, name]  
 
 2020-11-16 10:10:11,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [8, 方法论]  
 
 2020-11-16 10:10:11,866 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [9, 理论类]  
 
 2020-11-16 10:10:11,867 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [21, 错误日记]  
 
 2020-11-16 10:10:11,868 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [23, 开发日记]  
 
 2020-11-16 10:10:11,869 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [24, 实践论]  
 
 2020-11-16 10:10:11,870 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [25, 想法论]  
 
 2020-11-16 10:10:11,872 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} closed  
 
 2020-11-16 10:10:11,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 10:10:11,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:10:11,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:10:11,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 10:10:11,875 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 10:10:11,877 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.1522 millis. select * from t_tages  
 
 2020-11-16 10:10:11,877 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} open  
 
 2020-11-16 10:10:11,878 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Header: [id, tage]  
 
 2020-11-16 10:10:11,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [1, 学习]  
 
 2020-11-16 10:10:11,880 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [2, 错误笔记]  
 
 2020-11-16 10:10:11,881 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [3, 数据库笔记]  
 
 2020-11-16 10:10:11,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [4, 程序运行日记]  
 
 2020-11-16 10:10:11,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [5, 开发日记]  
 
 2020-11-16 10:10:11,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [8, 开发手册]  
 
 2020-11-16 10:10:11,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} closed  
 
 2020-11-16 10:10:11,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 10:10:11,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:12:15,782 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-922} connected  
 
 2020-11-16 10:12:15,812 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-923} connected  
 
 2020-11-16 10:12:15,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-924} connected  
 
 2020-11-16 10:12:15,846 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-925} connected  
 
 2020-11-16 10:12:15,860 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-926} connected  
 
 2020-11-16 10:12:15,864 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:12:16,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 10:12:16,042 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 10:12:16,043 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 10:12:16,053 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 13.7204 millis. select * from t_types  
 
 2020-11-16 10:12:16,057 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 10:12:16,060 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 10:12:16,069 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 10:12:16,073 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 10:12:16,074 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 10:12:16,074 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 10:12:16,076 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 10:12:16,076 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 10:12:16,077 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 10:12:16,079 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 10:12:16,080 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:12:16,093 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:12:16,094 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 10:12:16,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 10:12:16,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 10:12:16,096 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.3647 millis. select * from t_tages  
 
 2020-11-16 10:12:16,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 10:12:16,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 10:12:16,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 10:12:16,098 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 10:12:16,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 10:12:16,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 10:12:16,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 10:12:16,100 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 10:12:16,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 10:12:16,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 10:12:16,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:12:16,387 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:12:16,388 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 10:12:16,389 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 10:12:16,394 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 6.0607 millis. select * from t_types  
 
 2020-11-16 10:12:16,395 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-16 10:12:16,396 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-16 10:12:16,397 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 10:12:16,400 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 10:12:16,402 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 10:12:16,403 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 10:12:16,405 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 10:12:16,407 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 10:12:16,408 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-16 10:12:16,410 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 10:12:16,411 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 10:12:16,412 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 10:12:16,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 10:12:16,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 10:12:16,415 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.739 millis. select * from t_tages  
 
 2020-11-16 10:12:16,415 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 10:12:16,416 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 10:12:16,416 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 10:12:16,417 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 10:12:16,418 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 10:12:16,419 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 10:12:16,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 10:12:16,422 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 10:12:16,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 10:12:16,425 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 10:12:16,426 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:00:38,195 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-936} connected  
 
 2020-11-16 11:00:38,250 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-937} connected  
 
 2020-11-16 11:00:38,291 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-938} connected  
 
 2020-11-16 11:00:38,331 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-939} connected  
 
 2020-11-16 11:00:38,368 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-940} connected  
 
 2020-11-16 11:00:38,382 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:00:38,786 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 11:00:38,819 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 11:00:38,821 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 11:00:38,835 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 23.3627 millis. select * from t_types  
 
 2020-11-16 11:00:38,839 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 11:00:38,841 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 11:00:38,851 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 11:00:38,855 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 11:00:38,856 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 11:00:38,856 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 11:00:38,857 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 11:00:38,858 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 11:00:38,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 11:00:38,861 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:00:38,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:00:38,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:00:38,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 11:00:38,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:00:38,888 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:00:38,889 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.0151 millis. select * from t_tages  
 
 2020-11-16 11:00:38,890 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 11:00:38,890 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 11:00:38,891 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 11:00:38,892 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 11:00:38,893 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 11:00:38,893 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 11:00:38,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 11:00:38,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 11:00:38,895 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 11:00:38,896 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:00:38,896 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:00:41,799 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:00:41,891 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 11:00:41,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 11:00:41,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 11:00:41,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 4.0795 millis. select * from t_user where username=?  
 
 2020-11-16 11:00:41,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 11:00:41,899 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 11:00:41,902 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 11:00:41,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 11:00:41,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 11:00:41,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:00:45,433 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:00:45,435 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:00:45,436 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:00:45,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.4606 millis. select * from t_tages  
 
 2020-11-16 11:00:45,438 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 11:00:45,439 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 11:00:45,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 11:00:45,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 11:00:45,442 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 11:00:45,443 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 11:00:45,444 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 11:00:45,446 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 11:00:45,448 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 11:00:45,449 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:00:45,450 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:00:45,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:00:45,453 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 11:00:45,454 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 11:00:45,457 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 3.1515 millis. select * from t_types  
 
 2020-11-16 11:00:45,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} open  
 
 2020-11-16 11:00:45,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Header: [id, name]  
 
 2020-11-16 11:00:45,460 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [8, 方法论]  
 
 2020-11-16 11:00:45,461 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [9, 理论类]  
 
 2020-11-16 11:00:45,463 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [21, 错误日记]  
 
 2020-11-16 11:00:45,464 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [23, 开发日记]  
 
 2020-11-16 11:00:45,465 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [24, 实践论]  
 
 2020-11-16 11:00:45,465 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [25, 想法论]  
 
 2020-11-16 11:00:45,467 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} closed  
 
 2020-11-16 11:00:45,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:00:45,469 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:00:54,752 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:00:54,753 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:00:54,754 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:00:54,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.3291 millis. select * from t_tages  
 
 2020-11-16 11:00:54,756 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} open  
 
 2020-11-16 11:00:54,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Header: [id, tage]  
 
 2020-11-16 11:00:54,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [1, 学习]  
 
 2020-11-16 11:00:54,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [2, 错误笔记]  
 
 2020-11-16 11:00:54,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [3, 数据库笔记]  
 
 2020-11-16 11:00:54,760 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [4, 程序运行日记]  
 
 2020-11-16 11:00:54,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [5, 开发日记]  
 
 2020-11-16 11:00:54,763 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [8, 开发手册]  
 
 2020-11-16 11:00:54,764 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} closed  
 
 2020-11-16 11:00:54,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:00:54,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:00:54,767 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:00:54,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 11:00:54,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 11:00:54,770 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 2.009 millis. select * from t_types  
 
 2020-11-16 11:00:54,771 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} open  
 
 2020-11-16 11:00:54,772 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Header: [id, name]  
 
 2020-11-16 11:00:54,773 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [8, 方法论]  
 
 2020-11-16 11:00:54,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [9, 理论类]  
 
 2020-11-16 11:00:54,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [21, 错误日记]  
 
 2020-11-16 11:00:54,776 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [23, 开发日记]  
 
 2020-11-16 11:00:54,778 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [24, 实践论]  
 
 2020-11-16 11:00:54,779 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [25, 想法论]  
 
 2020-11-16 11:00:54,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} closed  
 
 2020-11-16 11:00:54,782 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:00:54,783 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:12:37,679 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-941} connected  
 
 2020-11-16 11:12:37,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-942} connected  
 
 2020-11-16 11:12:37,735 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-943} connected  
 
 2020-11-16 11:12:37,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-944} connected  
 
 2020-11-16 11:12:37,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-945} connected  
 
 2020-11-16 11:12:37,788 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:12:38,394 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 11:12:38,460 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 11:12:38,461 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 11:12:38,495 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 50.8591 millis. select * from t_user where username=?  
 
 2020-11-16 11:12:38,509 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 11:12:38,517 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 11:12:38,556 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 11:12:38,570 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 11:12:38,577 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:12:38,581 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:12:51,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:12:51,896 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 11:12:51,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:12:51,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:12:51,900 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.1934 millis. select * from t_tages  
 
 2020-11-16 11:12:51,901 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 11:12:51,902 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 11:12:51,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 11:12:51,904 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 11:12:51,905 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 11:12:51,905 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 11:12:51,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 11:12:51,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 11:12:51,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 11:12:51,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:12:51,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:12:51,914 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:12:51,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 11:12:51,916 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 11:12:51,917 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 11:12:51,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.4592 millis. select * from t_types  
 
 2020-11-16 11:12:51,920 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 11:12:51,920 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 11:12:51,921 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 11:12:51,922 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 11:12:51,923 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 11:12:51,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 11:12:51,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 11:12:51,926 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 11:12:51,927 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 11:12:51,928 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 11:12:51,929 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:14:10,456 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-946} connected  
 
 2020-11-16 11:14:10,498 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-947} connected  
 
 2020-11-16 11:14:10,528 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-948} connected  
 
 2020-11-16 11:14:10,562 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-949} connected  
 
 2020-11-16 11:14:10,591 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-950} connected  
 
 2020-11-16 11:14:10,602 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:14:11,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 11:14:11,390 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 11:14:11,391 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 11:14:11,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 46.2013 millis. select * from t_user where username=?  
 
 2020-11-16 11:14:11,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 11:14:11,444 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 11:14:11,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 11:14:11,497 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 11:14:11,504 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:14:11,510 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:14:16,591 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:14:16,595 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 11:14:16,597 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:14:16,597 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:14:16,604 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.0716 millis. select * from t_tages  
 
 2020-11-16 11:14:16,605 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 11:14:16,605 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 11:14:16,606 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 11:14:16,607 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 11:14:16,608 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 11:14:16,609 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 11:14:16,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 11:14:16,611 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 11:14:16,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 11:14:16,613 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:14:16,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:14:16,617 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:14:16,618 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 11:14:16,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 11:14:16,621 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 11:14:16,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.5038 millis. select * from t_types  
 
 2020-11-16 11:14:16,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 11:14:16,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 11:14:16,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 11:14:16,626 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 11:14:16,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 11:14:16,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 11:14:16,628 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 11:14:16,628 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 11:14:16,630 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 11:14:16,630 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 11:14:16,631 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:15:25,147 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-951} connected  
 
 2020-11-16 11:15:25,188 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-952} connected  
 
 2020-11-16 11:15:25,211 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-953} connected  
 
 2020-11-16 11:15:25,234 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-954} connected  
 
 2020-11-16 11:15:25,256 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-955} connected  
 
 2020-11-16 11:15:25,264 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:15:25,896 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 11:15:25,962 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 11:15:25,964 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 11:15:25,994 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 45.48 millis. select * from t_user where username=?  
 
 2020-11-16 11:15:26,007 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 11:15:26,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 11:15:26,052 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 11:15:26,066 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 11:15:26,072 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:15:26,076 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:15:32,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:15:32,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 11:15:32,814 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:15:32,815 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:15:32,821 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.1272 millis. select * from t_tages  
 
 2020-11-16 11:15:32,822 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 11:15:32,823 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 11:15:32,823 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 11:15:32,824 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 11:15:32,825 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 11:15:32,825 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 11:15:32,826 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 11:15:32,826 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 11:15:32,827 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 11:15:32,828 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:15:32,828 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:15:32,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:15:32,832 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 11:15:32,832 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 11:15:32,833 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 11:15:32,834 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.6101 millis. select * from t_types  
 
 2020-11-16 11:15:32,834 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 11:15:32,835 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 11:15:32,835 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 11:15:32,836 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 11:15:32,837 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 11:15:32,837 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 11:15:32,838 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 11:15:32,839 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 11:15:32,841 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 11:15:32,841 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 11:15:32,842 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:35:51,113 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-956} connected  
 
 2020-11-16 11:35:51,168 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-957} connected  
 
 2020-11-16 11:35:51,211 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-958} connected  
 
 2020-11-16 11:35:51,248 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-959} connected  
 
 2020-11-16 11:35:51,298 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-960} connected  
 
 2020-11-16 11:35:51,313 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:35:52,084 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 11:35:52,146 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 11:35:52,147 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 11:35:52,169 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 32.5956 millis. select * from t_user where username=?  
 
 2020-11-16 11:35:52,177 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 11:35:52,181 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 11:35:52,203 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 11:35:52,211 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 11:35:52,215 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:35:52,217 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:35:55,240 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:35:55,243 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 11:35:55,244 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:35:55,244 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:35:55,247 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.2234 millis. select * from t_tages  
 
 2020-11-16 11:35:55,247 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 11:35:55,248 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 11:35:55,249 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 11:35:55,250 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 11:35:55,250 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 11:35:55,250 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 11:35:55,251 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 11:35:55,252 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 11:35:55,252 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 11:35:55,253 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:35:55,253 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:35:55,256 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:35:55,257 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 11:35:55,258 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 11:35:55,258 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 11:35:55,259 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.5667 millis. select * from t_types  
 
 2020-11-16 11:35:55,260 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 11:35:55,260 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 11:35:55,261 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 11:35:55,262 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 11:35:55,262 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 11:35:55,263 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 11:35:55,263 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 11:35:55,264 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 11:35:55,266 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 11:35:55,267 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 11:35:55,267 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:39:04,230 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-961} connected  
 
 2020-11-16 11:39:04,257 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-962} connected  
 
 2020-11-16 11:39:04,274 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-963} connected  
 
 2020-11-16 11:39:04,290 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-964} connected  
 
 2020-11-16 11:39:04,306 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-965} connected  
 
 2020-11-16 11:39:04,311 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:39:04,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 11:39:05,001 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 11:39:05,002 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 11:39:05,026 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 32.1319 millis. select * from t_user where username=?  
 
 2020-11-16 11:39:05,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 11:39:05,040 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 11:39:05,074 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 11:39:05,085 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 11:39:05,089 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:39:05,093 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:39:07,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:39:07,534 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 11:39:07,536 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:39:07,536 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:39:07,543 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.9617 millis. select * from t_tages  
 
 2020-11-16 11:39:07,544 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 11:39:07,545 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 11:39:07,546 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 11:39:07,547 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 11:39:07,548 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 11:39:07,550 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 11:39:07,551 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 11:39:07,551 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 11:39:07,553 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 11:39:07,553 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:39:07,554 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:39:07,558 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:39:07,559 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 11:39:07,560 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 11:39:07,561 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 11:39:07,563 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.3482 millis. select * from t_types  
 
 2020-11-16 11:39:07,564 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 11:39:07,565 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 11:39:07,566 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 11:39:07,567 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 11:39:07,568 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 11:39:07,569 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 11:39:07,570 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 11:39:07,570 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 11:39:07,572 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 11:39:07,573 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 11:39:07,573 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:42:38,453 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-967} connected  
 
 2020-11-16 11:42:38,469 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-968} connected  
 
 2020-11-16 11:42:38,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-969} connected  
 
 2020-11-16 11:42:38,490 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-970} connected  
 
 2020-11-16 11:42:38,511 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-971} connected  
 
 2020-11-16 11:42:38,519 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:42:38,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 11:42:38,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 11:42:38,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 11:42:38,947 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 29.2938 millis. select * from t_user where username=?  
 
 2020-11-16 11:42:38,955 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 11:42:38,958 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 11:42:38,982 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 11:42:38,990 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 11:42:38,994 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:42:38,997 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:42:41,273 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:42:41,277 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 11:42:41,278 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:42:41,278 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:42:41,281 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.1794 millis. select * from t_tages  
 
 2020-11-16 11:42:41,282 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 11:42:41,282 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 11:42:41,284 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 11:42:41,285 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 11:42:41,287 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 11:42:41,287 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 11:42:41,288 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 11:42:41,289 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 11:42:41,290 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 11:42:41,291 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:42:41,292 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:42:41,293 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:42:41,295 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 11:42:41,296 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 11:42:41,297 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 11:42:41,299 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.9831 millis. select * from t_types  
 
 2020-11-16 11:42:41,300 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 11:42:41,301 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 11:42:41,301 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 11:42:41,303 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 11:42:41,303 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 11:42:41,304 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 11:42:41,305 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 11:42:41,306 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 11:42:41,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 11:42:41,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 11:42:41,309 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:43:33,412 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-972} connected  
 
 2020-11-16 11:43:33,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-973} connected  
 
 2020-11-16 11:43:33,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-974} connected  
 
 2020-11-16 11:43:33,452 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-975} connected  
 
 2020-11-16 11:43:33,463 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-976} connected  
 
 2020-11-16 11:43:33,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:43:33,787 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 11:43:33,843 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 11:43:33,844 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 11:43:33,872 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 38.4706 millis. select * from t_user where username=?  
 
 2020-11-16 11:43:33,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 11:43:33,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 11:43:33,920 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 11:43:33,936 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 11:43:33,944 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 11:43:33,949 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:43:38,193 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:43:38,197 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 11:43:38,198 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 11:43:38,199 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 11:43:38,203 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.1486 millis. select * from t_tages  
 
 2020-11-16 11:43:38,204 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 11:43:38,205 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 11:43:38,205 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 11:43:38,207 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 11:43:38,208 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 11:43:38,209 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 11:43:38,210 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 11:43:38,211 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 11:43:38,213 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 11:43:38,214 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 11:43:38,215 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 11:43:38,216 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 11:43:38,218 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 11:43:38,219 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 11:43:38,219 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 11:43:38,222 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.3521 millis. select * from t_types  
 
 2020-11-16 11:43:38,222 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 11:43:38,223 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 11:43:38,223 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 11:43:38,225 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 11:43:38,225 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 11:43:38,226 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 11:43:38,227 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 11:43:38,228 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 11:43:38,231 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 11:43:38,232 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 11:43:38,233 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:46:19,810 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-977} connected  
 
 2020-11-16 12:46:19,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-978} connected  
 
 2020-11-16 12:46:19,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-979} connected  
 
 2020-11-16 12:46:19,944 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-980} connected  
 
 2020-11-16 12:46:19,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-981} connected  
 
 2020-11-16 12:46:20,000 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:46:20,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 12:46:20,506 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 12:46:20,508 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 12:46:20,549 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 55.4439 millis. select * from t_user where username=?  
 
 2020-11-16 12:46:20,565 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 12:46:20,577 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 12:46:20,602 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 12:46:20,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 12:46:20,613 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 12:46:20,616 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:46:26,896 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:46:26,900 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 12:46:26,901 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 12:46:26,902 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 12:46:26,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.3401 millis. select * from t_tages  
 
 2020-11-16 12:46:26,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 12:46:26,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 12:46:26,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 12:46:26,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 12:46:26,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 12:46:26,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 12:46:26,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 12:46:26,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 12:46:26,912 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 12:46:26,912 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 12:46:26,913 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:46:26,913 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:46:26,914 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 12:46:26,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 12:46:26,916 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 12:46:26,917 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.9465 millis. select * from t_types  
 
 2020-11-16 12:46:26,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 12:46:26,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 12:46:26,920 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 12:46:26,921 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 12:46:26,922 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 12:46:26,923 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 12:46:26,923 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 12:46:26,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 12:46:26,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 12:46:26,926 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 12:46:26,926 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:50:31,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-982} connected  
 
 2020-11-16 12:50:31,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-983} connected  
 
 2020-11-16 12:50:31,510 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-984} connected  
 
 2020-11-16 12:50:31,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-985} connected  
 
 2020-11-16 12:50:31,554 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-986} connected  
 
 2020-11-16 12:50:31,561 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:50:32,061 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 12:50:32,103 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 12:50:32,104 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 12:50:32,125 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 30.6095 millis. select * from t_user where username=?  
 
 2020-11-16 12:50:32,133 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 12:50:32,138 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 12:50:32,164 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 12:50:32,176 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 12:50:32,182 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 12:50:32,187 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:50:34,754 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:50:34,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 12:50:34,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 12:50:34,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 12:50:34,764 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.7927 millis. select * from t_tages  
 
 2020-11-16 12:50:34,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 12:50:34,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 12:50:34,767 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 12:50:34,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 12:50:34,769 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 12:50:34,770 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 12:50:34,771 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 12:50:34,772 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 12:50:34,773 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 12:50:34,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 12:50:34,775 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:50:34,776 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:50:34,777 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 12:50:34,778 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 12:50:34,778 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 12:50:34,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.9611 millis. select * from t_types  
 
 2020-11-16 12:50:34,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 12:50:34,782 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 12:50:34,783 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 12:50:34,784 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 12:50:34,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 12:50:34,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 12:50:34,786 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 12:50:34,786 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 12:50:34,787 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 12:50:34,788 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 12:50:34,788 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:52:39,327 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-987} connected  
 
 2020-11-16 12:52:39,381 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-988} connected  
 
 2020-11-16 12:52:39,422 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-989} connected  
 
 2020-11-16 12:52:39,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-990} connected  
 
 2020-11-16 12:52:39,497 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-991} connected  
 
 2020-11-16 12:52:39,511 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:52:40,239 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 12:52:40,266 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 12:52:40,267 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 12:52:40,283 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 23.081 millis. select * from t_user where username=?  
 
 2020-11-16 12:52:40,289 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 12:52:40,294 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 12:52:40,330 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 12:52:40,343 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 12:52:40,349 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 12:52:40,353 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:52:42,407 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:52:42,411 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 12:52:42,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 12:52:42,414 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 12:52:42,423 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 5.4444 millis. select * from t_tages  
 
 2020-11-16 12:52:42,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 12:52:42,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 12:52:42,425 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 12:52:42,427 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 12:52:42,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 12:52:42,429 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 12:52:42,431 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 12:52:42,431 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 12:52:42,433 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 12:52:42,433 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 12:52:42,434 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 12:52:42,436 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 12:52:42,438 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 12:52:42,439 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 12:52:42,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 12:52:42,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.3678 millis. select * from t_types  
 
 2020-11-16 12:52:42,443 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 12:52:42,444 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 12:52:42,444 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 12:52:42,446 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 12:52:42,447 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 12:52:42,448 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 12:52:42,449 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 12:52:42,450 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 12:52:42,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 12:52:42,452 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 12:52:42,452 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:26:02,382 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-996} connected  
 
 2020-11-16 13:26:02,434 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-997} connected  
 
 2020-11-16 13:26:02,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-998} connected  
 
 2020-11-16 13:26:02,513 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-999} connected  
 
 2020-11-16 13:26:02,546 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-1000} connected  
 
 2020-11-16 13:26:02,559 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:26:03,277 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 13:26:03,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 13:26:03,341 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 13:26:03,366 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 39.3518 millis. select * from t_user where username=?  
 
 2020-11-16 13:26:03,373 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 13:26:03,377 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 13:26:03,399 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 13:26:03,406 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 13:26:03,410 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:26:03,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:26:06,278 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:26:06,281 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 13:26:06,282 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:26:06,283 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:26:06,298 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 12.3494 millis. select * from t_tages  
 
 2020-11-16 13:26:06,299 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 13:26:06,300 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 13:26:06,301 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 13:26:06,302 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 13:26:06,303 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 13:26:06,304 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 13:26:06,306 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 13:26:06,307 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 13:26:06,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 13:26:06,309 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:26:06,310 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:26:06,311 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:26:06,312 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 13:26:06,313 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 13:26:06,314 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 13:26:06,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.7019 millis. select * from t_types  
 
 2020-11-16 13:26:06,317 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 13:26:06,318 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 13:26:06,319 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 13:26:06,320 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 13:26:06,321 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 13:26:06,322 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 13:26:06,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 13:26:06,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 13:26:06,325 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 13:26:06,326 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 13:26:06,327 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:28:41,670 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-16 13:28:41,673 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-16 13:28:41,674 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-16 13:28:41,677 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-16 13:28:41,680 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-16 13:28:41,687 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006,procId-1001} connected  
 
 2020-11-16 13:28:41,688 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-16 13:28:41,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} created. insert into t_blogtage
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpictuer
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            piblish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:28:41,708 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Parameters : [null, Java基本数据类型, ##String数据类型
是一种引用数据类型, https://picsum.photos/seed/picsum/800/450, null, null, true, false, true, false, true]  
 
 2020-11-16 13:28:41,709 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, OTHER, OTHER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-16 13:28:41,749 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10006, pstmt-20003} execute error. insert into t_blogtage
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpictuer
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            piblish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 java.sql.SQLSyntaxErrorException: Table 'blog.t_blogtage' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy105.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy103.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.addForNotMath(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.addForNotMath(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.addForNotMath(BaseServiceImpl.java:66)
	at com.example.blog.service.BlogTageServiceImpl.insert(BlogTageServiceImpl.java:21)
	at com.example.blog.controller.BlogController.addBlog(BlogController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-16 13:28:41,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} clearParameters.   
 
 2020-11-16 13:28:41,756 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} closed  
 
 2020-11-16 13:28:41,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-16 13:28:41,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-16 13:28:41,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-16 13:31:49,611 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-1002} connected  
 
 2020-11-16 13:31:49,643 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-1003} connected  
 
 2020-11-16 13:31:49,666 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-1004} connected  
 
 2020-11-16 13:31:49,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-1005} connected  
 
 2020-11-16 13:31:49,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-1006} connected  
 
 2020-11-16 13:31:49,718 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:31:50,193 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 13:31:50,222 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 13:31:50,223 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 13:31:50,231 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 13.043 millis. select * from t_types  
 
 2020-11-16 13:31:50,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 13:31:50,241 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 13:31:50,256 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 13:31:50,259 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 13:31:50,260 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 13:31:50,261 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 13:31:50,263 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 13:31:50,263 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 13:31:50,265 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 13:31:50,268 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:31:50,269 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:31:50,271 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:31:50,273 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 13:31:50,274 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:31:50,275 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:31:50,277 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.9545 millis. select * from t_tages  
 
 2020-11-16 13:31:50,278 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 13:31:50,278 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 13:31:50,279 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 13:31:50,281 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 13:31:50,283 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 13:31:50,283 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 13:31:50,283 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 13:31:50,284 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 13:31:50,285 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 13:31:50,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:31:50,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:31:50,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:31:50,922 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 13:31:50,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 13:31:50,943 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 21.4797 millis. select * from t_types  
 
 2020-11-16 13:31:50,945 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-16 13:31:50,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-16 13:31:50,948 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 13:31:50,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 13:31:50,958 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 13:31:50,961 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 13:31:50,965 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 13:31:50,966 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 13:31:50,970 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-16 13:31:50,972 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:31:50,973 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:31:50,975 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:31:50,977 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:31:50,978 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:31:50,980 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.7653 millis. select * from t_tages  
 
 2020-11-16 13:31:50,981 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 13:31:50,983 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 13:31:50,984 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 13:31:50,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 13:31:50,988 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 13:31:50,990 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 13:31:50,991 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 13:31:50,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 13:31:50,995 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 13:31:50,997 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:31:50,998 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:31:58,176 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:31:58,358 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 13:31:58,362 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 13:31:58,363 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 13:31:58,367 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 4.9709 millis. select * from t_user where username=?  
 
 2020-11-16 13:31:58,368 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-16 13:31:58,369 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 13:31:58,375 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 13:31:58,380 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-16 13:31:58,382 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 13:31:58,384 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:32:00,362 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:32:00,363 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:32:00,364 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:32:00,366 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.2838 millis. select * from t_tages  
 
 2020-11-16 13:32:00,366 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} open  
 
 2020-11-16 13:32:00,367 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Header: [id, tage]  
 
 2020-11-16 13:32:00,368 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [1, 学习]  
 
 2020-11-16 13:32:00,369 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [2, 错误笔记]  
 
 2020-11-16 13:32:00,370 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [3, 数据库笔记]  
 
 2020-11-16 13:32:00,371 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [4, 程序运行日记]  
 
 2020-11-16 13:32:00,373 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [5, 开发日记]  
 
 2020-11-16 13:32:00,374 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [8, 开发手册]  
 
 2020-11-16 13:32:00,375 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} closed  
 
 2020-11-16 13:32:00,376 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:32:00,377 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:32:00,378 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:32:00,378 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 13:32:00,379 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 13:32:00,381 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 2.4062 millis. select * from t_types  
 
 2020-11-16 13:32:00,382 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} open  
 
 2020-11-16 13:32:00,382 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Header: [id, name]  
 
 2020-11-16 13:32:00,383 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [8, 方法论]  
 
 2020-11-16 13:32:00,384 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [9, 理论类]  
 
 2020-11-16 13:32:00,385 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [21, 错误日记]  
 
 2020-11-16 13:32:00,386 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [23, 开发日记]  
 
 2020-11-16 13:32:00,389 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [24, 实践论]  
 
 2020-11-16 13:32:00,390 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [25, 想法论]  
 
 2020-11-16 13:32:00,391 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} closed  
 
 2020-11-16 13:32:00,391 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:32:00,392 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:32:35,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:32:35,659 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpictuer
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            piblish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:32:35,660 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [null, Java数据类型, ##String数据类型
是一种引用数据类型, https://picsum.photos/seed/picsum/800/450, null, null, true, false, true, false, true]  
 
 2020-11-16 13:32:35,661 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, OTHER, OTHER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-16 13:32:35,684 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10005, pstmt-20003} execute error. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpictuer
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            piblish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 java.sql.SQLSyntaxErrorException: Unknown column 'firstpictuer' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy104.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy102.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.addForNotMath(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.addForNotMath(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.addForNotMath(BaseServiceImpl.java:66)

	at com.example.blog.controller.BlogController.addBlog(BlogController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-16 13:32:35,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 13:32:35,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} closed  
 
 2020-11-16 13:32:35,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:32:35,773 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:32:35,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:35:44,268 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-1010} connected  
 
 2020-11-16 13:35:44,298 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-1011} connected  
 
 2020-11-16 13:35:44,320 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-1012} connected  
 
 2020-11-16 13:35:44,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-1013} connected  
 
 2020-11-16 13:35:44,362 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-1014} connected  
 
 2020-11-16 13:35:44,369 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:35:44,972 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 13:35:45,029 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 13:35:45,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 13:35:45,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 44.6133 millis. select * from t_user where username=?  
 
 2020-11-16 13:35:45,077 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 13:35:45,083 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 13:35:45,121 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 13:35:45,133 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 13:35:45,140 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:35:45,145 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:36:10,452 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:36:10,456 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 13:36:10,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:36:10,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:36:10,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.9665 millis. select * from t_tages  
 
 2020-11-16 13:36:10,467 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 13:36:10,467 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 13:36:10,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 13:36:10,470 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 13:36:10,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 13:36:10,472 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 13:36:10,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 13:36:10,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 13:36:10,475 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 13:36:10,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:36:10,478 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:36:10,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:36:10,481 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 13:36:10,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 13:36:10,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 13:36:10,486 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.0288 millis. select * from t_types  
 
 2020-11-16 13:36:10,487 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 13:36:10,487 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 13:36:10,488 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 13:36:10,490 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 13:36:10,491 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 13:36:10,492 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 13:36:10,493 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 13:36:10,494 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 13:36:10,496 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 13:36:10,496 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 13:36:10,497 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:37:28,529 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-16 13:37:28,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-16 13:37:28,536 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-16 13:37:28,540 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-16 13:37:28,545 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-16 13:37:28,551 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006,procId-1015} connected  
 
 2020-11-16 13:37:28,554 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-16 13:37:28,566 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpictuer
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            piblish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:37:28,569 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Parameters : [null, Java数据类型, ##String数据类型
是一种基本数据类型, null, null, null, true, false, true, false, true]  
 
 2020-11-16 13:37:28,570 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, OTHER, OTHER, OTHER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-16 13:37:28,593 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10006, pstmt-20003} execute error. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpictuer
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            piblish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 java.sql.SQLSyntaxErrorException: Unknown column 'firstpictuer' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy105.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy103.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.addForNotMath(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.addForNotMath(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.addForNotMath(BaseServiceImpl.java:66)
	at com.example.blog.service.BlogTageServiceImpl.insert(BlogTageServiceImpl.java:21)
	at com.example.blog.controller.BlogController.addBlog(BlogController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-16 13:37:28,599 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} clearParameters.   
 
 2020-11-16 13:37:28,599 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} closed  
 
 2020-11-16 13:37:28,601 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-16 13:37:28,721 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-16 13:37:28,722 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-16 13:40:36,696 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-1016} connected  
 
 2020-11-16 13:40:36,716 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-1017} connected  
 
 2020-11-16 13:40:36,728 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-1018} connected  
 
 2020-11-16 13:40:36,743 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-1019} connected  
 
 2020-11-16 13:40:36,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-1020} connected  
 
 2020-11-16 13:40:36,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:40:37,214 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 13:40:37,254 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 13:40:37,255 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 13:40:37,281 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 34.596 millis. select * from t_types  
 
 2020-11-16 13:40:37,290 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 13:40:37,296 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 13:40:37,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 13:40:37,328 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 13:40:37,330 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 13:40:37,331 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 13:40:37,333 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 13:40:37,335 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 13:40:37,336 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 13:40:37,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:40:37,342 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:40:37,345 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:40:37,346 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 13:40:37,348 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:40:37,348 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:40:37,350 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.1717 millis. select * from t_tages  
 
 2020-11-16 13:40:37,350 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 13:40:37,351 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 13:40:37,352 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 13:40:37,353 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 13:40:37,354 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 13:40:37,354 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 13:40:37,355 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 13:40:37,355 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 13:40:37,356 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 13:40:37,357 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:40:37,357 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:40:40,827 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:40:40,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 13:40:40,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 13:40:40,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 13:40:40,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.3581 millis. select * from t_user where username=?  
 
 2020-11-16 13:40:40,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 13:40:40,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 13:40:40,913 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 13:40:40,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 13:40:40,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 13:40:40,916 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:40:44,206 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:40:44,207 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:40:44,208 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:40:44,211 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.8284 millis. select * from t_tages  
 
 2020-11-16 13:40:44,212 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 13:40:44,212 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 13:40:44,213 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 13:40:44,214 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 13:40:44,215 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 13:40:44,216 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 13:40:44,217 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 13:40:44,218 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 13:40:44,220 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 13:40:44,221 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:40:44,221 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:40:44,222 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:40:44,225 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 13:40:44,225 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 13:40:44,228 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 3.0488 millis. select * from t_types  
 
 2020-11-16 13:40:44,229 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} open  
 
 2020-11-16 13:40:44,229 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Header: [id, name]  
 
 2020-11-16 13:40:44,231 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [8, 方法论]  
 
 2020-11-16 13:40:44,232 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [9, 理论类]  
 
 2020-11-16 13:40:44,234 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [21, 错误日记]  
 
 2020-11-16 13:40:44,234 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [23, 开发日记]  
 
 2020-11-16 13:40:44,235 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [24, 实践论]  
 
 2020-11-16 13:40:44,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [25, 想法论]  
 
 2020-11-16 13:40:44,238 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} closed  
 
 2020-11-16 13:40:44,239 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:40:44,240 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:41:36,225 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:41:36,237 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            piblish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:41:36,240 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [null, Java数据类型, ##String数据类型
String是一种引用数据类型, null, null, null, true, false, true, true, true]  
 
 2020-11-16 13:41:36,240 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, OTHER, OTHER, OTHER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-16 13:41:36,258 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10005, pstmt-20003} execute error. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            piblish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 java.sql.SQLSyntaxErrorException: Unknown column 'piblish' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:120)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy104.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy102.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.addForNotMath(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.addForNotMath(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.addForNotMath(BaseServiceImpl.java:66)
	at com.example.blog.service.BlogTageServiceImpl.insert(BlogTageServiceImpl.java:21)
	at com.example.blog.controller.BlogController.addBlog(BlogController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-16 13:41:36,263 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 13:41:36,264 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} closed  
 
 2020-11-16 13:41:36,265 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:41:36,330 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:41:36,331 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:42:37,320 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-1021} connected  
 
 2020-11-16 13:42:37,345 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-1022} connected  
 
 2020-11-16 13:42:37,358 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-1023} connected  
 
 2020-11-16 13:42:37,369 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-1024} connected  
 
 2020-11-16 13:42:37,381 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-1025} connected  
 
 2020-11-16 13:42:37,385 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:42:37,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 13:42:37,931 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 13:42:37,931 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 13:42:37,940 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 12.0786 millis. select * from t_user where username=?  
 
 2020-11-16 13:42:37,944 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 13:42:37,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 13:42:37,955 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 13:42:37,958 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 13:42:37,961 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:42:37,962 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:42:41,419 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:42:41,422 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 13:42:41,423 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:42:41,423 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:42:41,427 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.6785 millis. select * from t_tages  
 
 2020-11-16 13:42:41,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 13:42:41,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 13:42:41,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 13:42:41,429 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 13:42:41,430 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 13:42:41,430 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 13:42:41,431 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 13:42:41,431 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 13:42:41,432 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 13:42:41,432 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:42:41,432 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:42:41,433 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:42:41,434 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 13:42:41,435 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 13:42:41,435 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 13:42:41,436 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.3349 millis. select * from t_types  
 
 2020-11-16 13:42:41,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 13:42:41,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 13:42:41,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 13:42:41,438 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 13:42:41,439 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 13:42:41,439 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 13:42:41,439 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 13:42:41,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 13:42:41,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 13:42:41,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 13:42:41,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:44:25,937 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-16 13:44:25,940 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-16 13:44:25,942 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-16 13:44:25,945 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-16 13:44:25,948 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-16 13:44:25,958 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006,procId-1026} connected  
 
 2020-11-16 13:44:25,959 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-16 13:44:25,972 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:44:25,979 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Parameters : [null, Java笔记, ##笔记
关键字
1 全部是小写，（比如publin）
2 在Notepad++有特色颜色
标识符
1 不能以数字开头
2 不能是关键字
3 标识符可以包括26个英文字母（区分大小写） 0-9数字 $和下划线
命名规则
类名规范  ：首字母大写，后面每一个单词的首字母都要大写（大驼峰式）（比如HelloWorld）
变量名规范  ：首字母小写，后面每一个单词的首字母都要大写（小驼峰式）（比如helloWorld）
方法名规则 ： 和变量名的规则一样
常量
1 凡是用双引号引一起来的部分，都叫字符串常量
2 直接写上数字的，没有小数点，比如100 200 300，都叫整数常量
3 直接写上数字的，有小数点，比如10.2 20.5 ，都叫浮点数常量
4凡是用单引号引一起来的部分，都叫字符常量比如‘2’ ‘3’
5布尔常量 true flae
6空常量 null
数据类型的从小到大顺序
（byte，short，char)-int-long-float-double
基本类型：
public class shuju{
	public static void main(String[] args){
		double num1=2F;//自动转换数据类型，数据范围小的转换为数据大的
		System.out.println(num1);
		int num2=(int)100L;//强制转换数据类型。数据大的转换为数据小
的
		System.out.println(num2);
	}
	
}
三元运算：需要三个数据才可以进行运算的运算符；
格式： 数据类型 变量名称=条件判断 ？表达式A ：表达式B
注意，俩边的数据类型一点要一样的。
public class jiangx{
	public static void main(String[] args){
		int a=10;
		int b=20;
		int max=a>b ? a:b;
		System.out.println("最大值" + max);
	}
}
创建数组
int[] myList = {1.9, 2.9, 3.4, 3.5};

返回值为空：
public static void main(String[] args){
   	HelloWorld()；
} 
public static （void 空值） HelloWorld(){
	for(){
               System.out.println("输入一段文字")
   }
}只输出打印，没有返回值出来
最后一行的return一般不写；
没有返回值的方法只能是单独调用，不能用打印和赋值调用
因为void是一个空值，
调用的方法有三种：一单独调用：sum（10,20）；二打印调用System.out.println（sum（10,20））；三赋值调用：int sum1=sum（10,20）；System.out.println（sum1）
public static void main(String[] args){
   	调用的方法
} 
public static int sum(int a，int b){
	return a+b；
   }
方法重载的主注意事项：
不能有俩个一样的数据参数：
public static void main(String[] args){
   	调用的方法
} 
public static int sum(int a，int b){
	return a+b；
   }
public static int sum(int x，int y){
	return a+b；
   }//这个调用是错误的，方法的调用与数据名称无关

当俩个数据参数类型不一样的时候，谁的数据范围大就取谁的
public static void main(String[] args){
   	调用的方法
} 
public static double sum(double a，int b){
	return a+b；//double大，所以要把int改为double
   }

参数传递的过程中，有俩项规则
1.对于基本数据类型（以及String）来说，形式参数的操作不会影响实际参数；
2.对于引用数据类型（除了String）来说，形式参数的操作会影响实际参数；
简单地说构造函数是类函数，函数名与类名完全相同，无返回值
调用构造方法名的方法：
new 类名称（）；
继承：
字类只能继承父类非prviate的变量。只能单个继承，但可以无限出现父类
比如：class tater{}
         class（ tater1 ）extend tater{}
         class （tater2 ）extend tater1{}
可以这样继承。
继承：当创建一个对象时，是先调用父类的无参数构造方法，然后在调用子类的无参数构造方法。
          当子类继承父类时，子类有和父类同名，同参数的构造方法，当调用时，子类会覆盖父类的输出数据，
          当父类需要调用到自己的构造方法时，可以用super调用，但必须在子类构造方法的前面：
                             void clas{
                                  super("xyz",30);
		  this.name="stunder name";
		  this.age=20;}

                              void clas1{
                                  super(name,age);
		  this.name=name;
		  this.age=age;
		  this.classno=classno;}
重载的特殊情况：
public class MethodOverloaded {
	
 注意 int add(int x1,int x2){
	   return x1+x2;
   }
   注意double add(double x1,double x2){
	   return x1+x2;
   }
   public static void main(String[] args) {
        注意：MethodOverloaded obj=new MethodOverloaded ();
	   System.out.println(obj.add(10,23));
	   System.out.println(obj.add(10.0, 23));
	
   }
}当重载方法前面没有public static时，只能通过创建对象来获取里面的值，就好像我上面的情况一样。

构造方法只能调用一次
抽象类中不能和pravite，static fainl，一起使用。
static abstract void smoke（）；会报错
接口：
可以使用接口名来访问接口里面的常量：
interface Teacher{
    public static final double p=3.14；
}
public class a{
   public static void main（String[] args）{
      syso（Teacher.p）//是可以打印出来的  
   }
}
接口中方法的定义不需要abstract修饰的，默认就是抽象的：
interface Teacher{
    void a（）；
    void b（）；
}
接口还可以继承，也可以一次性继承多个接口，这一点在类中是不可以的， 
三种数组定义的方法：
1 int[] array=new array[放数组长度]; 比如: int[] array=new array[8]那它就只能取8个长度的数组
2  int[] array={1,2,3,4,};直接放数值；
3  int[] array=new arry{1,2,3,4}直接放数值；这种方式和第二种有点相同，但是也有不同，详细请见图片。

二维数组：
2)names[i]也是一个一维数组，names[i].length指的是当前行有几列，如上例names[0].length表示的是第一行字符串的个数。
字符串：
字符串对象只要是被创建了，那里面的内容不可改变，当你觉得改变的话，其实只是改变了一个地址。

==对于基本类型是比较内容是否相等，但对于引用数据类型就是比较地址，像什么String啊。

如果字符串new一个新的对象的话，那么他的地址也会改变。
小技巧：当用equals比较俩个字符串的时候，当其中一个字符串为常量的时候，推荐把常量写前面。不然会出现以下情况
String str3="null";
 System.out.println(str3.equals（"abc"）);注意：会报错，因为你的str3是一个空值，空值就不能调用方法。
但这样 System.out.println("abc".equals（str3）);这样就不会报错，打印flase。

集合：本身就是一种引用类型，可以存放多个数据，集合的长度可以任意改变，而数组不行，集合包括很多种，现在阶段就学最简单的ArrayList。

创建一个集合：ArrayList<乏型> list=new ArrayList<>()；
集合直接打印打印的不是地址，是内容。
集合的添加元素：ArrayList<String> list=new ArrayList<>()；
                           list.add("out");
boolone succuse=list.add(“”你好“”);
打印succuse是显示true，这个方法是检查这个数据是否添加成功。

获取元素：
list.get（集合下标）；

获取集合长度:
list.size（）;
当你集合想存储其他的数据类型，包括基本类型和引用数据类型，那只要写对数据类型的名称就可以了
基本类型     对于的包装类型
byte                 Byte
int                    Integer
short                Short
long                 Long
float                 Flaot
double             Double
char                 Character
boolean           Boolean
当你想要存储的集合数据类型为整数型时，只需要把集合的乏型写成整数类型就可以了，比如：ArrayList<Integer> list=new ArrayList<>()；就可以了。

异常：
就是用数据发生了数据出错，程序无法运行。java异常就是通过面对对象的思想将问题封装成对象，然后用异常类对其进行描述。


 String d="liasdflihsdhlijsdflihsdfiligsdfglikhsdfklilisdflioli";查找里面有多少个li，-1就是表示没找到这个字符串，
某些查询方法中，如果没有查找到你想要的结果，就会返回-1，表示没有查找到。用-1区判断里面是否有还有li，有就返回1，那就会继续执行代码。
             int count=0;
             int dext=d.indexOf("li");
             while(dext !=-1){
            	 count++;
            	 dext=d.indexOf("li", dext+2);
             }
          System.out.println(count);
栈：
要出数据的话，是后进先出。
队列：
要出数据的话，是先进先出  。

collection集合在使用迭代器的时候，不能中途添加数据：
Iterator iter=col.iterator();
    	while(iter.hasNext()){
    		String iter1=(String)iter.next();
    		if("王伟1".equals(iter1)){
    			col.add("张三");
    		}
    		System.out.println(iter1);
    	}
但是List，ArrayList，LinkList，vcto都可以在使用迭代器的时候添加数据。
异常分为运行时异常和非运行时异常；
运行时异常表示的RunExction
编译时异常为Exction；
这样去区分。
编码问题：
你用的是哪个编码格式去写入文件的，如果你要去读取这个文件，那你就要用相同的编码格式去解码，不然会出现乱码。
比如你用GBK去写入数据，那你要读取数据的话一定要用GBK去读取里面的数据，不然一定会乱码

同步锁synchronized：
synchronized同步代码块的锁对象可以是任意对象（但是线程的实现方法必须是继承Thread）
而且这个对象必须是线程类的共享对象（静态的，就是加了static的）
synchronized是可以加在方法上面 的，如果是静态方法synchronized的所对的锁就是类的类对象。
如果不是静态的方法，synchronized如果加在非静态方法上，那么它的锁就是this

比如有一个类为Fruit。里面有一些私有变量，
当你有一个线程要去使用到里面的私有变量的时候，你可以直接封装成一个对象，比如这样：private Fruit fruit；
这样你可以调用到Fruit里面所有的变量，当Fruit创建成一个对象，比如：Fruit f=new Fruit（），把里面的私有变量都赋予了值得的时候，当你的线程也创建的时候 比如 inducespeople id=new inducespeople(f);
这样你Fruit里面的变量的值都会传过去，当然你的线程里面要有这样一个构造方法：
public buypeople(Fruit fruit) {
        super();
        this.fruit = fruit;
    }
有时候创建线程可以在一个类里面创建，比如：
public class t{
   public t（）{
    min m=new min（）；
    Thread start=new Thread（m）；
   start。start（）；
}
   class min impthis Runable{
   

}


}
当t实例化的时候，线程min也会启动
alter table 表名 add字段 类型 ;  添加字段
alter table 表名 drop column 字段名； 删除字段，

String 中的idnex of的一些用法
比如 String a="jskajdjsjd";

1.indexOf(int ch（一定要是ASCII码）) 在给定字符串中查找字符(ASCII),找到返回字符数组所对应的下标找不到返回-1

2.indexOf(String str)在给定符串中查找另一个字符串。。。

3.indexOf(int ch（一定要是ASCII码）,int fromIndex)从指定的下标开始查找某个字符，查找到返回下标，查找不到返回-1

4.indexOf(String str,int fromIndex)从指定的下标开始查找你要查找的字符

<script>
        function ajaxFunction() {
          var xmlHttp;
          try {
            // Firefox, Opera 8.0+, Safari
            xmlHttp = new XMLHttpRequest();
          } catch (e) {
            try {
              // Internet Explorer
              xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
            } catch (e) {
              try {
                xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
              } catch (e) {
              }
            }
          }
          return xmlHttp;
        }
        function post() {
          //1. 创建对象
          var request = ajaxFunction();
          //2. 发送请求
          request.open("POST", "Gatdate", true);
          //想获取服务器传送过来的数据， 加一个状态的监听。
          request.onreadystatechange = function() {
            if (request.readyState == 4 && request.status == 200) {
              var s=request.responseText;
              $("#score").html(s);
                // $("#score").html(list[2]+list[3]+list.score);
            }
          }
          //如果使用的是post方式带数据，那么 这里要添加头， 说明提交的数据类型是一个经过url编码的form表单数据
          request.setRequestHeader("Content-type",
                  "application/x-www-form-urlencoded");
          // //带数据过去? ， 在send方法里面写表单数据。
          request.send("name="+$("#name").val());
        }
function PostRequest(){

 var xhr = null;

 if(window.XMLHttpRequest){
 xhr = new XMLHttpRequest();

 }else{

 xhr = new ActiveXObject("Microsoft.XMLHttp");
 }

 xhr.open('post,’/ajax_demo’,true);

 xhr.setRequestHeader('Content-Type’,"application/x-www-form-urlencoded’);

 xhr.onreadystatechange = function(){

 if(xhr.readyState == 4 && xhr.status == 200){
 var data = xhr.responseText;
 }

 }
 xhr.send('username=itxdl;password=123456’);

}

jquery：

$(function(){
		//失去去焦点
		$(".user").blur(function(){
			var value=$(this).val();
			if(value==""){
				alert("请输入账号");
			}
		})
		//失去去焦点
		 $(".pas").blur(function(){
			var value=$(this).val();
			if(value==""){
				alert("请输入密码");
			}
		}) 
	})
blur这个方法就是失去鼠标的焦点
focus就是成为焦点
$(".user")就是表单中的一个class
$.trim去除空格
http://localhost/upload/index02.jsp

返回所继承的类
Class<T> clazz=(Class<T>) ((ParameterizedType) this.getClass().getGenericSuperclass()).getActualTypeArguments()[0];

Html清除浮动,直接是一个css文件。在每一个html页面上引入就可以了
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

清除浮动

.clearfix{*zoom:1;} 
.clearfix::after{
	clear:both;
	content:"";
	display:block;
	height:0;
	visibility:hidden;
}
注意：.clearfix的class属性不是用在浮动元素本身上，也是用在浮动元素的父元素上。
问http://localhost:9001/actuator/hystrix.stream 


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:+'
    implementation 'com.android.support.constraint:constraint-layout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'




IS Null  用来查 数据库数据是否为NULL的 用 =null是不行的 空值查询
IN 集合查询
BETWEEN  值 AND 值 访问查询
, null, null, null, true, false, true, true, true]  
 
 2020-11-16 13:44:25,981 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, OTHER, OTHER, OTHER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-16 13:44:26,008 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10006, pstmt-20003} execute error. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'content' at row 1
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:104)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy105.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy103.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.addForNotMath(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.addForNotMath(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.addForNotMath(BaseServiceImpl.java:66)
	at com.example.blog.service.BlogTageServiceImpl.insert(BlogTageServiceImpl.java:21)
	at com.example.blog.controller.BlogController.addBlog(BlogController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-16 13:44:26,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} clearParameters.   
 
 2020-11-16 13:44:26,015 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} closed  
 
 2020-11-16 13:44:26,016 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-16 13:44:26,096 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-16 13:44:26,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-16 13:45:53,829 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-1027} connected  
 
 2020-11-16 13:45:53,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-1028} connected  
 
 2020-11-16 13:45:53,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-1029} connected  
 
 2020-11-16 13:45:53,936 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-1030} connected  
 
 2020-11-16 13:45:53,965 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-1031} connected  
 
 2020-11-16 13:45:53,975 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:45:54,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 13:45:54,475 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 13:45:54,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 13:45:54,502 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 36.8114 millis. select * from t_user where username=?  
 
 2020-11-16 13:45:54,513 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 13:45:54,519 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 13:45:54,556 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 13:45:54,565 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 13:45:54,571 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:45:54,575 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:45:56,595 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:45:56,600 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 13:45:56,602 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:45:56,602 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:45:56,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 9.2373 millis. select * from t_tages  
 
 2020-11-16 13:45:56,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 13:45:56,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 13:45:56,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 13:45:56,617 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 13:45:56,618 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 13:45:56,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 13:45:56,621 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 13:45:56,622 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 13:45:56,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 13:45:56,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:45:56,625 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:45:56,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:45:56,629 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 13:45:56,630 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 13:45:56,631 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 13:45:56,634 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.7059 millis. select * from t_types  
 
 2020-11-16 13:45:56,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 13:45:56,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 13:45:56,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 13:45:56,638 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 13:45:56,639 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 13:45:56,640 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 13:45:56,640 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 13:45:56,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 13:45:56,644 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 13:45:56,644 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 13:45:56,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:46:39,204 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:46:39,226 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:46:39,234 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [null, Java笔记, 关键字
1 全部是小写，（比如publin）
2 在Notepad++有特色颜色
标识符

##Java笔记
1 不能以数字开头
2 不能是关键字
3 标识符可以包括26个英文字母（区分大小写） 0-9数字 $和下划线
命名规则
类名规范  ：首字母大写，后面每一个单词的首字母都要大写（大驼峰式）（比如HelloWorld）
变量名规范  ：首字母小写，后面每一个单词的首字母都要大写（小驼峰式）（比如helloWorld）
方法名规则 ： 和变量名的规则一样
常量
1 凡是用双引号引一起来的部分，都叫字符串常量
2 直接写上数字的，没有小数点，比如100 200 300，都叫整数常量
3 直接写上数字的，有小数点，比如10.2 20.5 ，都叫浮点数常量
4凡是用单引号引一起来的部分，都叫字符常量比如‘2’ ‘3’
5布尔常量 true flae
6空常量 null
数据类型的从小到大顺序
（byte，short，char)-int-long-float-double
基本类型：
public class shuju{
	public static void main(String[] args){
		double num1=2F;//自动转换数据类型，数据范围小的转换为数据大的
		System.out.println(num1);
		int num2=(int)100L;//强制转换数据类型。数据大的转换为数据小
的
		System.out.println(num2);
	}
	
}
三元运算：需要三个数据才可以进行运算的运算符；
格式： 数据类型 变量名称=条件判断 ？表达式A ：表达式B
注意，俩边的数据类型一点要一样的。
public class jiangx{
	public static void main(String[] args){
		int a=10;
		int b=20;
		int max=a>b ? a:b;
		System.out.println("最大值" + max);
	}
}
创建数组
int[] myList = {1.9, 2.9, 3.4, 3.5};

返回值为空：
public static void main(String[] args){
   	HelloWorld()；
} 
public static （void 空值） HelloWorld(){
	for(){
               System.out.println("输入一段文字")
   }
}只输出打印，没有返回值出来
最后一行的return一般不写；
没有返回值的方法只能是单独调用，不能用打印和赋值调用
因为void是一个空值，
调用的方法有三种：一单独调用：sum（10,20）；二打印调用System.out.println（sum（10,20））；三赋值调用：int sum1=sum（10,20）；System.out.println（sum1）
public static void main(String[] args){
   	调用的方法
} 
public static int sum(int a，int b){
	return a+b；
   }
方法重载的主注意事项：
不能有俩个一样的数据参数：
public static void main(String[] args){
   	调用的方法
} 
public static int sum(int a，int b){
	return a+b；
   }
public static int sum(int x，int y){
	return a+b；
   }//这个调用是错误的，方法的调用与数据名称无关

当俩个数据参数类型不一样的时候，谁的数据范围大就取谁的
public static void main(String[] args){
   	调用的方法
} 
public static double sum(double a，int b){
	return a+b；//double大，所以要把int改为double
   }

参数传递的过程中，有俩项规则
1.对于基本数据类型（以及String）来说，形式参数的操作不会影响实际参数；
2.对于引用数据类型（除了String）来说，形式参数的操作会影响实际参数；
简单地说构造函数是类函数，函数名与类名完全相同，无返回值
调用构造方法名的方法：
new 类名称（）；
继承：
字类只能继承父类非prviate的变量。只能单个继承，但可以无限出现父类
比如：class tater{}
         class（ tater1 ）extend tater{}
         class （tater2 ）extend tater1{}
可以这样继承。
继承：当创建一个对象时，是先调用父类的无参数构造方法，然后在调用子类的无参数构造方法。
          当子类继承父类时，子类有和父类同名，同参数的构造方法，当调用时，子类会覆盖父类的输出数据，
          当父类需要调用到自己的构造方法时，可以用super调用，但必须在子类构造方法的前面：
                             void clas{
                                  super("xyz",30);
		  this.name="stunder name";
		  this.age=20;}

                              void clas1{
                                  super(name,age);
		  this.name=name;
		  this.age=age;
		  this.classno=classno;}
重载的特殊情况：
public class MethodOverloaded {
	
 注意 int add(int x1,int x2){
	   return x1+x2;
   }
   注意double add(double x1,double x2){
	   return x1+x2;
   }
   public static void main(String[] args) {
        注意：MethodOverloaded obj=new MethodOverloaded ();
	   System.out.println(obj.add(10,23));
	   System.out.println(obj.add(10.0, 23));
	
   }
}当重载方法前面没有public static时，只能通过创建对象来获取里面的值，就好像我上面的情况一样。

构造方法只能调用一次
抽象类中不能和pravite，static fainl，一起使用。
static abstract void smoke（）；会报错
接口：
可以使用接口名来访问接口里面的常量：
interface Teacher{
    public static final double p=3.14；
}
public class a{
   public static void main（String[] args）{
      syso（Teacher.p）//是可以打印出来的  
   }
}
接口中方法的定义不需要abstract修饰的，默认就是抽象的：
interface Teacher{
    void a（）；
    void b（）；
}
接口还可以继承，也可以一次性继承多个接口，这一点在类中是不可以的， 
三种数组定义的方法：
1 int[] array=new array[放数组长度]; 比如: int[] array=new array[8]那它就只能取8个长度的数组
2  int[] array={1,2,3,4,};直接放数值；
3  int[] array=new arry{1,2,3,4}直接放数值；这种方式和第二种有点相同，但是也有不同，详细请见图片。

二维数组：
2)names[i]也是一个一维数组，names[i].length指的是当前行有几列，如上例names[0].length表示的是第一行字符串的个数。
字符串：
字符串对象只要是被创建了，那里面的内容不可改变，当你觉得改变的话，其实只是改变了一个地址。

==对于基本类型是比较内容是否相等，但对于引用数据类型就是比较地址，像什么String啊。

如果字符串new一个新的对象的话，那么他的地址也会改变。
小技巧：当用equals比较俩个字符串的时候，当其中一个字符串为常量的时候，推荐把常量写前面。不然会出现以下情况
String str3="null";
 System.out.println(str3.equals（"abc"）);注意：会报错，因为你的str3是一个空值，空值就不能调用方法。
但这样 System.out.println("abc".equals（str3）);这样就不会报错，打印flase。

集合：本身就是一种引用类型，可以存放多个数据，集合的长度可以任意改变，而数组不行，集合包括很多种，现在阶段就学最简单的ArrayList。

创建一个集合：ArrayList<乏型> list=new ArrayList<>()；
集合直接打印打印的不是地址，是内容。
集合的添加元素：ArrayList<String> list=new ArrayList<>()；
                           list.add("out");
boolone succuse=list.add(“”你好“”);
打印succuse是显示true，这个方法是检查这个数据是否添加成功。

获取元素：
list.get（集合下标）；

获取集合长度:
list.size（）;
当你集合想存储其他的数据类型，包括基本类型和引用数据类型，那只要写对数据类型的名称就可以了
基本类型     对于的包装类型
byte                 Byte
int                    Integer
short                Short
long                 Long
float                 Flaot
double             Double
char                 Character
boolean           Boolean
当你想要存储的集合数据类型为整数型时，只需要把集合的乏型写成整数类型就可以了，比如：ArrayList<Integer> list=new ArrayList<>()；就可以了。

异常：
就是用数据发生了数据出错，程序无法运行。java异常就是通过面对对象的思想将问题封装成对象，然后用异常类对其进行描述。


 String d="liasdflihsdhlijsdflihsdfiligsdfglikhsdfklilisdflioli";查找里面有多少个li，-1就是表示没找到这个字符串，
某些查询方法中，如果没有查找到你想要的结果，就会返回-1，表示没有查找到。用-1区判断里面是否有还有li，有就返回1，那就会继续执行代码。
             int count=0;
             int dext=d.indexOf("li");
             while(dext !=-1){
            	 count++;
            	 dext=d.indexOf("li", dext+2);
             }
          System.out.println(count);
栈：
要出数据的话，是后进先出。
队列：
要出数据的话，是先进先出  。

collection集合在使用迭代器的时候，不能中途添加数据：
Iterator iter=col.iterator();
    	while(iter.hasNext()){
    		String iter1=(String)iter.next();
    		if("王伟1".equals(iter1)){
    			col.add("张三");
    		}
    		System.out.println(iter1);
    	}
但是List，ArrayList，LinkList，vcto都可以在使用迭代器的时候添加数据。
异常分为运行时异常和非运行时异常；
运行时异常表示的RunExction
编译时异常为Exction；
这样去区分。
编码问题：
你用的是哪个编码格式去写入文件的，如果你要去读取这个文件，那你就要用相同的编码格式去解码，不然会出现乱码。
比如你用GBK去写入数据，那你要读取数据的话一定要用GBK去读取里面的数据，不然一定会乱码

同步锁synchronized：
synchronized同步代码块的锁对象可以是任意对象（但是线程的实现方法必须是继承Thread）
而且这个对象必须是线程类的共享对象（静态的，就是加了static的）
synchronized是可以加在方法上面 的，如果是静态方法synchronized的所对的锁就是类的类对象。
如果不是静态的方法，synchronized如果加在非静态方法上，那么它的锁就是this

比如有一个类为Fruit。里面有一些私有变量，
当你有一个线程要去使用到里面的私有变量的时候，你可以直接封装成一个对象，比如这样：private Fruit fruit；
这样你可以调用到Fruit里面所有的变量，当Fruit创建成一个对象，比如：Fruit f=new Fruit（），把里面的私有变量都赋予了值得的时候，当你的线程也创建的时候 比如 inducespeople id=new inducespeople(f);
这样你Fruit里面的变量的值都会传过去，当然你的线程里面要有这样一个构造方法：
public buypeople(Fruit fruit) {
        super();
        this.fruit = fruit;
    }
有时候创建线程可以在一个类里面创建，比如：
public class t{
   public t（）{
    min m=new min（）；
    Thread start=new Thread（m）；
   start。start（）；
}
   class min impthis Runable{
   

}


}
当t实例化的时候，线程min也会启动
alter table 表名 add字段 类型 ;  添加字段
alter table 表名 drop column 字段名； 删除字段，

String 中的idnex of的一些用法
比如 String a="jskajdjsjd";

1.indexOf(int ch（一定要是ASCII码）) 在给定字符串中查找字符(ASCII),找到返回字符数组所对应的下标找不到返回-1

2.indexOf(String str)在给定符串中查找另一个字符串。。。

3.indexOf(int ch（一定要是ASCII码）,int fromIndex)从指定的下标开始查找某个字符，查找到返回下标，查找不到返回-1

4.indexOf(String str,int fromIndex)从指定的下标开始查找你要查找的字符

<script>
        function ajaxFunction() {
          var xmlHttp;
          try {
            // Firefox, Opera 8.0+, Safari
            xmlHttp = new XMLHttpRequest();
          } catch (e) {
            try {
              // Internet Explorer
              xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
            } catch (e) {
              try {
                xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
              } catch (e) {
              }
            }
          }
          return xmlHttp;
        }
        function post() {
          //1. 创建对象
          var request = ajaxFunction();
          //2. 发送请求
          request.open("POST", "Gatdate", true);
          //想获取服务器传送过来的数据， 加一个状态的监听。
          request.onreadystatechange = function() {
            if (request.readyState == 4 && request.status == 200) {
              var s=request.responseText;
              $("#score").html(s);
                // $("#score").html(list[2]+list[3]+list.score);
            }
          }
          //如果使用的是post方式带数据，那么 这里要添加头， 说明提交的数据类型是一个经过url编码的form表单数据
          request.setRequestHeader("Content-type",
                  "application/x-www-form-urlencoded");
          // //带数据过去? ， 在send方法里面写表单数据。
          request.send("name="+$("#name").val());
        }
function PostRequest(){

 var xhr = null;

 if(window.XMLHttpRequest){
 xhr = new XMLHttpRequest();

 }else{

 xhr = new ActiveXObject("Microsoft.XMLHttp");
 }

 xhr.open('post,’/ajax_demo’,true);

 xhr.setRequestHeader('Content-Type’,"application/x-www-form-urlencoded’);

 xhr.onreadystatechange = function(){

 if(xhr.readyState == 4 && xhr.status == 200){
 var data = xhr.responseText;
 }

 }
 xhr.send('username=itxdl;password=123456’);

}

jquery：

$(function(){
		//失去去焦点
		$(".user").blur(function(){
			var value=$(this).val();
			if(value==""){
				alert("请输入账号");
			}
		})
		//失去去焦点
		 $(".pas").blur(function(){
			var value=$(this).val();
			if(value==""){
				alert("请输入密码");
			}
		}) 
	})
blur这个方法就是失去鼠标的焦点
focus就是成为焦点
$(".user")就是表单中的一个class
$.trim去除空格
http://localhost/upload/index02.jsp

返回所继承的类
Class<T> clazz=(Class<T>) ((ParameterizedType) this.getClass().getGenericSuperclass()).getActualTypeArguments()[0];

Html清除浮动,直接是一个css文件。在每一个html页面上引入就可以了
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

清除浮动

.clearfix{*zoom:1;} 
.clearfix::after{
	clear:both;
	content:"";
	display:block;
	height:0;
	visibility:hidden;
}
注意：.clearfix的class属性不是用在浮动元素本身上，也是用在浮动元素的父元素上。
问http://localhost:9001/actuator/hystrix.stream 


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:+'
    implementation 'com.android.support.constraint:constraint-layout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'




IS Null  用来查 数据库数据是否为NULL的 用 =null是不行的 空值查询
IN 集合查询
BETWEEN  值 AND 值 访问查询
, null, null, null, true, false, true, true, true]  
 
 2020-11-16 13:46:39,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, OTHER, OTHER, OTHER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-16 13:46:39,272 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10005, pstmt-20003} execute error. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 java.sql.SQLIntegrityConstraintViolationException: Column 'firstpicture' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy105.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy103.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.addForNotMath(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.addForNotMath(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.addForNotMath(BaseServiceImpl.java:66)
	at com.example.blog.service.BlogTageServiceImpl.insert(BlogTageServiceImpl.java:21)
	at com.example.blog.controller.BlogController.addBlog(BlogController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-16 13:46:39,281 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 13:46:39,282 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} closed  
 
 2020-11-16 13:46:39,285 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:46:39,408 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:46:39,409 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:48:27,252 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-1032} connected  
 
 2020-11-16 13:48:27,294 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-1033} connected  
 
 2020-11-16 13:48:27,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-1034} connected  
 
 2020-11-16 13:48:27,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-1035} connected  
 
 2020-11-16 13:48:27,362 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-1036} connected  
 
 2020-11-16 13:48:27,370 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:48:27,848 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 13:48:27,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 13:48:27,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 13:48:27,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 25.0643 millis. select * from t_user where username=?  
 
 2020-11-16 13:48:27,931 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 13:48:27,935 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 13:48:27,957 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 13:48:27,965 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 13:48:27,972 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:48:27,977 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:48:31,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:48:31,313 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 13:48:31,314 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:48:31,315 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:48:31,321 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.4001 millis. select * from t_tages  
 
 2020-11-16 13:48:31,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 13:48:31,324 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 13:48:31,324 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 13:48:31,326 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 13:48:31,327 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 13:48:31,328 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 13:48:31,330 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 13:48:31,331 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 13:48:31,333 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 13:48:31,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:48:31,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:48:31,336 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:48:31,337 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 13:48:31,338 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 13:48:31,339 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 13:48:31,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.3446 millis. select * from t_types  
 
 2020-11-16 13:48:31,341 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 13:48:31,342 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 13:48:31,343 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 13:48:31,344 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 13:48:31,345 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 13:48:31,346 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 13:48:31,347 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 13:48:31,348 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 13:48:31,350 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 13:48:31,351 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 13:48:31,351 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:50:08,948 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-16 13:50:08,951 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-16 13:50:08,955 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-16 13:50:08,961 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-16 13:50:08,965 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-16 13:50:08,972 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006,procId-1037} connected  
 
 2020-11-16 13:50:08,974 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-16 13:50:08,989 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:50:08,994 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Parameters : [null, Java笔记, ##Java笔记
关键字
1 全部是小写，（比如publin）
2 在Notepad++有特色颜色
标识符
1 不能以数字开头
2 不能是关键字
3 标识符可以包括26个英文字母（区分大小写） 0-9数字 $和下划线
命名规则
类名规范  ：首字母大写，后面每一个单词的首字母都要大写（大驼峰式）（比如HelloWorld）
变量名规范  ：首字母小写，后面每一个单词的首字母都要大写（小驼峰式）（比如helloWorld）
方法名规则 ： 和变量名的规则一样
常量
1 凡是用双引号引一起来的部分，都叫字符串常量
2 直接写上数字的，没有小数点，比如100 200 300，都叫整数常量
3 直接写上数字的，有小数点，比如10.2 20.5 ，都叫浮点数常量
4凡是用单引号引一起来的部分，都叫字符常量比如‘2’ ‘3’
5布尔常量 true flae
6空常量 null
数据类型的从小到大顺序
（byte，short，char)-int-long-float-double
基本类型：
public class shuju{
	public static void main(String[] args){
		double num1=2F;//自动转换数据类型，数据范围小的转换为数据大的
		System.out.println(num1);
		int num2=(int)100L;//强制转换数据类型。数据大的转换为数据小
的
		System.out.println(num2);
	}
	
}
三元运算：需要三个数据才可以进行运算的运算符；
格式： 数据类型 变量名称=条件判断 ？表达式A ：表达式B
注意，俩边的数据类型一点要一样的。
public class jiangx{
	public static void main(String[] args){
		int a=10;
		int b=20;
		int max=a>b ? a:b;
		System.out.println("最大值" + max);
	}
}
创建数组
int[] myList = {1.9, 2.9, 3.4, 3.5};

返回值为空：
public static void main(String[] args){
   	HelloWorld()；
} 
public static （void 空值） HelloWorld(){
	for(){
               System.out.println("输入一段文字")
   }
}只输出打印，没有返回值出来
最后一行的return一般不写；
没有返回值的方法只能是单独调用，不能用打印和赋值调用
因为void是一个空值，
调用的方法有三种：一单独调用：sum（10,20）；二打印调用System.out.println（sum（10,20））；三赋值调用：int sum1=sum（10,20）；System.out.println（sum1）
public static void main(String[] args){
   	调用的方法
} 
public static int sum(int a，int b){
	return a+b；
   }
方法重载的主注意事项：
不能有俩个一样的数据参数：
public static void main(String[] args){
   	调用的方法
} 
public static int sum(int a，int b){
	return a+b；
   }
public static int sum(int x，int y){
	return a+b；
   }//这个调用是错误的，方法的调用与数据名称无关

当俩个数据参数类型不一样的时候，谁的数据范围大就取谁的
public static void main(String[] args){
   	调用的方法
} 
public static double sum(double a，int b){
	return a+b；//double大，所以要把int改为double
   }

参数传递的过程中，有俩项规则
1.对于基本数据类型（以及String）来说，形式参数的操作不会影响实际参数；
2.对于引用数据类型（除了String）来说，形式参数的操作会影响实际参数；
简单地说构造函数是类函数，函数名与类名完全相同，无返回值
调用构造方法名的方法：
new 类名称（）；
继承：
字类只能继承父类非prviate的变量。只能单个继承，但可以无限出现父类
比如：class tater{}
         class（ tater1 ）extend tater{}
         class （tater2 ）extend tater1{}
可以这样继承。
继承：当创建一个对象时，是先调用父类的无参数构造方法，然后在调用子类的无参数构造方法。
          当子类继承父类时，子类有和父类同名，同参数的构造方法，当调用时，子类会覆盖父类的输出数据，
          当父类需要调用到自己的构造方法时，可以用super调用，但必须在子类构造方法的前面：
                             void clas{
                                  super("xyz",30);
		  this.name="stunder name";
		  this.age=20;}

                              void clas1{
                                  super(name,age);
		  this.name=name;
		  this.age=age;
		  this.classno=classno;}
重载的特殊情况：
public class MethodOverloaded {
	
 注意 int add(int x1,int x2){
	   return x1+x2;
   }
   注意double add(double x1,double x2){
	   return x1+x2;
   }
   public static void main(String[] args) {
        注意：MethodOverloaded obj=new MethodOverloaded ();
	   System.out.println(obj.add(10,23));
	   System.out.println(obj.add(10.0, 23));
	
   }
}当重载方法前面没有public static时，只能通过创建对象来获取里面的值，就好像我上面的情况一样。

构造方法只能调用一次
抽象类中不能和pravite，static fainl，一起使用。
static abstract void smoke（）；会报错
接口：
可以使用接口名来访问接口里面的常量：
interface Teacher{
    public static final double p=3.14；
}
public class a{
   public static void main（String[] args）{
      syso（Teacher.p）//是可以打印出来的  
   }
}
接口中方法的定义不需要abstract修饰的，默认就是抽象的：
interface Teacher{
    void a（）；
    void b（）；
}
接口还可以继承，也可以一次性继承多个接口，这一点在类中是不可以的， 
三种数组定义的方法：
1 int[] array=new array[放数组长度]; 比如: int[] array=new array[8]那它就只能取8个长度的数组
2  int[] array={1,2,3,4,};直接放数值；
3  int[] array=new arry{1,2,3,4}直接放数值；这种方式和第二种有点相同，但是也有不同，详细请见图片。

二维数组：
2)names[i]也是一个一维数组，names[i].length指的是当前行有几列，如上例names[0].length表示的是第一行字符串的个数。
字符串：
字符串对象只要是被创建了，那里面的内容不可改变，当你觉得改变的话，其实只是改变了一个地址。

==对于基本类型是比较内容是否相等，但对于引用数据类型就是比较地址，像什么String啊。

如果字符串new一个新的对象的话，那么他的地址也会改变。
小技巧：当用equals比较俩个字符串的时候，当其中一个字符串为常量的时候，推荐把常量写前面。不然会出现以下情况
String str3="null";
 System.out.println(str3.equals（"abc"）);注意：会报错，因为你的str3是一个空值，空值就不能调用方法。
但这样 System.out.println("abc".equals（str3）);这样就不会报错，打印flase。

集合：本身就是一种引用类型，可以存放多个数据，集合的长度可以任意改变，而数组不行，集合包括很多种，现在阶段就学最简单的ArrayList。

创建一个集合：ArrayList<乏型> list=new ArrayList<>()；
集合直接打印打印的不是地址，是内容。
集合的添加元素：ArrayList<String> list=new ArrayList<>()；
                           list.add("out");
boolone succuse=list.add(“”你好“”);
打印succuse是显示true，这个方法是检查这个数据是否添加成功。

获取元素：
list.get（集合下标）；

获取集合长度:
list.size（）;
当你集合想存储其他的数据类型，包括基本类型和引用数据类型，那只要写对数据类型的名称就可以了
基本类型     对于的包装类型
byte                 Byte
int                    Integer
short                Short
long                 Long
float                 Flaot
double             Double
char                 Character
boolean           Boolean
当你想要存储的集合数据类型为整数型时，只需要把集合的乏型写成整数类型就可以了，比如：ArrayList<Integer> list=new ArrayList<>()；就可以了。

异常：
就是用数据发生了数据出错，程序无法运行。java异常就是通过面对对象的思想将问题封装成对象，然后用异常类对其进行描述。


 String d="liasdflihsdhlijsdflihsdfiligsdfglikhsdfklilisdflioli";查找里面有多少个li，-1就是表示没找到这个字符串，
某些查询方法中，如果没有查找到你想要的结果，就会返回-1，表示没有查找到。用-1区判断里面是否有还有li，有就返回1，那就会继续执行代码。
             int count=0;
             int dext=d.indexOf("li");
             while(dext !=-1){
            	 count++;
            	 dext=d.indexOf("li", dext+2);
             }
          System.out.println(count);
栈：
要出数据的话，是后进先出。
队列：
要出数据的话，是先进先出  。

collection集合在使用迭代器的时候，不能中途添加数据：
Iterator iter=col.iterator();
    	while(iter.hasNext()){
    		String iter1=(String)iter.next();
    		if("王伟1".equals(iter1)){
    			col.add("张三");
    		}
    		System.out.println(iter1);
    	}
但是List，ArrayList，LinkList，vcto都可以在使用迭代器的时候添加数据。
异常分为运行时异常和非运行时异常；
运行时异常表示的RunExction
编译时异常为Exction；
这样去区分。
编码问题：
你用的是哪个编码格式去写入文件的，如果你要去读取这个文件，那你就要用相同的编码格式去解码，不然会出现乱码。
比如你用GBK去写入数据，那你要读取数据的话一定要用GBK去读取里面的数据，不然一定会乱码

同步锁synchronized：
synchronized同步代码块的锁对象可以是任意对象（但是线程的实现方法必须是继承Thread）
而且这个对象必须是线程类的共享对象（静态的，就是加了static的）
synchronized是可以加在方法上面 的，如果是静态方法synchronized的所对的锁就是类的类对象。
如果不是静态的方法，synchronized如果加在非静态方法上，那么它的锁就是this

比如有一个类为Fruit。里面有一些私有变量，
当你有一个线程要去使用到里面的私有变量的时候，你可以直接封装成一个对象，比如这样：private Fruit fruit；
这样你可以调用到Fruit里面所有的变量，当Fruit创建成一个对象，比如：Fruit f=new Fruit（），把里面的私有变量都赋予了值得的时候，当你的线程也创建的时候 比如 inducespeople id=new inducespeople(f);
这样你Fruit里面的变量的值都会传过去，当然你的线程里面要有这样一个构造方法：
public buypeople(Fruit fruit) {
        super();
        this.fruit = fruit;
    }
有时候创建线程可以在一个类里面创建，比如：
public class t{
   public t（）{
    min m=new min（）；
    Thread start=new Thread（m）；
   start。start（）；
}
   class min impthis Runable{
   

}


}
当t实例化的时候，线程min也会启动
alter table 表名 add字段 类型 ;  添加字段
alter table 表名 drop column 字段名； 删除字段，

String 中的idnex of的一些用法
比如 String a="jskajdjsjd";

1.indexOf(int ch（一定要是ASCII码）) 在给定字符串中查找字符(ASCII),找到返回字符数组所对应的下标找不到返回-1

2.indexOf(String str)在给定符串中查找另一个字符串。。。

3.indexOf(int ch（一定要是ASCII码）,int fromIndex)从指定的下标开始查找某个字符，查找到返回下标，查找不到返回-1

4.indexOf(String str,int fromIndex)从指定的下标开始查找你要查找的字符

<script>
        function ajaxFunction() {
          var xmlHttp;
          try {
            // Firefox, Opera 8.0+, Safari
            xmlHttp = new XMLHttpRequest();
          } catch (e) {
            try {
              // Internet Explorer
              xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
            } catch (e) {
              try {
                xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
              } catch (e) {
              }
            }
          }
          return xmlHttp;
        }
        function post() {
          //1. 创建对象
          var request = ajaxFunction();
          //2. 发送请求
          request.open("POST", "Gatdate", true);
          //想获取服务器传送过来的数据， 加一个状态的监听。
          request.onreadystatechange = function() {
            if (request.readyState == 4 && request.status == 200) {
              var s=request.responseText;
              $("#score").html(s);
                // $("#score").html(list[2]+list[3]+list.score);
            }
          }
          //如果使用的是post方式带数据，那么 这里要添加头， 说明提交的数据类型是一个经过url编码的form表单数据
          request.setRequestHeader("Content-type",
                  "application/x-www-form-urlencoded");
          // //带数据过去? ， 在send方法里面写表单数据。
          request.send("name="+$("#name").val());
        }
function PostRequest(){

 var xhr = null;

 if(window.XMLHttpRequest){
 xhr = new XMLHttpRequest();

 }else{

 xhr = new ActiveXObject("Microsoft.XMLHttp");
 }

 xhr.open('post,’/ajax_demo’,true);

 xhr.setRequestHeader('Content-Type’,"application/x-www-form-urlencoded’);

 xhr.onreadystatechange = function(){

 if(xhr.readyState == 4 && xhr.status == 200){
 var data = xhr.responseText;
 }

 }
 xhr.send('username=itxdl;password=123456’);

}

jquery：

$(function(){
		//失去去焦点
		$(".user").blur(function(){
			var value=$(this).val();
			if(value==""){
				alert("请输入账号");
			}
		})
		//失去去焦点
		 $(".pas").blur(function(){
			var value=$(this).val();
			if(value==""){
				alert("请输入密码");
			}
		}) 
	})
blur这个方法就是失去鼠标的焦点
focus就是成为焦点
$(".user")就是表单中的一个class
$.trim去除空格
http://localhost/upload/index02.jsp

返回所继承的类
Class<T> clazz=(Class<T>) ((ParameterizedType) this.getClass().getGenericSuperclass()).getActualTypeArguments()[0];

Html清除浮动,直接是一个css文件。在每一个html页面上引入就可以了
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

清除浮动

.clearfix{*zoom:1;} 
.clearfix::after{
	clear:both;
	content:"";
	display:block;
	height:0;
	visibility:hidden;
}
注意：.clearfix的class属性不是用在浮动元素本身上，也是用在浮动元素的父元素上。
问http://localhost:9001/actuator/hystrix.stream 


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:+'
    implementation 'com.android.support.constraint:constraint-layout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'




IS Null  用来查 数据库数据是否为NULL的 用 =null是不行的 空值查询
IN 集合查询
BETWEEN  值 AND 值 访问查询
, https://picsum.photos/seed/picsum/800/450, null, null, true, false, true, true, true]  
 
 2020-11-16 13:50:08,997 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, OTHER, OTHER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-16 13:50:09,023 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10006, pstmt-20003} execute error. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 java.sql.SQLIntegrityConstraintViolationException: Column 'flag' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy105.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy103.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:278)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.addForNotMath(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.addForNotMath(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.addForNotMath(BaseServiceImpl.java:66)
	at com.example.blog.service.BlogTageServiceImpl.insert(BlogTageServiceImpl.java:21)
	at com.example.blog.controller.BlogController.addBlog(BlogController.java:19)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-16 13:50:09,029 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} clearParameters.   
 
 2020-11-16 13:50:09,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} closed  
 
 2020-11-16 13:50:09,034 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-16 13:50:09,180 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-16 13:50:09,182 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-16 13:52:12,160 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-1038} connected  
 
 2020-11-16 13:52:12,198 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-1039} connected  
 
 2020-11-16 13:52:12,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-1040} connected  
 
 2020-11-16 13:52:12,274 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-1041} connected  
 
 2020-11-16 13:52:12,309 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-1042} connected  
 
 2020-11-16 13:52:12,322 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:52:12,986 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 13:52:13,018 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 13:52:13,018 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 13:52:13,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 18.7043 millis. select * from t_user where username=?  
 
 2020-11-16 13:52:13,036 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 13:52:13,039 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 13:52:13,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 13:52:13,074 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 13:52:13,082 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 13:52:13,086 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:52:15,905 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:52:15,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 13:52:15,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 13:52:15,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 13:52:15,928 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 17.5966 millis. select * from t_tages  
 
 2020-11-16 13:52:15,929 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 13:52:15,930 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 13:52:15,930 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 13:52:15,932 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 13:52:15,932 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 13:52:15,933 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 13:52:15,934 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 13:52:15,935 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 13:52:15,937 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 13:52:15,937 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 13:52:15,938 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:52:15,939 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:52:15,941 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-16 13:52:15,942 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-16 13:52:15,942 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-16 13:52:15,944 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.4608 millis. select * from t_types  
 
 2020-11-16 13:52:15,945 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 13:52:15,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 13:52:15,947 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 13:52:15,949 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 13:52:15,950 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 13:52:15,950 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 13:52:15,951 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 13:52:15,952 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 13:52:15,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 13:52:15,955 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 13:52:15,955 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 13:52:49,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 13:52:49,719 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:52:49,724 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [null, Java笔记, ##Java笔记
关键字
1 全部是小写，（比如publin）
2 在Notepad++有特色颜色
标识符
1 不能以数字开头
2 不能是关键字
3 标识符可以包括26个英文字母（区分大小写） 0-9数字 $和下划线
命名规则
类名规范  ：首字母大写，后面每一个单词的首字母都要大写（大驼峰式）（比如HelloWorld）
变量名规范  ：首字母小写，后面每一个单词的首字母都要大写（小驼峰式）（比如helloWorld）
方法名规则 ： 和变量名的规则一样
常量
1 凡是用双引号引一起来的部分，都叫字符串常量
2 直接写上数字的，没有小数点，比如100 200 300，都叫整数常量
3 直接写上数字的，有小数点，比如10.2 20.5 ，都叫浮点数常量
4凡是用单引号引一起来的部分，都叫字符常量比如‘2’ ‘3’
5布尔常量 true flae
6空常量 null
数据类型的从小到大顺序
（byte，short，char)-int-long-float-double
基本类型：
public class shuju{
	public static void main(String[] args){
		double num1=2F;//自动转换数据类型，数据范围小的转换为数据大的
		System.out.println(num1);
		int num2=(int)100L;//强制转换数据类型。数据大的转换为数据小
的
		System.out.println(num2);
	}
	
}
三元运算：需要三个数据才可以进行运算的运算符；
格式： 数据类型 变量名称=条件判断 ？表达式A ：表达式B
注意，俩边的数据类型一点要一样的。
public class jiangx{
	public static void main(String[] args){
		int a=10;
		int b=20;
		int max=a>b ? a:b;
		System.out.println("最大值" + max);
	}
}
创建数组
int[] myList = {1.9, 2.9, 3.4, 3.5};

返回值为空：
public static void main(String[] args){
   	HelloWorld()；
} 
public static （void 空值） HelloWorld(){
	for(){
               System.out.println("输入一段文字")
   }
}只输出打印，没有返回值出来
最后一行的return一般不写；
没有返回值的方法只能是单独调用，不能用打印和赋值调用
因为void是一个空值，
调用的方法有三种：一单独调用：sum（10,20）；二打印调用System.out.println（sum（10,20））；三赋值调用：int sum1=sum（10,20）；System.out.println（sum1）
public static void main(String[] args){
   	调用的方法
} 
public static int sum(int a，int b){
	return a+b；
   }
方法重载的主注意事项：
不能有俩个一样的数据参数：
public static void main(String[] args){
   	调用的方法
} 
public static int sum(int a，int b){
	return a+b；
   }
public static int sum(int x，int y){
	return a+b；
   }//这个调用是错误的，方法的调用与数据名称无关

当俩个数据参数类型不一样的时候，谁的数据范围大就取谁的
public static void main(String[] args){
   	调用的方法
} 
public static double sum(double a，int b){
	return a+b；//double大，所以要把int改为double
   }

参数传递的过程中，有俩项规则
1.对于基本数据类型（以及String）来说，形式参数的操作不会影响实际参数；
2.对于引用数据类型（除了String）来说，形式参数的操作会影响实际参数；
简单地说构造函数是类函数，函数名与类名完全相同，无返回值
调用构造方法名的方法：
new 类名称（）；
继承：
字类只能继承父类非prviate的变量。只能单个继承，但可以无限出现父类
比如：class tater{}
         class（ tater1 ）extend tater{}
         class （tater2 ）extend tater1{}
可以这样继承。
继承：当创建一个对象时，是先调用父类的无参数构造方法，然后在调用子类的无参数构造方法。
          当子类继承父类时，子类有和父类同名，同参数的构造方法，当调用时，子类会覆盖父类的输出数据，
          当父类需要调用到自己的构造方法时，可以用super调用，但必须在子类构造方法的前面：
                             void clas{
                                  super("xyz",30);
		  this.name="stunder name";
		  this.age=20;}

                              void clas1{
                                  super(name,age);
		  this.name=name;
		  this.age=age;
		  this.classno=classno;}
重载的特殊情况：
public class MethodOverloaded {
	
 注意 int add(int x1,int x2){
	   return x1+x2;
   }
   注意double add(double x1,double x2){
	   return x1+x2;
   }
   public static void main(String[] args) {
        注意：MethodOverloaded obj=new MethodOverloaded ();
	   System.out.println(obj.add(10,23));
	   System.out.println(obj.add(10.0, 23));
	
   }
}当重载方法前面没有public static时，只能通过创建对象来获取里面的值，就好像我上面的情况一样。

构造方法只能调用一次
抽象类中不能和pravite，static fainl，一起使用。
static abstract void smoke（）；会报错
接口：
可以使用接口名来访问接口里面的常量：
interface Teacher{
    public static final double p=3.14；
}
public class a{
   public static void main（String[] args）{
      syso（Teacher.p）//是可以打印出来的  
   }
}
接口中方法的定义不需要abstract修饰的，默认就是抽象的：
interface Teacher{
    void a（）；
    void b（）；
}
接口还可以继承，也可以一次性继承多个接口，这一点在类中是不可以的， 
三种数组定义的方法：
1 int[] array=new array[放数组长度]; 比如: int[] array=new array[8]那它就只能取8个长度的数组
2  int[] array={1,2,3,4,};直接放数值；
3  int[] array=new arry{1,2,3,4}直接放数值；这种方式和第二种有点相同，但是也有不同，详细请见图片。

二维数组：
2)names[i]也是一个一维数组，names[i].length指的是当前行有几列，如上例names[0].length表示的是第一行字符串的个数。
字符串：
字符串对象只要是被创建了，那里面的内容不可改变，当你觉得改变的话，其实只是改变了一个地址。

==对于基本类型是比较内容是否相等，但对于引用数据类型就是比较地址，像什么String啊。

如果字符串new一个新的对象的话，那么他的地址也会改变。
小技巧：当用equals比较俩个字符串的时候，当其中一个字符串为常量的时候，推荐把常量写前面。不然会出现以下情况
String str3="null";
 System.out.println(str3.equals（"abc"）);注意：会报错，因为你的str3是一个空值，空值就不能调用方法。
但这样 System.out.println("abc".equals（str3）);这样就不会报错，打印flase。

集合：本身就是一种引用类型，可以存放多个数据，集合的长度可以任意改变，而数组不行，集合包括很多种，现在阶段就学最简单的ArrayList。

创建一个集合：ArrayList<乏型> list=new ArrayList<>()；
集合直接打印打印的不是地址，是内容。
集合的添加元素：ArrayList<String> list=new ArrayList<>()；
                           list.add("out");
boolone succuse=list.add(“”你好“”);
打印succuse是显示true，这个方法是检查这个数据是否添加成功。

获取元素：
list.get（集合下标）；

获取集合长度:
list.size（）;
当你集合想存储其他的数据类型，包括基本类型和引用数据类型，那只要写对数据类型的名称就可以了
基本类型     对于的包装类型
byte                 Byte
int                    Integer
short                Short
long                 Long
float                 Flaot
double             Double
char                 Character
boolean           Boolean
当你想要存储的集合数据类型为整数型时，只需要把集合的乏型写成整数类型就可以了，比如：ArrayList<Integer> list=new ArrayList<>()；就可以了。

异常：
就是用数据发生了数据出错，程序无法运行。java异常就是通过面对对象的思想将问题封装成对象，然后用异常类对其进行描述。


 String d="liasdflihsdhlijsdflihsdfiligsdfglikhsdfklilisdflioli";查找里面有多少个li，-1就是表示没找到这个字符串，
某些查询方法中，如果没有查找到你想要的结果，就会返回-1，表示没有查找到。用-1区判断里面是否有还有li，有就返回1，那就会继续执行代码。
             int count=0;
             int dext=d.indexOf("li");
             while(dext !=-1){
            	 count++;
            	 dext=d.indexOf("li", dext+2);
             }
          System.out.println(count);
栈：
要出数据的话，是后进先出。
队列：
要出数据的话，是先进先出  。

collection集合在使用迭代器的时候，不能中途添加数据：
Iterator iter=col.iterator();
    	while(iter.hasNext()){
    		String iter1=(String)iter.next();
    		if("王伟1".equals(iter1)){
    			col.add("张三");
    		}
    		System.out.println(iter1);
    	}
但是List，ArrayList，LinkList，vcto都可以在使用迭代器的时候添加数据。
异常分为运行时异常和非运行时异常；
运行时异常表示的RunExction
编译时异常为Exction；
这样去区分。
编码问题：
你用的是哪个编码格式去写入文件的，如果你要去读取这个文件，那你就要用相同的编码格式去解码，不然会出现乱码。
比如你用GBK去写入数据，那你要读取数据的话一定要用GBK去读取里面的数据，不然一定会乱码

同步锁synchronized：
synchronized同步代码块的锁对象可以是任意对象（但是线程的实现方法必须是继承Thread）
而且这个对象必须是线程类的共享对象（静态的，就是加了static的）
synchronized是可以加在方法上面 的，如果是静态方法synchronized的所对的锁就是类的类对象。
如果不是静态的方法，synchronized如果加在非静态方法上，那么它的锁就是this

比如有一个类为Fruit。里面有一些私有变量，
当你有一个线程要去使用到里面的私有变量的时候，你可以直接封装成一个对象，比如这样：private Fruit fruit；
这样你可以调用到Fruit里面所有的变量，当Fruit创建成一个对象，比如：Fruit f=new Fruit（），把里面的私有变量都赋予了值得的时候，当你的线程也创建的时候 比如 inducespeople id=new inducespeople(f);
这样你Fruit里面的变量的值都会传过去，当然你的线程里面要有这样一个构造方法：
public buypeople(Fruit fruit) {
        super();
        this.fruit = fruit;
    }
有时候创建线程可以在一个类里面创建，比如：
public class t{
   public t（）{
    min m=new min（）；
    Thread start=new Thread（m）；
   start。start（）；
}
   class min impthis Runable{
   

}


}
当t实例化的时候，线程min也会启动
alter table 表名 add字段 类型 ;  添加字段
alter table 表名 drop column 字段名； 删除字段，

String 中的idnex of的一些用法
比如 String a="jskajdjsjd";

1.indexOf(int ch（一定要是ASCII码）) 在给定字符串中查找字符(ASCII),找到返回字符数组所对应的下标找不到返回-1

2.indexOf(String str)在给定符串中查找另一个字符串。。。

3.indexOf(int ch（一定要是ASCII码）,int fromIndex)从指定的下标开始查找某个字符，查找到返回下标，查找不到返回-1

4.indexOf(String str,int fromIndex)从指定的下标开始查找你要查找的字符

<script>
        function ajaxFunction() {
          var xmlHttp;
          try {
            // Firefox, Opera 8.0+, Safari
            xmlHttp = new XMLHttpRequest();
          } catch (e) {
            try {
              // Internet Explorer
              xmlHttp = new ActiveXObject("Msxml2.XMLHTTP");
            } catch (e) {
              try {
                xmlHttp = new ActiveXObject("Microsoft.XMLHTTP");
              } catch (e) {
              }
            }
          }
          return xmlHttp;
        }
        function post() {
          //1. 创建对象
          var request = ajaxFunction();
          //2. 发送请求
          request.open("POST", "Gatdate", true);
          //想获取服务器传送过来的数据， 加一个状态的监听。
          request.onreadystatechange = function() {
            if (request.readyState == 4 && request.status == 200) {
              var s=request.responseText;
              $("#score").html(s);
                // $("#score").html(list[2]+list[3]+list.score);
            }
          }
          //如果使用的是post方式带数据，那么 这里要添加头， 说明提交的数据类型是一个经过url编码的form表单数据
          request.setRequestHeader("Content-type",
                  "application/x-www-form-urlencoded");
          // //带数据过去? ， 在send方法里面写表单数据。
          request.send("name="+$("#name").val());
        }
function PostRequest(){

 var xhr = null;

 if(window.XMLHttpRequest){
 xhr = new XMLHttpRequest();

 }else{

 xhr = new ActiveXObject("Microsoft.XMLHttp");
 }

 xhr.open('post,’/ajax_demo’,true);

 xhr.setRequestHeader('Content-Type’,"application/x-www-form-urlencoded’);

 xhr.onreadystatechange = function(){

 if(xhr.readyState == 4 && xhr.status == 200){
 var data = xhr.responseText;
 }

 }
 xhr.send('username=itxdl;password=123456’);

}

jquery：

$(function(){
		//失去去焦点
		$(".user").blur(function(){
			var value=$(this).val();
			if(value==""){
				alert("请输入账号");
			}
		})
		//失去去焦点
		 $(".pas").blur(function(){
			var value=$(this).val();
			if(value==""){
				alert("请输入密码");
			}
		}) 
	})
blur这个方法就是失去鼠标的焦点
focus就是成为焦点
$(".user")就是表单中的一个class
$.trim去除空格
http://localhost/upload/index02.jsp

返回所继承的类
Class<T> clazz=(Class<T>) ((ParameterizedType) this.getClass().getGenericSuperclass()).getActualTypeArguments()[0];

Html清除浮动,直接是一个css文件。在每一个html页面上引入就可以了
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}

清除浮动

.clearfix{*zoom:1;} 
.clearfix::after{
	clear:both;
	content:"";
	display:block;
	height:0;
	visibility:hidden;
}
注意：.clearfix的class属性不是用在浮动元素本身上，也是用在浮动元素的父元素上。
问http://localhost:9001/actuator/hystrix.stream 


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:+'
    implementation 'com.android.support.constraint:constraint-layout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'




IS Null  用来查 数据库数据是否为NULL的 用 =null是不行的 空值查询
IN 集合查询
BETWEEN  值 AND 值 访问查询
, https://picsum.photos/seed/picsum/800/450, 是, 0, true, false, true, true, true]  
 
 2020-11-16 13:52:49,726 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-16 13:52:49,739 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 14.813 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-16 13:52:49,740 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 13:52:49,740 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:30:28,650 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-9} connected  
 
 2020-11-16 16:30:28,668 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-10} connected  
 
 2020-11-16 16:30:28,678 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-11} connected  
 
 2020-11-16 16:30:28,689 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-12} connected  
 
 2020-11-16 16:30:28,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-13} connected  
 
 2020-11-16 16:30:28,701 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:30:28,921 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 16:30:28,956 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 16:30:28,957 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 16:30:28,982 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 32.2202 millis. select * from t_types  
 
 2020-11-16 16:30:28,987 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 16:30:28,990 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 16:30:29,005 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 16:30:29,008 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 16:30:29,009 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 16:30:29,009 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 16:30:29,011 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 16:30:29,011 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 16:30:29,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 16:30:29,015 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 16:30:29,017 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:30:29,018 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:30:29,019 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 16:30:29,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 16:30:29,021 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 16:30:29,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 6.4161 millis. select * from t_tages  
 
 2020-11-16 16:30:29,028 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 16:30:29,028 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 16:30:29,029 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 16:30:29,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 16:30:29,031 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 16:30:29,032 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 16:30:29,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 16:30:29,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 16:30:29,034 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 16:30:29,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 16:30:29,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:30:34,077 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:30:34,149 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 16:30:34,151 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 16:30:34,151 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 16:30:34,158 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 7.8801 millis. select * from t_user where username=?  
 
 2020-11-16 16:30:34,159 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 16:30:34,159 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 16:30:34,161 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 16:30:34,162 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 16:30:34,163 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 16:30:34,163 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:38:32,284 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-14} connected  
 
 2020-11-16 16:38:32,341 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-15} connected  
 
 2020-11-16 16:38:32,384 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-16} connected  
 
 2020-11-16 16:38:32,423 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-17} connected  
 
 2020-11-16 16:38:32,461 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-18} connected  
 
 2020-11-16 16:38:32,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:38:32,967 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 16:38:33,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 16:38:33,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 16:38:33,062 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 42.0004 millis. select * from t_user where username=?  
 
 2020-11-16 16:38:33,070 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 16:38:33,074 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 16:38:33,098 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 16:38:33,104 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 16:38:33,109 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 16:38:33,111 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:40:16,901 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-16 16:40:16,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-16 16:40:16,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-16 16:40:16,913 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-16 16:40:16,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} closed  
 
 2020-11-16 16:40:16,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-16 16:40:40,177 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-19} connected  
 
 2020-11-16 16:40:40,190 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-20} connected  
 
 2020-11-16 16:40:40,199 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-21} connected  
 
 2020-11-16 16:40:40,209 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-22} connected  
 
 2020-11-16 16:40:40,217 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-23} connected  
 
 2020-11-16 16:40:40,220 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:40:40,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 16:40:40,743 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 16:40:40,744 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 16:40:40,772 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 40.7592 millis. select * from t_user where username=?  
 
 2020-11-16 16:40:40,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 16:40:40,792 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 16:40:40,828 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 16:40:40,836 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 16:40:40,844 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 16:40:40,848 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:42:36,254 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-24} connected  
 
 2020-11-16 16:42:36,269 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-25} connected  
 
 2020-11-16 16:42:36,281 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-26} connected  
 
 2020-11-16 16:42:36,293 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-27} connected  
 
 2020-11-16 16:42:36,305 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-28} connected  
 
 2020-11-16 16:42:36,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:42:36,502 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 16:42:36,518 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 16:42:36,519 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 16:42:36,527 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 11.8432 millis. select * from t_user where username=?  
 
 2020-11-16 16:42:36,531 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 16:42:36,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 16:42:36,542 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 16:42:36,545 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 16:42:36,546 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 16:42:36,548 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:45:19,662 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-29} connected  
 
 2020-11-16 16:45:19,718 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-30} connected  
 
 2020-11-16 16:45:19,760 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-31} connected  
 
 2020-11-16 16:45:19,793 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-32} connected  
 
 2020-11-16 16:45:19,816 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-33} connected  
 
 2020-11-16 16:45:19,824 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:45:20,402 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 16:45:20,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 16:45:20,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 16:45:20,508 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 53.4958 millis. select * from t_user where username=?  
 
 2020-11-16 16:45:20,521 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 16:45:20,528 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 16:45:20,569 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 16:45:20,579 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 16:45:20,587 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 16:45:20,593 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:46:39,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-16 16:46:39,922 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-16 16:46:39,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-16 16:46:39,928 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-16 16:46:39,930 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} closed  
 
 2020-11-16 16:46:39,933 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-16 16:47:00,790 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-34} connected  
 
 2020-11-16 16:47:00,817 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-35} connected  
 
 2020-11-16 16:47:00,854 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-36} connected  
 
 2020-11-16 16:47:00,889 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-37} connected  
 
 2020-11-16 16:47:00,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-38} connected  
 
 2020-11-16 16:47:00,938 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:47:01,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 16:47:01,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 16:47:01,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 16:47:01,733 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 45.3249 millis. select * from t_user where username=?  
 
 2020-11-16 16:47:01,747 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 16:47:01,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 16:47:01,791 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 16:47:01,801 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 16:47:01,807 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 16:47:01,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:47:04,505 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:47:04,517 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=?  
 
 2020-11-16 16:47:04,520 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 16:47:04,521 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 16:47:04,540 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 19.4986 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=?  
 
 2020-11-16 16:47:04,541 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 16:47:04,542 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [username, id, title, createtime, id]  
 
 2020-11-16 16:47:04,543 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 16:47:04,544 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [admin, 1, Java笔记, 2020-11-16 21:52:49.0, 4]  
 
 2020-11-16 16:47:04,546 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 16:47:04,547 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 16:47:04,547 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:50:48,151 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-42} connected  
 
 2020-11-16 16:50:48,169 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-43} connected  
 
 2020-11-16 16:50:48,185 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-44} connected  
 
 2020-11-16 16:50:48,201 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-45} connected  
 
 2020-11-16 16:50:48,217 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-46} connected  
 
 2020-11-16 16:50:48,222 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:50:48,530 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 16:50:48,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 16:50:48,591 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 16:50:48,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 48.3382 millis. select * from t_types  
 
 2020-11-16 16:50:48,644 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 16:50:48,652 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 16:50:48,692 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 16:50:48,701 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 16:50:48,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 16:50:48,707 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 16:50:48,712 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 16:50:48,714 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 16:50:48,718 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 16:50:48,725 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 16:50:48,730 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:50:48,734 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:50:48,738 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 16:50:48,742 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 16:50:48,744 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 16:50:48,749 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.2505 millis. select * from t_tages  
 
 2020-11-16 16:50:48,751 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 16:50:48,753 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 16:50:48,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 16:50:48,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 16:50:48,763 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 16:50:48,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 16:50:48,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 16:50:48,770 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 16:50:48,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 16:50:48,777 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 16:50:48,778 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:50:52,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:50:52,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 16:50:52,955 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 16:50:52,956 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 16:50:52,957 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.8742 millis. select * from t_user where username=?  
 
 2020-11-16 16:50:52,957 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 16:50:52,958 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 16:50:52,959 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 16:50:52,961 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 16:50:52,961 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 16:50:52,961 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:50:55,574 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:50:55,580 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=?  
 
 2020-11-16 16:50:55,582 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-16 16:50:55,582 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-16 16:50:55,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 1.9157 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=?  
 
 2020-11-16 16:50:55,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-16 16:50:55,585 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [username, id, title, createtime, id]  
 
 2020-11-16 16:50:55,585 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 16:50:55,586 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [admin, 1, Java笔记, 2020-11-16 21:52:49.0, 4]  
 
 2020-11-16 16:50:55,587 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-16 16:50:55,588 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 16:50:55,588 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:53:44,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-47} connected  
 
 2020-11-16 16:53:44,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-48} connected  
 
 2020-11-16 16:53:44,829 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-49} connected  
 
 2020-11-16 16:53:44,850 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-50} connected  
 
 2020-11-16 16:53:44,871 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-51} connected  
 
 2020-11-16 16:53:44,878 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:53:45,233 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 16:53:45,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 16:53:45,288 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 16:53:45,306 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 30.8838 millis. select * from t_user where username=?  
 
 2020-11-16 16:53:45,313 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 16:53:45,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 16:53:45,328 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 16:53:45,331 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 16:53:45,333 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 16:53:45,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 16:53:47,178 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 16:53:47,185 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=?  
 
 2020-11-16 16:53:47,187 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 16:53:47,188 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 16:53:47,193 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 5.1078 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=?  
 
 2020-11-16 16:53:47,193 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 16:53:47,193 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [username, id, title, createtime, id]  
 
 2020-11-16 16:53:47,194 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 16:53:47,195 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 16:53:47,195 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 16:53:47,195 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:28:20,425 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-52} connected  
 
 2020-11-16 19:28:20,448 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-53} connected  
 
 2020-11-16 19:28:20,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-54} connected  
 
 2020-11-16 19:28:20,489 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-55} connected  
 
 2020-11-16 19:28:20,509 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-56} connected  
 
 2020-11-16 19:28:20,516 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:28:20,817 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 19:28:20,835 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 19:28:20,836 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 19:28:20,847 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 15.830301 millis. select * from t_types  
 
 2020-11-16 19:28:20,853 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 19:28:20,855 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 19:28:20,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 19:28:20,868 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 19:28:20,870 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 19:28:20,871 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 19:28:20,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 19:28:20,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 19:28:20,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 19:28:20,875 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:28:20,876 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:28:20,877 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:28:20,878 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 19:28:20,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 19:28:20,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 19:28:20,880 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.6283 millis. select * from t_tages  
 
 2020-11-16 19:28:20,881 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 19:28:20,881 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 19:28:20,881 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 19:28:20,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 19:28:20,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 19:28:20,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 19:28:20,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 19:28:20,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 19:28:20,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 19:28:20,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:28:20,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:28:21,250 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:28:21,251 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 19:28:21,252 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 19:28:21,255 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 4.316801 millis. select * from t_types  
 
 2020-11-16 19:28:21,256 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-16 19:28:21,257 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-16 19:28:21,258 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 19:28:21,259 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 19:28:21,260 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 19:28:21,262 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 19:28:21,264 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 19:28:21,266 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 19:28:21,268 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-16 19:28:21,268 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:28:21,269 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:28:21,270 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:28:21,271 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 19:28:21,272 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 19:28:21,274 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.2217 millis. select * from t_tages  
 
 2020-11-16 19:28:21,274 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 19:28:21,274 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 19:28:21,275 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 19:28:21,276 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 19:28:21,276 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 19:28:21,277 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 19:28:21,277 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 19:28:21,278 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 19:28:21,279 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 19:28:21,280 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:28:21,280 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:28:26,974 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:28:27,018 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 19:28:27,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 19:28:27,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 19:28:27,021 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.3941 millis. select * from t_user where username=?  
 
 2020-11-16 19:28:27,021 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-16 19:28:27,022 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 19:28:27,023 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 19:28:27,024 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-16 19:28:27,024 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 19:28:27,025 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:29:52,266 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-57} connected  
 
 2020-11-16 19:29:52,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-58} connected  
 
 2020-11-16 19:29:52,356 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-59} connected  
 
 2020-11-16 19:29:52,393 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-60} connected  
 
 2020-11-16 19:29:52,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-61} connected  
 
 2020-11-16 19:29:52,438 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:29:53,057 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 19:29:53,111 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 19:29:53,112 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 19:29:53,128 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 25.2989 millis. select * from t_user where username=?  
 
 2020-11-16 19:29:53,135 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 19:29:53,138 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 19:29:53,154 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 19:29:53,159 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 19:29:53,161 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:29:53,164 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:29:57,558 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:29:57,559 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:29:57,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:29:57,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:29:57,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 19:29:57,628 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 19:29:57,640 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 12.7054 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:29:57,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 19:29:57,643 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 19:29:57,645 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 19:29:57,648 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 19:29:57,650 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:29:57,662 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:29:57,667 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 19:29:57,668 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 19:29:57,674 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 5.9636 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:29:57,675 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 19:29:57,677 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id]  
 
 2020-11-16 19:29:57,680 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 19:29:57,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 19:29:57,686 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 19:29:57,688 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:31:22,076 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-62} connected  
 
 2020-11-16 19:31:22,102 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-63} connected  
 
 2020-11-16 19:31:22,122 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-64} connected  
 
 2020-11-16 19:31:22,140 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-65} connected  
 
 2020-11-16 19:31:22,158 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-66} connected  
 
 2020-11-16 19:31:22,165 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:31:22,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 19:31:22,659 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 19:31:22,660 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 19:31:22,689 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 40.3017 millis. select * from t_user where username=?  
 
 2020-11-16 19:31:22,701 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 19:31:22,708 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 19:31:22,742 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 19:31:22,751 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 19:31:22,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:31:22,763 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:31:25,833 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:31:25,834 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:31:25,878 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:31:25,891 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:31:25,893 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 19:31:25,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 19:31:25,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.5658 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:31:25,899 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 19:31:25,899 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 19:31:25,900 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 19:31:25,901 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 19:31:25,902 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:31:25,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:31:25,912 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 19:31:25,912 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 19:31:25,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.3694 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:31:25,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 19:31:25,916 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id]  
 
 2020-11-16 19:31:25,917 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 19:31:25,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 19:31:25,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 19:31:25,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:32:37,406 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-67} connected  
 
 2020-11-16 19:32:37,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-68} connected  
 
 2020-11-16 19:32:37,496 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-69} connected  
 
 2020-11-16 19:32:37,534 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-70} connected  
 
 2020-11-16 19:32:37,568 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-71} connected  
 
 2020-11-16 19:32:37,581 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:32:38,202 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 19:32:38,239 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 19:32:38,240 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 19:32:38,257 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 24.2721 millis. select * from t_user where username=?  
 
 2020-11-16 19:32:38,265 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 19:32:38,268 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 19:32:38,295 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 19:32:38,301 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 19:32:38,305 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:32:38,307 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:32:41,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:32:41,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:32:41,456 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:32:41,461 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_types  
 
 2020-11-16 19:32:41,463 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 19:32:41,464 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 19:32:41,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.6054 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 19:32:41,472 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 19:32:41,472 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 19:32:41,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [6]  
 
 2020-11-16 19:32:41,475 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 19:32:41,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:32:41,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types LIMIT ?   
 
 2020-11-16 19:32:41,482 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [5]  
 
 2020-11-16 19:32:41,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER]  
 
 2020-11-16 19:32:41,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.51 millis. select * from t_types LIMIT ?   
 
 2020-11-16 19:32:41,486 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 19:32:41,486 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 19:32:41,487 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 19:32:41,489 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 19:32:41,490 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 19:32:41,491 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 19:32:41,492 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 19:32:41,493 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 19:32:41,494 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 19:32:41,495 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:32:42,625 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:32:42,632 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:32:42,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-16 19:32:42,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-16 19:32:42,638 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 3.61 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:32:42,638 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-16 19:32:42,639 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [count(0)]  
 
 2020-11-16 19:32:42,639 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [1]  
 
 2020-11-16 19:32:42,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-16 19:32:42,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 19:32:42,645 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:32:42,648 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-16 19:32:42,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-16 19:32:42,652 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.2141 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:32:42,652 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} open  
 
 2020-11-16 19:32:42,654 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Header: [username, id, title, createtime, id]  
 
 2020-11-16 19:32:42,654 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 19:32:42,658 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} closed  
 
 2020-11-16 19:32:42,658 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 19:32:42,660 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:34:01,839 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-72} connected  
 
 2020-11-16 19:34:01,870 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-73} connected  
 
 2020-11-16 19:34:01,893 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-74} connected  
 
 2020-11-16 19:34:01,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-75} connected  
 
 2020-11-16 19:34:01,935 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-76} connected  
 
 2020-11-16 19:34:01,943 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:34:02,625 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 19:34:02,674 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 19:34:02,676 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 19:34:02,706 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 42.9648 millis. select * from t_user where username=?  
 
 2020-11-16 19:34:02,719 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 19:34:02,726 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 19:34:02,762 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 19:34:02,772 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 19:34:02,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:34:02,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:34:07,089 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:34:07,090 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:34:07,132 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:34:07,144 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:34:07,147 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 19:34:07,147 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 19:34:07,154 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.1542 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:34:07,155 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 19:34:07,156 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 19:34:07,156 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 19:34:07,158 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 19:34:07,159 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:34:07,165 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:34:07,167 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 19:34:07,168 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 19:34:07,171 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.6469 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:34:07,173 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 19:34:07,174 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id]  
 
 2020-11-16 19:34:07,177 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 19:34:07,182 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 19:34:07,184 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 19:34:07,185 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:40:52,464 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-77} connected  
 
 2020-11-16 19:40:52,518 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-78} connected  
 
 2020-11-16 19:40:52,561 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-79} connected  
 
 2020-11-16 19:40:52,599 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-80} connected  
 
 2020-11-16 19:40:52,639 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-81} connected  
 
 2020-11-16 19:40:52,653 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:40:52,960 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 19:40:52,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 19:40:52,995 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 19:40:53,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 43.4535 millis. select * from t_types  
 
 2020-11-16 19:40:53,041 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 19:40:53,045 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 19:40:53,065 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 19:40:53,069 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 19:40:53,071 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 19:40:53,072 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 19:40:53,075 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 19:40:53,076 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 19:40:53,078 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 19:40:53,082 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:40:53,085 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:40:53,086 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:40:53,088 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 19:40:53,089 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 19:40:53,090 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 19:40:53,092 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.005 millis. select * from t_tages  
 
 2020-11-16 19:40:53,093 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 19:40:53,094 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 19:40:53,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 19:40:53,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 19:40:53,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 19:40:53,100 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 19:40:53,102 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 19:40:53,104 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 19:40:53,106 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 19:40:53,107 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:40:53,109 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:40:54,184 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:40:54,188 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 19:40:54,190 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 19:40:54,200 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 12.0681 millis. select * from t_types  
 
 2020-11-16 19:40:54,201 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-16 19:40:54,203 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-16 19:40:54,206 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 19:40:54,210 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 19:40:54,213 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 19:40:54,215 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 19:40:54,219 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 19:40:54,222 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 19:40:54,226 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-16 19:40:54,227 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:40:54,229 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:40:54,231 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:40:54,235 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 19:40:54,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 19:40:54,241 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 6.3723 millis. select * from t_tages  
 
 2020-11-16 19:40:54,243 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 19:40:54,245 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 19:40:54,246 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 19:40:54,249 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 19:40:54,251 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 19:40:54,253 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 19:40:54,255 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 19:40:54,257 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 19:40:54,262 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 19:40:54,265 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:40:54,265 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:41:00,634 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:41:00,678 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 19:41:00,679 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 19:41:00,680 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 19:41:00,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.4277 millis. select * from t_user where username=?  
 
 2020-11-16 19:41:00,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-16 19:41:00,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 19:41:00,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 19:41:00,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-16 19:41:00,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 19:41:00,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:41:06,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:41:06,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:41:06,626 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:41:06,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:41:06,647 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-16 19:41:06,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-16 19:41:06,654 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 6.4165 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:41:06,655 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} open  
 
 2020-11-16 19:41:06,657 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Header: [count(0)]  
 
 2020-11-16 19:41:06,658 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Result: [1]  
 
 2020-11-16 19:41:06,662 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} closed  
 
 2020-11-16 19:41:06,664 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 19:41:06,676 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:41:06,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-16 19:41:06,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-16 19:41:06,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 5.5096 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:41:06,686 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} open  
 
 2020-11-16 19:41:06,688 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Header: [username, id, title, createtime, id]  
 
 2020-11-16 19:41:06,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 19:41:06,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} closed  
 
 2020-11-16 19:41:06,697 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 19:41:06,697 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:42:36,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-82} connected  
 
 2020-11-16 19:42:36,670 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-83} connected  
 
 2020-11-16 19:42:36,707 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-84} connected  
 
 2020-11-16 19:42:36,741 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-85} connected  
 
 2020-11-16 19:42:36,773 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-86} connected  
 
 2020-11-16 19:42:36,786 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:42:37,351 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 19:42:37,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 19:42:37,414 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 19:42:37,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 41.8695 millis. select * from t_user where username=?  
 
 2020-11-16 19:42:37,450 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 19:42:37,456 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 19:42:37,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 19:42:37,484 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 19:42:37,488 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:42:37,490 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:42:40,435 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:42:40,436 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:42:40,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:42:40,465 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:42:40,467 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 19:42:40,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 19:42:40,472 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.4497 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:42:40,472 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 19:42:40,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 19:42:40,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 19:42:40,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 19:42:40,475 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:42:40,477 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:42:40,478 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 19:42:40,479 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 19:42:40,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.481 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:42:40,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 19:42:40,481 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id]  
 
 2020-11-16 19:42:40,481 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 19:42:40,482 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 19:42:40,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 19:42:40,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:45:42,598 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-87} connected  
 
 2020-11-16 19:45:42,632 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-88} connected  
 
 2020-11-16 19:45:42,655 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-89} connected  
 
 2020-11-16 19:45:42,678 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-90} connected  
 
 2020-11-16 19:45:42,700 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-91} connected  
 
 2020-11-16 19:45:42,708 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:45:43,138 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 19:45:43,203 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 19:45:43,205 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 19:45:43,239 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 49.3742 millis. select * from t_types  
 
 2020-11-16 19:45:43,255 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 19:45:43,262 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 19:45:43,303 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 19:45:43,311 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 19:45:43,315 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 19:45:43,317 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 19:45:43,322 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 19:45:43,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 19:45:43,327 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 19:45:43,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 19:45:43,339 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:45:43,343 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:45:43,347 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 19:45:43,350 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 19:45:43,352 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 19:45:43,357 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 6.7614 millis. select * from t_tages  
 
 2020-11-16 19:45:43,359 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 19:45:43,360 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 19:45:43,362 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 19:45:43,366 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 19:45:43,368 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 19:45:43,370 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 19:45:43,372 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 19:45:43,374 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 19:45:43,377 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 19:45:43,379 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 19:45:43,381 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:45:51,705 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:45:51,868 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 19:45:51,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 19:45:51,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 19:45:51,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 7.6155 millis. select * from t_user where username=?  
 
 2020-11-16 19:45:51,889 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 19:45:51,890 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 19:45:51,896 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 19:45:51,901 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 19:45:51,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 19:45:51,904 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:45:54,958 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:45:54,959 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 19:45:55,001 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 19:45:55,010 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:45:55,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-16 19:45:55,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-16 19:45:55,016 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 3.1135 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 19:45:55,017 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-16 19:45:55,017 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [count(0)]  
 
 2020-11-16 19:45:55,018 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [1]  
 
 2020-11-16 19:45:55,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-16 19:45:55,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 19:45:55,025 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:45:55,028 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-16 19:45:55,028 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-16 19:45:55,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.4994 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 19:45:55,032 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} open  
 
 2020-11-16 19:45:55,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Header: [username, id, title, createtime, id]  
 
 2020-11-16 19:45:55,034 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1]  
 
 2020-11-16 19:45:55,037 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} closed  
 
 2020-11-16 19:45:55,037 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 19:45:55,038 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 20:58:29,262 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-93} connected  
 
 2020-11-16 20:58:29,287 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-94} connected  
 
 2020-11-16 20:58:29,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-95} connected  
 
 2020-11-16 20:58:29,361 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-96} connected  
 
 2020-11-16 20:58:29,397 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-97} connected  
 
 2020-11-16 20:58:29,409 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 20:58:29,809 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-16 20:58:29,871 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 20:58:29,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 20:58:29,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 42.0291 millis. select * from t_types  
 
 2020-11-16 20:58:29,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 20:58:29,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-16 20:58:29,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-16 20:58:29,959 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-16 20:58:29,960 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-16 20:58:29,961 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-16 20:58:29,963 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-16 20:58:29,964 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-16 20:58:29,966 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 20:58:29,970 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 20:58:29,973 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 20:58:29,975 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 20:58:29,976 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-16 20:58:29,978 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 20:58:29,979 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 20:58:29,982 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.8013 millis. select * from t_tages  
 
 2020-11-16 20:58:29,983 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 20:58:29,984 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-16 20:58:29,986 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习]  
 
 2020-11-16 20:58:29,989 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-16 20:58:29,991 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-16 20:58:29,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-16 20:58:29,995 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-16 20:58:29,996 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-16 20:58:29,999 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 20:58:30,002 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 20:58:30,003 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 20:58:30,589 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 20:58:30,591 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-16 20:58:30,592 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-16 20:58:30,599 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 7.6079 millis. select * from t_types  
 
 2020-11-16 20:58:30,600 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-16 20:58:30,601 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-16 20:58:30,602 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 20:58:30,604 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 20:58:30,606 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 20:58:30,607 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 20:58:30,609 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 20:58:30,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-16 20:58:30,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-16 20:58:30,613 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 20:58:30,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 20:58:30,616 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 20:58:30,617 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 20:58:30,618 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 20:58:30,622 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.3233 millis. select * from t_tages  
 
 2020-11-16 20:58:30,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 20:58:30,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-16 20:58:30,625 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习]  
 
 2020-11-16 20:58:30,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-16 20:58:30,628 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-16 20:58:30,629 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-16 20:58:30,630 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-16 20:58:30,631 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-16 20:58:30,633 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 20:58:30,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 20:58:30,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 20:58:38,202 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 20:58:38,366 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-16 20:58:38,371 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-16 20:58:38,372 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-16 20:58:38,375 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 4.189 millis. select * from t_user where username=?  
 
 2020-11-16 20:58:38,377 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-16 20:58:38,378 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 20:58:38,384 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 20:58:38,388 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-16 20:58:38,389 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 20:58:38,390 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 20:58:42,737 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 20:58:42,737 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 20:58:42,778 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 20:58:42,788 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 20:58:42,791 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-16 20:58:42,791 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-16 20:58:42,793 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.795 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 20:58:42,794 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} open  
 
 2020-11-16 20:58:42,795 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Header: [count(0)]  
 
 2020-11-16 20:58:42,795 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Result: [1]  
 
 2020-11-16 20:58:42,797 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} closed  
 
 2020-11-16 20:58:42,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 20:58:42,804 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 20:58:42,807 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-16 20:58:42,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-16 20:58:42,810 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.3499 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 20:58:42,811 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} open  
 
 2020-11-16 20:58:42,812 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 20:58:42,814 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 20:58:42,816 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} closed  
 
 2020-11-16 20:58:42,817 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 20:58:42,818 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:00:40,592 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-98} connected  
 
 2020-11-16 21:00:40,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-99} connected  
 
 2020-11-16 21:00:40,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-100} connected  
 
 2020-11-16 21:00:40,721 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-101} connected  
 
 2020-11-16 21:00:40,754 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-102} connected  
 
 2020-11-16 21:00:40,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:00:41,429 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 21:00:41,479 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 21:00:41,481 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 21:00:41,511 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 42.0162 millis. select * from t_user where username=?  
 
 2020-11-16 21:00:41,523 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 21:00:41,529 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 21:00:41,564 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 21:00:41,573 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 21:00:41,582 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 21:00:41,588 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:00:43,651 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:00:43,651 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:00:43,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:00:43,721 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:00:43,728 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 21:00:43,729 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 21:00:43,735 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.8201 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:00:43,737 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 21:00:43,738 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 21:00:43,740 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 21:00:43,744 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 21:00:43,746 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:00:43,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:00:43,764 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 21:00:43,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:00:43,770 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 5.4574 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:00:43,771 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 21:00:43,772 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 21:00:43,776 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 21:00:43,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 21:00:43,783 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:00:43,784 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:01:42,146 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:01:42,148 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 21:01:42,149 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 21:01:42,151 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.0503 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:01:42,152 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 21:01:42,153 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [count(0)]  
 
 2020-11-16 21:01:42,154 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1]  
 
 2020-11-16 21:01:42,156 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 21:01:42,158 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:01:42,160 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 21:01:42,162 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:01:42,164 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.2376 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:01:42,165 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-16 21:01:42,165 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 21:01:42,167 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 21:01:42,169 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-16 21:01:42,170 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:01:42,171 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:03:35,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-103} connected  
 
 2020-11-16 21:03:35,487 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-104} connected  
 
 2020-11-16 21:03:35,525 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-105} connected  
 
 2020-11-16 21:03:35,560 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-106} connected  
 
 2020-11-16 21:03:35,596 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-107} connected  
 
 2020-11-16 21:03:35,608 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:03:36,046 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 21:03:36,105 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 21:03:36,106 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 21:03:36,134 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 41.5727 millis. select * from t_user where username=?  
 
 2020-11-16 21:03:36,142 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 21:03:36,146 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 21:03:36,167 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 21:03:36,172 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 21:03:36,176 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 21:03:36,179 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:03:39,410 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:03:39,411 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:03:39,452 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:03:39,463 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:03:39,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 21:03:39,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 21:03:39,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.1865 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:03:39,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 21:03:39,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 21:03:39,475 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 21:03:39,477 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 21:03:39,477 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:03:39,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:03:39,486 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 21:03:39,487 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:03:39,489 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.4349 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:03:39,490 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 21:03:39,491 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 21:03:39,494 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 21:03:39,497 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 21:03:39,498 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:03:39,499 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:05:51,260 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-108} connected  
 
 2020-11-16 21:05:51,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-109} connected  
 
 2020-11-16 21:05:51,306 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-110} connected  
 
 2020-11-16 21:05:51,322 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-111} connected  
 
 2020-11-16 21:05:51,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-112} connected  
 
 2020-11-16 21:05:51,346 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:05:51,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 21:05:52,003 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 21:05:52,005 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 21:05:52,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 43.3389 millis. select * from t_user where username=?  
 
 2020-11-16 21:05:52,047 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 21:05:52,054 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 21:05:52,089 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 21:05:52,098 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 21:05:52,106 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 21:05:52,111 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:05:56,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:05:56,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:05:56,328 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:05:56,339 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:05:56,343 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 21:05:56,344 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 21:05:56,352 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 8.7166 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:05:56,352 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 21:05:56,353 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 21:05:56,354 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 21:05:56,356 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 21:05:56,357 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:05:56,364 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:05:56,367 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 21:05:56,368 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:05:56,370 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.4098 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:05:56,371 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 21:05:56,372 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 21:05:56,375 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 21:05:56,378 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 21:05:56,379 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:05:56,379 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:06:52,622 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-113} connected  
 
 2020-11-16 21:06:52,640 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-114} connected  
 
 2020-11-16 21:06:52,659 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-115} connected  
 
 2020-11-16 21:06:52,677 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-116} connected  
 
 2020-11-16 21:06:52,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-117} connected  
 
 2020-11-16 21:06:52,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:06:53,016 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 21:06:53,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 21:06:53,031 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 21:06:53,041 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 13.2601 millis. select * from t_user where username=?  
 
 2020-11-16 21:06:53,045 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 21:06:53,046 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 21:06:53,055 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 21:06:53,057 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 21:06:53,059 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 21:06:53,060 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:07:01,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:07:01,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:07:01,933 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:07:01,940 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:07:01,941 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 21:07:01,941 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 21:07:01,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.4549 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:07:01,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 21:07:01,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 21:07:01,947 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 21:07:01,948 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 21:07:01,948 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:07:01,951 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:07:01,952 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 21:07:01,952 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:07:01,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.4042 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:07:01,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 21:07:01,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 21:07:01,955 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 21:07:01,957 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 21:07:01,957 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:07:01,957 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:08:19,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-118} connected  
 
 2020-11-16 21:08:19,357 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-119} connected  
 
 2020-11-16 21:08:19,393 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-120} connected  
 
 2020-11-16 21:08:19,430 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-121} connected  
 
 2020-11-16 21:08:19,460 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-122} connected  
 
 2020-11-16 21:08:19,467 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:08:20,211 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 21:08:20,270 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 21:08:20,271 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 21:08:20,302 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 41.9747 millis. select * from t_user where username=?  
 
 2020-11-16 21:08:20,315 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 21:08:20,321 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 21:08:20,356 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 21:08:20,365 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 21:08:20,373 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 21:08:20,377 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:08:23,439 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:08:23,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:08:23,475 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:08:23,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_types  
 
 2020-11-16 21:08:23,484 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 21:08:23,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 21:08:23,493 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 8.1888 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 21:08:23,494 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 21:08:23,494 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 21:08:23,495 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [6]  
 
 2020-11-16 21:08:23,497 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 21:08:23,498 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:08:23,503 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types LIMIT ?   
 
 2020-11-16 21:08:23,508 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [5]  
 
 2020-11-16 21:08:23,509 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER]  
 
 2020-11-16 21:08:23,512 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 4.7487 millis. select * from t_types LIMIT ?   
 
 2020-11-16 21:08:23,514 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 21:08:23,516 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-16 21:08:23,518 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-16 21:08:23,522 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-16 21:08:23,524 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-16 21:08:23,526 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-16 21:08:23,529 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-16 21:08:23,531 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 21:08:23,533 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:08:23,534 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:08:26,372 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:08:26,379 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:08:26,381 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-16 21:08:26,382 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-16 21:08:26,384 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 3.1106 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:08:26,385 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-16 21:08:26,386 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [count(0)]  
 
 2020-11-16 21:08:26,387 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [1]  
 
 2020-11-16 21:08:26,388 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-16 21:08:26,389 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 21:08:26,392 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:08:26,395 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-16 21:08:26,395 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:08:26,397 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.6172 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:08:26,398 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} open  
 
 2020-11-16 21:08:26,399 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 21:08:26,401 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 21:08:26,404 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} closed  
 
 2020-11-16 21:08:26,404 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 21:08:26,405 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:09:38,775 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-123} connected  
 
 2020-11-16 21:09:38,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-124} connected  
 
 2020-11-16 21:09:38,818 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-125} connected  
 
 2020-11-16 21:09:38,836 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-126} connected  
 
 2020-11-16 21:09:38,854 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-127} connected  
 
 2020-11-16 21:09:38,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:09:39,425 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 21:09:39,467 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 21:09:39,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 21:09:39,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 18.0846 millis. select * from t_user where username=?  
 
 2020-11-16 21:09:39,486 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 21:09:39,488 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 21:09:39,522 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 21:09:39,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 21:09:39,538 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 21:09:39,542 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:09:43,945 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:09:43,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:09:43,988 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:09:43,999 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:09:44,002 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 21:09:44,003 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 21:09:44,010 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 7.7838 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:09:44,010 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 21:09:44,011 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 21:09:44,012 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1]  
 
 2020-11-16 21:09:44,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 21:09:44,014 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:09:44,021 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:09:44,024 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 21:09:44,025 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:09:44,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.4384 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:09:44,028 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 21:09:44,029 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 21:09:44,032 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 21:09:44,034 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 21:09:44,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:09:44,036 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:09:48,846 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:09:48,847 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_types  
 
 2020-11-16 21:09:48,848 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : []  
 
 2020-11-16 21:09:48,849 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : []  
 
 2020-11-16 21:09:48,852 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 3.8842 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 21:09:48,853 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-16 21:09:48,854 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [count(0)]  
 
 2020-11-16 21:09:48,855 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [6]  
 
 2020-11-16 21:09:48,856 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-16 21:09:48,856 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 21:09:48,858 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select * from t_types LIMIT ?   
 
 2020-11-16 21:09:48,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [5]  
 
 2020-11-16 21:09:48,860 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER]  
 
 2020-11-16 21:09:48,861 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 1.8748 millis. select * from t_types LIMIT ?   
 
 2020-11-16 21:09:48,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} open  
 
 2020-11-16 21:09:48,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Header: [id, name]  
 
 2020-11-16 21:09:48,863 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [8, 方法论]  
 
 2020-11-16 21:09:48,864 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [9, 理论类]  
 
 2020-11-16 21:09:48,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [21, 错误日记]  
 
 2020-11-16 21:09:48,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [23, 开发日记]  
 
 2020-11-16 21:09:48,866 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [24, 实践论]  
 
 2020-11-16 21:09:48,867 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} closed  
 
 2020-11-16 21:09:48,867 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 21:09:48,868 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:09:50,091 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:09:50,093 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:09:50,094 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : []  
 
 2020-11-16 21:09:50,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : []  
 
 2020-11-16 21:09:50,097 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 3.1174 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:09:50,098 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} open  
 
 2020-11-16 21:09:50,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Header: [count(0)]  
 
 2020-11-16 21:09:50,100 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Result: [6]  
 
 2020-11-16 21:09:50,102 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} closed  
 
 2020-11-16 21:09:50,103 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-16 21:09:50,105 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. select * from t_tages LIMIT ?   
 
 2020-11-16 21:09:50,106 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [5]  
 
 2020-11-16 21:09:50,107 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER]  
 
 2020-11-16 21:09:50,109 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 2.996 millis. select * from t_tages LIMIT ?   
 
 2020-11-16 21:09:50,110 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} open  
 
 2020-11-16 21:09:50,111 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Header: [id, tage]  
 
 2020-11-16 21:09:50,112 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [1, 学习]  
 
 2020-11-16 21:09:50,114 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [2, 错误笔记]  
 
 2020-11-16 21:09:50,115 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [3, 数据库笔记]  
 
 2020-11-16 21:09:50,115 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [4, 程序运行日记]  
 
 2020-11-16 21:09:50,117 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [5, 开发日记]  
 
 2020-11-16 21:09:50,119 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} closed  
 
 2020-11-16 21:09:50,120 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-16 21:09:50,120 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:09:53,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:09:53,309 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-16 21:09:53,310 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-16 21:09:53,312 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.7942 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-16 21:09:53,313 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} open  
 
 2020-11-16 21:09:53,314 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Header: [count(0)]  
 
 2020-11-16 21:09:53,314 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [1]  
 
 2020-11-16 21:09:53,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} closed  
 
 2020-11-16 21:09:53,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:09:53,319 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-16 21:09:53,320 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:09:53,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.7389 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-16 21:09:53,324 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} open  
 
 2020-11-16 21:09:53,324 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-16 21:09:53,326 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-16 21:09:53,328 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} closed  
 
 2020-11-16 21:09:53,329 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:09:53,330 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:09:57,891 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:09:57,892 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : []  
 
 2020-11-16 21:09:57,893 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : []  
 
 2020-11-16 21:09:57,895 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.9779 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 21:09:57,896 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50009} open  
 
 2020-11-16 21:09:57,897 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50009} Header: [count(0)]  
 
 2020-11-16 21:09:57,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50009} Result: [6]  
 
 2020-11-16 21:09:57,899 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50009} closed  
 
 2020-11-16 21:09:57,900 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 21:09:57,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [5]  
 
 2020-11-16 21:09:57,904 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER]  
 
 2020-11-16 21:09:57,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.0144 millis. select * from t_types LIMIT ?   
 
 2020-11-16 21:09:57,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50010} open  
 
 2020-11-16 21:09:57,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50010} Header: [id, name]  
 
 2020-11-16 21:09:57,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50010} Result: [8, 方法论]  
 
 2020-11-16 21:09:57,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50010} Result: [9, 理论类]  
 
 2020-11-16 21:09:57,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50010} Result: [21, 错误日记]  
 
 2020-11-16 21:09:57,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50010} Result: [23, 开发日记]  
 
 2020-11-16 21:09:57,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50010} Result: [24, 实践论]  
 
 2020-11-16 21:09:57,913 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50010} closed  
 
 2020-11-16 21:09:57,914 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 21:09:57,914 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:13,642 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-128} connected  
 
 2020-11-16 21:12:13,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-129} connected  
 
 2020-11-16 21:12:13,732 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-130} connected  
 
 2020-11-16 21:12:13,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-131} connected  
 
 2020-11-16 21:12:13,800 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-132} connected  
 
 2020-11-16 21:12:13,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:14,350 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-16 21:12:14,408 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-16 21:12:14,410 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-16 21:12:14,442 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 44.1816 millis. select * from t_user where username=?  
 
 2020-11-16 21:12:14,454 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-16 21:12:14,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-16 21:12:14,495 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-16 21:12:14,504 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-16 21:12:14,512 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-16 21:12:14,516 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:19,582 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:19,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:19,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:19,626 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:12:19,628 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 21:12:19,629 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 21:12:19,643 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 15.3195 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:12:19,645 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-16 21:12:19,647 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-16 21:12:19,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [6]  
 
 2020-11-16 21:12:19,654 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-16 21:12:19,656 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:12:19,665 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_tages LIMIT ?   
 
 2020-11-16 21:12:19,669 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [5]  
 
 2020-11-16 21:12:19,669 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER]  
 
 2020-11-16 21:12:19,671 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.7084 millis. select * from t_tages LIMIT ?   
 
 2020-11-16 21:12:19,672 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-16 21:12:19,673 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, tage]  
 
 2020-11-16 21:12:19,674 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, 学习]  
 
 2020-11-16 21:12:19,677 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [2, 错误笔记]  
 
 2020-11-16 21:12:19,678 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [3, 数据库笔记]  
 
 2020-11-16 21:12:19,679 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [4, 程序运行日记]  
 
 2020-11-16 21:12:19,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [5, 开发日记]  
 
 2020-11-16 21:12:19,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-16 21:12:19,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:12:19,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:22,807 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:22,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 21:12:22,809 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 21:12:22,812 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.3093 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:12:22,812 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-16 21:12:22,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [count(0)]  
 
 2020-11-16 21:12:22,814 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [6]  
 
 2020-11-16 21:12:22,816 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-16 21:12:22,816 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:12:22,819 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. select * from t_tages LIMIT ?, ?   
 
 2020-11-16 21:12:22,821 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [5, 5]  
 
 2020-11-16 21:12:22,821 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:12:22,823 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.2775 millis. select * from t_tages LIMIT ?, ?   
 
 2020-11-16 21:12:22,824 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50004} open  
 
 2020-11-16 21:12:22,825 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50004} Header: [id, tage]  
 
 2020-11-16 21:12:22,826 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50004} Result: [8, 开发手册]  
 
 2020-11-16 21:12:22,828 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50004} closed  
 
 2020-11-16 21:12:22,829 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 21:12:22,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:24,394 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:24,395 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 21:12:24,396 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 21:12:24,398 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.0351 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:12:24,399 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} open  
 
 2020-11-16 21:12:24,399 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Header: [count(0)]  
 
 2020-11-16 21:12:24,400 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [6]  
 
 2020-11-16 21:12:24,402 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} closed  
 
 2020-11-16 21:12:24,403 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:12:24,405 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [5]  
 
 2020-11-16 21:12:24,406 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER]  
 
 2020-11-16 21:12:24,408 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.0231 millis. select * from t_tages LIMIT ?   
 
 2020-11-16 21:12:24,409 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} open  
 
 2020-11-16 21:12:24,410 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Header: [id, tage]  
 
 2020-11-16 21:12:24,411 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Result: [1, 学习]  
 
 2020-11-16 21:12:24,412 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Result: [2, 错误笔记]  
 
 2020-11-16 21:12:24,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Result: [3, 数据库笔记]  
 
 2020-11-16 21:12:24,414 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Result: [4, 程序运行日记]  
 
 2020-11-16 21:12:24,414 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Result: [5, 开发日记]  
 
 2020-11-16 21:12:24,416 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} closed  
 
 2020-11-16 21:12:24,416 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:12:24,417 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:25,811 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:25,812 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 21:12:25,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 21:12:25,815 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.8694 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:12:25,816 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} open  
 
 2020-11-16 21:12:25,817 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Header: [count(0)]  
 
 2020-11-16 21:12:25,818 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [6]  
 
 2020-11-16 21:12:25,820 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} closed  
 
 2020-11-16 21:12:25,821 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:12:25,824 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [5, 5]  
 
 2020-11-16 21:12:25,824 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:12:25,827 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.6678 millis. select * from t_tages LIMIT ?, ?   
 
 2020-11-16 21:12:25,827 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50008} open  
 
 2020-11-16 21:12:25,828 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50008} Header: [id, tage]  
 
 2020-11-16 21:12:25,829 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50008} Result: [8, 开发手册]  
 
 2020-11-16 21:12:25,831 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50008} closed  
 
 2020-11-16 21:12:25,832 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-16 21:12:25,832 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:28,058 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:28,059 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 21:12:28,060 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 21:12:28,062 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.7037 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:12:28,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} open  
 
 2020-11-16 21:12:28,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Header: [count(0)]  
 
 2020-11-16 21:12:28,064 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [6]  
 
 2020-11-16 21:12:28,065 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} closed  
 
 2020-11-16 21:12:28,066 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:12:28,068 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [5]  
 
 2020-11-16 21:12:28,069 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER]  
 
 2020-11-16 21:12:28,070 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.5073 millis. select * from t_tages LIMIT ?   
 
 2020-11-16 21:12:28,071 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} open  
 
 2020-11-16 21:12:28,072 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Header: [id, tage]  
 
 2020-11-16 21:12:28,073 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Result: [1, 学习]  
 
 2020-11-16 21:12:28,074 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Result: [2, 错误笔记]  
 
 2020-11-16 21:12:28,075 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Result: [3, 数据库笔记]  
 
 2020-11-16 21:12:28,076 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Result: [4, 程序运行日记]  
 
 2020-11-16 21:12:28,078 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Result: [5, 开发日记]  
 
 2020-11-16 21:12:28,079 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} closed  
 
 2020-11-16 21:12:28,080 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:12:28,081 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:33,443 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:33,445 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. SELECT count(0) FROM t_types  
 
 2020-11-16 21:12:33,446 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : []  
 
 2020-11-16 21:12:33,446 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : []  
 
 2020-11-16 21:12:33,449 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.0246 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 21:12:33,450 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} open  
 
 2020-11-16 21:12:33,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} Header: [count(0)]  
 
 2020-11-16 21:12:33,452 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} Result: [6]  
 
 2020-11-16 21:12:33,453 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} closed  
 
 2020-11-16 21:12:33,454 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 21:12:33,456 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. select * from t_types LIMIT ?   
 
 2020-11-16 21:12:33,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [5]  
 
 2020-11-16 21:12:33,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-16 21:12:33,462 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 3.2175 millis. select * from t_types LIMIT ?   
 
 2020-11-16 21:12:33,462 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50012} open  
 
 2020-11-16 21:12:33,463 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50012} Header: [id, name]  
 
 2020-11-16 21:12:33,464 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50012} Result: [8, 方法论]  
 
 2020-11-16 21:12:33,465 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50012} Result: [9, 理论类]  
 
 2020-11-16 21:12:33,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50012} Result: [21, 错误日记]  
 
 2020-11-16 21:12:33,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50012} Result: [23, 开发日记]  
 
 2020-11-16 21:12:33,467 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50012} Result: [24, 实践论]  
 
 2020-11-16 21:12:33,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50012} closed  
 
 2020-11-16 21:12:33,469 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-16 21:12:33,469 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:36,322 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:36,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : []  
 
 2020-11-16 21:12:36,324 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : []  
 
 2020-11-16 21:12:36,326 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.594 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 21:12:36,326 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50013} open  
 
 2020-11-16 21:12:36,327 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50013} Header: [count(0)]  
 
 2020-11-16 21:12:36,328 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50013} Result: [6]  
 
 2020-11-16 21:12:36,329 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50013} closed  
 
 2020-11-16 21:12:36,330 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 21:12:36,333 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. select * from t_types LIMIT ?, ?   
 
 2020-11-16 21:12:36,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [5, 5]  
 
 2020-11-16 21:12:36,335 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:12:36,336 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 1.9451 millis. select * from t_types LIMIT ?, ?   
 
 2020-11-16 21:12:36,337 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} open  
 
 2020-11-16 21:12:36,337 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} Header: [id, name]  
 
 2020-11-16 21:12:36,339 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} Result: [25, 想法论]  
 
 2020-11-16 21:12:36,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} closed  
 
 2020-11-16 21:12:36,341 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-16 21:12:36,342 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:37,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:37,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : []  
 
 2020-11-16 21:12:37,686 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : []  
 
 2020-11-16 21:12:37,688 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.241 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 21:12:37,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50015} open  
 
 2020-11-16 21:12:37,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50015} Header: [count(0)]  
 
 2020-11-16 21:12:37,692 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50015} Result: [6]  
 
 2020-11-16 21:12:37,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50015} closed  
 
 2020-11-16 21:12:37,696 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 21:12:37,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [5]  
 
 2020-11-16 21:12:37,699 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-16 21:12:37,700 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 2.0685 millis. select * from t_types LIMIT ?   
 
 2020-11-16 21:12:37,701 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50016} open  
 
 2020-11-16 21:12:37,701 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50016} Header: [id, name]  
 
 2020-11-16 21:12:37,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50016} Result: [8, 方法论]  
 
 2020-11-16 21:12:37,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50016} Result: [9, 理论类]  
 
 2020-11-16 21:12:37,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50016} Result: [21, 错误日记]  
 
 2020-11-16 21:12:37,705 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50016} Result: [23, 开发日记]  
 
 2020-11-16 21:12:37,706 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50016} Result: [24, 实践论]  
 
 2020-11-16 21:12:37,707 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50016} closed  
 
 2020-11-16 21:12:37,708 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-16 21:12:37,708 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:39,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:39,324 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : []  
 
 2020-11-16 21:12:39,324 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : []  
 
 2020-11-16 21:12:39,326 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.5059 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 21:12:39,327 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50017} open  
 
 2020-11-16 21:12:39,328 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50017} Header: [count(0)]  
 
 2020-11-16 21:12:39,329 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50017} Result: [6]  
 
 2020-11-16 21:12:39,330 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50017} closed  
 
 2020-11-16 21:12:39,331 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 21:12:39,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [5, 5]  
 
 2020-11-16 21:12:39,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]  
 
 2020-11-16 21:12:39,336 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 2.599 millis. select * from t_types LIMIT ?, ?   
 
 2020-11-16 21:12:39,336 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50018} open  
 
 2020-11-16 21:12:39,337 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50018} Header: [id, name]  
 
 2020-11-16 21:12:39,338 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50018} Result: [25, 想法论]  
 
 2020-11-16 21:12:39,339 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50018} closed  
 
 2020-11-16 21:12:39,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-16 21:12:39,341 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:41,571 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:41,572 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : []  
 
 2020-11-16 21:12:41,573 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : []  
 
 2020-11-16 21:12:41,576 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.1395 millis. SELECT count(0) FROM t_types  
 
 2020-11-16 21:12:41,576 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50019} open  
 
 2020-11-16 21:12:41,577 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50019} Header: [count(0)]  
 
 2020-11-16 21:12:41,578 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50019} Result: [6]  
 
 2020-11-16 21:12:41,580 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50019} closed  
 
 2020-11-16 21:12:41,581 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-16 21:12:41,583 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [5]  
 
 2020-11-16 21:12:41,583 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-16 21:12:41,586 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 2.6955 millis. select * from t_types LIMIT ?   
 
 2020-11-16 21:12:41,586 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50020} open  
 
 2020-11-16 21:12:41,587 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50020} Header: [id, name]  
 
 2020-11-16 21:12:41,588 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50020} Result: [8, 方法论]  
 
 2020-11-16 21:12:41,589 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50020} Result: [9, 理论类]  
 
 2020-11-16 21:12:41,589 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50020} Result: [21, 错误日记]  
 
 2020-11-16 21:12:41,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50020} Result: [23, 开发日记]  
 
 2020-11-16 21:12:41,592 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50020} Result: [24, 实践论]  
 
 2020-11-16 21:12:41,593 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50020} closed  
 
 2020-11-16 21:12:41,593 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-16 21:12:41,594 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:43,146 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:43,148 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 21:12:43,148 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 21:12:43,150 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.7538 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:12:43,151 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50021} open  
 
 2020-11-16 21:12:43,151 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50021} Header: [count(0)]  
 
 2020-11-16 21:12:43,153 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50021} Result: [6]  
 
 2020-11-16 21:12:43,154 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50021} closed  
 
 2020-11-16 21:12:43,155 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:12:43,156 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [5]  
 
 2020-11-16 21:12:43,157 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER]  
 
 2020-11-16 21:12:43,160 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.5452 millis. select * from t_tages LIMIT ?   
 
 2020-11-16 21:12:43,160 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50022} open  
 
 2020-11-16 21:12:43,161 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50022} Header: [id, tage]  
 
 2020-11-16 21:12:43,162 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50022} Result: [1, 学习]  
 
 2020-11-16 21:12:43,163 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50022} Result: [2, 错误笔记]  
 
 2020-11-16 21:12:43,163 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50022} Result: [3, 数据库笔记]  
 
 2020-11-16 21:12:43,164 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50022} Result: [4, 程序运行日记]  
 
 2020-11-16 21:12:43,165 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50022} Result: [5, 开发日记]  
 
 2020-11-16 21:12:43,166 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50022} closed  
 
 2020-11-16 21:12:43,167 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:12:43,168 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:44,404 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:44,406 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} created. select * from t_tages where id=?  
 
 2020-11-16 21:12:44,407 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Parameters : [1]  
 
 2020-11-16 21:12:44,408 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Types : [INTEGER]  
 
 2020-11-16 21:12:44,410 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} executed. 2.1326 millis. select * from t_tages where id=?  
 
 2020-11-16 21:12:44,410 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20007, rs-50023} open  
 
 2020-11-16 21:12:44,411 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20007, rs-50023} Header: [id, tage]  
 
 2020-11-16 21:12:44,412 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20007, rs-50023} Result: [1, 学习]  
 
 2020-11-16 21:12:44,414 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20007, rs-50023} closed  
 
 2020-11-16 21:12:44,415 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} clearParameters.   
 
 2020-11-16 21:12:44,415 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:59,034 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:59,041 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} created. update t_tages
         SET tage='学习日记' 
        where id=?  
 
 2020-11-16 21:12:59,043 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} Parameters : [1]  
 
 2020-11-16 21:12:59,043 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} Types : [INTEGER]  
 
 2020-11-16 21:12:59,061 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} executed. 19.4595 millis. update t_tages
         SET tage='学习日记' 
        where id=?  
 
 2020-11-16 21:12:59,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} clearParameters.   
 
 2020-11-16 21:12:59,064 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-16 21:12:59,091 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-16 21:12:59,093 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-16 21:12:59,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-16 21:12:59,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 5.492 millis. SELECT count(0) FROM t_tages  
 
 2020-11-16 21:12:59,100 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50024} open  
 
 2020-11-16 21:12:59,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50024} Header: [count(0)]  
 
 2020-11-16 21:12:59,103 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50024} Result: [6]  
 
 2020-11-16 21:12:59,105 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50024} closed  
 
 2020-11-16 21:12:59,107 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-16 21:12:59,111 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [5]  
 
 2020-11-16 21:12:59,112 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER]  
 
 2020-11-16 21:12:59,115 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 4.0927 millis. select * from t_tages LIMIT ?   
 
 2020-11-16 21:12:59,117 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50025} open  
 
 2020-11-16 21:12:59,117 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50025} Header: [id, tage]  
 
 2020-11-16 21:12:59,118 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50025} Result: [1, 学习日记]  
 
 2020-11-16 21:12:59,121 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50025} Result: [2, 错误笔记]  
 
 2020-11-16 21:12:59,122 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50025} Result: [3, 数据库笔记]  
 
 2020-11-16 21:12:59,124 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50025} Result: [4, 程序运行日记]  
 
 2020-11-16 21:12:59,125 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50025} Result: [5, 开发日记]  
 
 2020-11-16 21:12:59,127 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50025} closed  
 
 2020-11-16 21:12:59,130 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-16 21:12:59,130 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:00:47,564 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-134} connected  
 
 2020-11-17 09:00:47,592 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-135} connected  
 
 2020-11-17 09:00:47,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-136} connected  
 
 2020-11-17 09:00:47,631 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-137} connected  
 
 2020-11-17 09:00:47,647 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-138} connected  
 
 2020-11-17 09:00:47,652 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:00:47,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 09:00:48,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 09:00:48,021 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 09:00:48,042 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 28.070901 millis. select * from t_types  
 
 2020-11-17 09:00:48,051 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 09:00:48,056 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 09:00:48,075 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 09:00:48,080 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 09:00:48,082 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 09:00:48,083 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 09:00:48,086 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 09:00:48,087 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 09:00:48,089 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 09:00:48,093 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:00:48,096 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:00:48,098 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:00:48,100 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 09:00:48,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 09:00:48,102 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 09:00:48,105 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.1064 millis. select * from t_tages  
 
 2020-11-17 09:00:48,106 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 09:00:48,107 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 09:00:48,108 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 09:00:48,110 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 09:00:48,111 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 09:00:48,112 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 09:00:48,113 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 09:00:48,114 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 09:00:48,115 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 09:00:48,116 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:00:48,116 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:00:48,633 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:00:48,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 09:00:48,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 09:00:48,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 5.5018 millis. select * from t_types  
 
 2020-11-17 09:00:48,642 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-17 09:00:48,643 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-17 09:00:48,644 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-17 09:00:48,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-17 09:00:48,647 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-17 09:00:48,648 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-17 09:00:48,650 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-17 09:00:48,651 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-17 09:00:48,652 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-17 09:00:48,653 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:00:48,654 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:00:48,655 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:00:48,656 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 09:00:48,657 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 09:00:48,659 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.7996 millis. select * from t_tages  
 
 2020-11-17 09:00:48,660 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 09:00:48,661 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-17 09:00:48,662 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习日记]  
 
 2020-11-17 09:00:48,663 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-17 09:00:48,664 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-17 09:00:48,665 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-17 09:00:48,666 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-17 09:00:48,668 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-17 09:00:48,669 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 09:00:48,670 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:00:48,671 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:00:59,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:00:59,535 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 09:00:59,536 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 09:00:59,537 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 09:00:59,538 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.856 millis. select * from t_user where username=?  
 
 2020-11-17 09:00:59,539 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-17 09:00:59,539 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 09:00:59,540 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 09:00:59,542 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-17 09:00:59,542 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:00:59,543 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:01:23,748 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:01:23,750 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 09:01:23,751 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 09:01:23,753 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.0338 millis. select * from t_tages  
 
 2020-11-17 09:01:23,754 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} open  
 
 2020-11-17 09:01:23,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Header: [id, tage]  
 
 2020-11-17 09:01:23,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [1, 学习日记]  
 
 2020-11-17 09:01:23,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [2, 错误笔记]  
 
 2020-11-17 09:01:23,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [3, 数据库笔记]  
 
 2020-11-17 09:01:23,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [4, 程序运行日记]  
 
 2020-11-17 09:01:23,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [5, 开发日记]  
 
 2020-11-17 09:01:23,762 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [8, 开发手册]  
 
 2020-11-17 09:01:23,763 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} closed  
 
 2020-11-17 09:01:23,764 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:01:23,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:01:23,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:01:23,767 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 09:01:23,767 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 09:01:23,769 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 2.7956 millis. select * from t_types  
 
 2020-11-17 09:01:23,771 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} open  
 
 2020-11-17 09:01:23,772 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Header: [id, name]  
 
 2020-11-17 09:01:23,773 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [8, 方法论]  
 
 2020-11-17 09:01:23,773 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [9, 理论类]  
 
 2020-11-17 09:01:23,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [21, 错误日记]  
 
 2020-11-17 09:01:23,775 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [23, 开发日记]  
 
 2020-11-17 09:01:23,777 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [24, 实践论]  
 
 2020-11-17 09:01:23,778 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [25, 想法论]  
 
 2020-11-17 09:01:23,779 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} closed  
 
 2020-11-17 09:01:23,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:01:23,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:04:03,963 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-17 09:04:03,966 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-17 09:04:03,969 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-17 09:04:03,973 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-17 09:04:03,978 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-17 09:04:03,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006,procId-139} connected  
 
 2020-11-17 09:04:03,987 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-17 09:04:04,003 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 09:04:04,007 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Parameters : [null, Java简介, ##Java 语言是简单的：

Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。
##Java 语言是面向对象的：

Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。
##Java语言是分布式的：

Java 语言支持 Internet 应用的开发，在基本的 Java 应用编程接口中有一个网络应用编程接口（java net），它提供了用于网络应用编程的类库，包括 URL、URLConnection、Socket、ServerSocket 等。Java 的 RMI（远程方法激活）机制也是开发分布式应用的重要手段, https://picsum.photos/seed/picsum/800/450, 是, 0, true, true, true, true, true]  
 
 2020-11-17 09:04:04,008 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-17 09:04:04,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} executed. 13.2285 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 09:04:04,022 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20003} clearParameters.   
 
 2020-11-17 09:04:04,023 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-17 09:04:04,024 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-17 09:04:04,026 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20004} created. select id from t_blog where title=?  
 
 2020-11-17 09:04:04,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20004} Parameters : [Java简介]  
 
 2020-11-17 09:04:04,028 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20004} Types : [VARCHAR]  
 
 2020-11-17 09:04:04,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20004} executed. 2.5037 millis. select id from t_blog where title=?  
 
 2020-11-17 09:04:04,031 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20004, rs-50007} open  
 
 2020-11-17 09:04:04,031 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20004, rs-50007} Header: [id]  
 
 2020-11-17 09:04:04,032 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20004, rs-50007} Result: [2]  
 
 2020-11-17 09:04:04,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20004, rs-50007} closed  
 
 2020-11-17 09:04:04,034 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20004} clearParameters.   
 
 2020-11-17 09:04:04,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-17 09:04:04,037 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-17 09:04:04,039 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20005} created. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 09:04:04,040 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20005} Parameters : [null, 1, 2]  
 
 2020-11-17 09:04:04,040 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20005} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 09:04:04,049 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20005} executed. 8.885701 millis. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 09:04:04,050 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20005} clearParameters.   
 
 2020-11-17 09:04:04,050 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-17 09:04:04,077 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-17 09:04:04,080 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-17 09:04:04,164 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-17 09:04:04,184 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20006} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:04:04,187 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20006} Parameters : [1]  
 
 2020-11-17 09:04:04,188 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20006} Types : [INTEGER]  
 
 2020-11-17 09:04:04,193 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20006} executed. 5.9046 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:04:04,194 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20006, rs-50008} open  
 
 2020-11-17 09:04:04,196 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20006, rs-50008} Header: [count(0)]  
 
 2020-11-17 09:04:04,198 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20006, rs-50008} Result: [2]  
 
 2020-11-17 09:04:04,202 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20006, rs-50008} closed  
 
 2020-11-17 09:04:04,204 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20006} clearParameters.   
 
 2020-11-17 09:04:04,216 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:04:04,220 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} Parameters : [1, 5]  
 
 2020-11-17 09:04:04,222 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:04:04,224 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} executed. 4.058901 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:04:04,225 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50009} open  
 
 2020-11-17 09:04:04,227 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50009} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:04:04,228 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50009} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:04:04,233 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50009} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:04:04,234 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50009} closed  
 
 2020-11-17 09:04:04,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} clearParameters.   
 
 2020-11-17 09:04:04,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-17 09:07:36,843 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-141} connected  
 
 2020-11-17 09:07:36,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-142} connected  
 
 2020-11-17 09:07:36,934 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-143} connected  
 
 2020-11-17 09:07:36,972 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-144} connected  
 
 2020-11-17 09:07:37,007 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-145} connected  
 
 2020-11-17 09:07:37,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:07:37,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-17 09:07:37,723 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-17 09:07:37,725 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-17 09:07:37,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 42.745701 millis. select * from t_user where username=?  
 
 2020-11-17 09:07:37,767 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 09:07:37,773 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 09:07:37,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 09:07:37,817 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 09:07:37,823 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:07:37,828 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:07:40,827 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:07:40,827 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:07:40,869 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:07:40,880 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:07:40,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 09:07:40,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 09:07:40,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.4382 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:07:40,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 09:07:40,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-17 09:07:40,888 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2]  
 
 2020-11-17 09:07:40,889 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 09:07:40,889 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:07:40,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:07:40,897 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 09:07:40,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:07:40,900 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.5222 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:07:40,901 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 09:07:40,902 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:07:40,904 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:07:40,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:07:40,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 09:07:40,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:07:40,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:08:55,254 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-146} connected  
 
 2020-11-17 09:08:55,283 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-147} connected  
 
 2020-11-17 09:08:55,305 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-148} connected  
 
 2020-11-17 09:08:55,338 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-149} connected  
 
 2020-11-17 09:08:55,374 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-150} connected  
 
 2020-11-17 09:08:55,386 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:08:55,967 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-17 09:08:55,999 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-17 09:08:56,000 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-17 09:08:56,017 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 24.120499 millis. select * from t_user where username=?  
 
 2020-11-17 09:08:56,025 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 09:08:56,029 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 09:08:56,045 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 09:08:56,050 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 09:08:56,053 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:08:56,056 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:09:02,676 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:09:02,676 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:09:02,717 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:09:02,728 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:09:02,731 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 09:09:02,733 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 09:09:02,735 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.7863 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:09:02,736 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 09:09:02,736 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-17 09:09:02,737 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2]  
 
 2020-11-17 09:09:02,739 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 09:09:02,739 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:09:02,746 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:09:02,749 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 09:09:02,750 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:09:02,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 6.2708 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:09:02,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 09:09:02,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:09:02,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:09:02,771 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:09:02,775 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 09:09:02,777 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:09:02,779 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:10:57,509 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-151} connected  
 
 2020-11-17 09:10:57,535 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-152} connected  
 
 2020-11-17 09:10:57,553 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-153} connected  
 
 2020-11-17 09:10:57,571 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-154} connected  
 
 2020-11-17 09:10:57,587 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-155} connected  
 
 2020-11-17 09:10:57,593 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:10:58,140 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-17 09:10:58,202 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-17 09:10:58,203 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-17 09:10:58,228 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 39.8782 millis. select * from t_user where username=?  
 
 2020-11-17 09:10:58,235 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 09:10:58,239 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 09:10:58,260 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 09:10:58,265 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 09:10:58,270 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:10:58,272 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:11:02,737 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:11:02,738 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:11:02,779 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:11:02,791 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:11:02,794 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 09:11:02,794 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 09:11:02,797 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.2557 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:11:02,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 09:11:02,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-17 09:11:02,799 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2]  
 
 2020-11-17 09:11:02,801 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 09:11:02,801 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:11:02,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:11:02,810 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 09:11:02,811 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:11:02,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.3417 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:11:02,814 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 09:11:02,815 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:11:02,817 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:11:02,820 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:11:02,822 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 09:11:02,823 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:11:02,824 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:11:07,938 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:11:07,940 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 09:11:07,940 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 09:11:07,941 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.973601 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:11:07,942 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 09:11:07,943 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [count(0)]  
 
 2020-11-17 09:11:07,943 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2]  
 
 2020-11-17 09:11:07,944 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 09:11:07,945 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:11:07,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 09:11:07,947 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:11:07,948 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.2904 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:11:07,949 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-17 09:11:07,950 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:11:07,951 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:11:07,952 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:11:07,953 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-17 09:11:07,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:11:07,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:11:16,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:11:16,916 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 09:11:16,917 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 09:11:16,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.5692 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:11:16,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} open  
 
 2020-11-17 09:11:16,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Header: [count(0)]  
 
 2020-11-17 09:11:16,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [2]  
 
 2020-11-17 09:11:16,920 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} closed  
 
 2020-11-17 09:11:16,921 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:11:16,922 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 09:11:16,923 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:11:16,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.204701 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:11:16,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} open  
 
 2020-11-17 09:11:16,926 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:11:16,927 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:11:16,929 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:11:16,931 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50006} closed  
 
 2020-11-17 09:11:16,931 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:11:16,932 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:11:17,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:11:17,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 09:11:17,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 09:11:17,913 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.870701 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:11:17,914 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} open  
 
 2020-11-17 09:11:17,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Header: [count(0)]  
 
 2020-11-17 09:11:17,916 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [2]  
 
 2020-11-17 09:11:17,917 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} closed  
 
 2020-11-17 09:11:17,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:11:17,920 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 09:11:17,920 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:11:17,922 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.536299 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:11:17,923 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} open  
 
 2020-11-17 09:11:17,923 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:11:17,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:11:17,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:11:17,926 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50008} closed  
 
 2020-11-17 09:11:17,927 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:11:17,927 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:11:18,776 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:11:18,777 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 09:11:18,778 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 09:11:18,779 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.960501 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:11:18,779 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} open  
 
 2020-11-17 09:11:18,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Header: [count(0)]  
 
 2020-11-17 09:11:18,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [2]  
 
 2020-11-17 09:11:18,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} closed  
 
 2020-11-17 09:11:18,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:11:18,782 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 09:11:18,783 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:11:18,784 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.7034 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:11:18,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} open  
 
 2020-11-17 09:11:18,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:11:18,787 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:11:18,787 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:11:18,789 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50010} closed  
 
 2020-11-17 09:11:18,789 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:11:18,790 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:12:43,261 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-156} connected  
 
 2020-11-17 09:12:43,275 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-157} connected  
 
 2020-11-17 09:12:43,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-158} connected  
 
 2020-11-17 09:12:43,296 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-159} connected  
 
 2020-11-17 09:12:43,306 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-160} connected  
 
 2020-11-17 09:12:43,310 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:12:43,453 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 09:12:43,469 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 09:12:43,470 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 09:12:43,479 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 13.710801 millis. select * from t_types  
 
 2020-11-17 09:12:43,484 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 09:12:43,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 09:12:43,496 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 09:12:43,498 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 09:12:43,499 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 09:12:43,499 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 09:12:43,500 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 09:12:43,502 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 09:12:43,503 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 09:12:43,504 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:12:43,505 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:12:43,507 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:12:43,508 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 09:12:43,508 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 09:12:43,509 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 09:12:43,510 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.865701 millis. select * from t_tages  
 
 2020-11-17 09:12:43,511 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 09:12:43,511 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 09:12:43,512 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 09:12:43,512 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 09:12:43,514 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 09:12:43,514 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 09:12:43,514 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 09:12:43,515 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 09:12:43,515 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 09:12:43,516 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:12:43,516 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:12:50,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:12:51,037 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 09:12:51,041 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 09:12:51,042 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 09:12:51,056 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 7.2172 millis. select * from t_user where username=?  
 
 2020-11-17 09:12:51,057 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 09:12:51,058 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 09:12:51,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 09:12:51,070 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 09:12:51,071 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:12:51,073 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:13:02,792 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:13:02,793 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 09:13:02,794 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 09:13:02,796 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.415099 millis. select * from t_user where username=?  
 
 2020-11-17 09:13:02,796 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50003} open  
 
 2020-11-17 09:13:02,797 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50003} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 09:13:02,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50003} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 09:13:02,800 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50003} closed  
 
 2020-11-17 09:13:02,800 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:13:02,801 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:13:06,984 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:13:06,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:13:07,021 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:13:07,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:13:07,028 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 09:13:07,029 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 09:13:07,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.043399 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:13:07,031 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50004} open  
 
 2020-11-17 09:13:07,031 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50004} Header: [count(0)]  
 
 2020-11-17 09:13:07,032 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50004} Result: [2]  
 
 2020-11-17 09:13:07,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50004} closed  
 
 2020-11-17 09:13:07,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 09:13:07,038 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:13:07,039 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 09:13:07,040 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:13:07,041 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.1904 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:13:07,042 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} open  
 
 2020-11-17 09:13:07,043 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:13:07,044 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:13:07,046 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:13:07,047 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} closed  
 
 2020-11-17 09:13:07,048 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 09:13:07,048 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:13:08,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:13:08,920 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. delete from t_blog where id=?  
 
 2020-11-17 09:13:08,921 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [2]  
 
 2020-11-17 09:13:08,922 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-17 09:13:08,959 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10005, pstmt-20005} execute error. delete from t_blog where id=?  
 java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`blog`.`t_user_blog`, CONSTRAINT `t_user_blog_ibfk_2` FOREIGN KEY (`bid`) REFERENCES `t_blog` (`id`))
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy108.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy106.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.delete(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.delete(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.delete(BaseServiceImpl.java:97)
	at com.example.blog.service.BolgServiceImpl.deleteByid(BolgServiceImpl.java:53)
	at com.example.blog.controller.BlogController.deleteBlog(BlogController.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-17 09:13:08,966 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 09:13:08,968 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} closed  
 
 2020-11-17 09:13:08,970 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:13:09,045 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:13:09,046 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:14:24,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-161} connected  
 
 2020-11-17 09:14:24,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-162} connected  
 
 2020-11-17 09:14:24,956 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-163} connected  
 
 2020-11-17 09:14:24,999 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-164} connected  
 
 2020-11-17 09:14:25,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-165} connected  
 
 2020-11-17 09:14:25,045 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:14:25,689 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-17 09:14:25,742 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-17 09:14:25,743 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-17 09:14:25,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 43.3339 millis. select * from t_user where username=?  
 
 2020-11-17 09:14:25,787 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 09:14:25,793 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 09:14:25,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 09:14:25,839 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 09:14:25,845 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:14:25,850 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:14:33,010 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:14:33,011 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:14:33,045 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:14:33,056 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:14:33,059 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 09:14:33,060 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 09:14:33,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.834599 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:14:33,064 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 09:14:33,064 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-17 09:14:33,065 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2]  
 
 2020-11-17 09:14:33,067 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 09:14:33,068 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:14:33,075 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:14:33,077 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 09:14:33,077 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:14:33,080 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.99 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:14:33,081 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 09:14:33,082 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:14:33,085 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:14:33,087 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:14:33,090 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 09:14:33,090 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:14:33,091 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:18:54,586 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-166} connected  
 
 2020-11-17 09:18:54,618 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-167} connected  
 
 2020-11-17 09:18:54,639 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-168} connected  
 
 2020-11-17 09:18:54,659 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-169} connected  
 
 2020-11-17 09:18:54,677 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-170} connected  
 
 2020-11-17 09:18:54,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:18:55,169 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-17 09:18:55,206 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-17 09:18:55,208 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-17 09:18:55,240 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 44.5358 millis. select * from t_user where username=?  
 
 2020-11-17 09:18:55,254 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 09:18:55,258 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 09:18:55,279 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 09:18:55,285 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 09:18:55,288 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 09:18:55,291 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:19:03,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:19:03,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 09:19:03,430 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 09:19:03,430 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 09:19:03,433 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.074401 millis. select * from t_tages  
 
 2020-11-17 09:19:03,433 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 09:19:03,434 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 09:19:03,434 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 09:19:03,436 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 09:19:03,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 09:19:03,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 09:19:03,438 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 09:19:03,439 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 09:19:03,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 09:19:03,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 09:19:03,442 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:19:03,444 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:19:03,445 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-17 09:19:03,446 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-17 09:19:03,447 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-17 09:19:03,449 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.4938 millis. select * from t_types  
 
 2020-11-17 09:19:03,450 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 09:19:03,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-17 09:19:03,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-17 09:19:03,453 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-17 09:19:03,454 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-17 09:19:03,455 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-17 09:19:03,455 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-17 09:19:03,456 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-17 09:19:03,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 09:19:03,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 09:19:03,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:19:05,367 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:19:05,368 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:19:05,411 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:19:05,421 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:19:05,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 09:19:05,425 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 09:19:05,427 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 3.2604 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:19:05,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-17 09:19:05,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [count(0)]  
 
 2020-11-17 09:19:05,429 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [2]  
 
 2020-11-17 09:19:05,430 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-17 09:19:05,431 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 09:19:05,438 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:19:05,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 09:19:05,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:19:05,443 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.978999 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:19:05,444 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} open  
 
 2020-11-17 09:19:05,445 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:19:05,446 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:19:05,448 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [zhangsan, 2, Java简介, 2020-11-17 17:04:04.0, 1, true, true]  
 
 2020-11-17 09:19:05,450 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} closed  
 
 2020-11-17 09:19:05,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 09:19:05,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:19:09,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:19:09,595 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. delete from t_user_blog where bid=?  
 
 2020-11-17 09:19:09,596 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [2]  
 
 2020-11-17 09:19:09,596 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-17 09:19:09,602 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 6.2126 millis. delete from t_user_blog where bid=?  
 
 2020-11-17 09:19:09,603 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 09:19:09,603 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:19:09,617 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:19:09,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. delete from t_blog where id=?  
 
 2020-11-17 09:19:09,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [2]  
 
 2020-11-17 09:19:09,620 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER]  
 
 2020-11-17 09:19:09,625 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 5.694001 millis. delete from t_blog where id=?  
 
 2020-11-17 09:19:09,626 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 09:19:09,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:19:09,637 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 09:19:09,639 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 09:19:09,640 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 09:19:09,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.1959 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:19:09,642 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} open  
 
 2020-11-17 09:19:09,642 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Header: [count(0)]  
 
 2020-11-17 09:19:09,643 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Result: [1]  
 
 2020-11-17 09:19:09,644 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} closed  
 
 2020-11-17 09:19:09,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 09:19:09,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 09:19:09,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:19:09,652 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.3233 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:19:09,653 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} open  
 
 2020-11-17 09:19:09,653 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:19:09,655 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:19:09,657 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} closed  
 
 2020-11-17 09:19:09,658 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 09:19:09,659 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 09:20:39,651 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-17 09:20:39,655 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-17 09:20:39,658 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-17 09:20:39,663 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-17 09:20:39,667 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-17 09:20:39,677 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006,procId-173} connected  
 
 2020-11-17 09:20:39,678 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-17 09:20:39,680 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} created. select * from t_tages  
 
 2020-11-17 09:20:39,682 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} Parameters : []  
 
 2020-11-17 09:20:39,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} Types : []  
 
 2020-11-17 09:20:39,686 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} executed. 3.9553 millis. select * from t_tages  
 
 2020-11-17 09:20:39,686 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} open  
 
 2020-11-17 09:20:39,687 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} Header: [id, tage]  
 
 2020-11-17 09:20:39,688 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} Result: [1, 学习日记]  
 
 2020-11-17 09:20:39,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} Result: [2, 错误笔记]  
 
 2020-11-17 09:20:39,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} Result: [3, 数据库笔记]  
 
 2020-11-17 09:20:39,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} Result: [4, 程序运行日记]  
 
 2020-11-17 09:20:39,692 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} Result: [5, 开发日记]  
 
 2020-11-17 09:20:39,693 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} Result: [8, 开发手册]  
 
 2020-11-17 09:20:39,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20007, rs-50007} closed  
 
 2020-11-17 09:20:39,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20007} clearParameters.   
 
 2020-11-17 09:20:39,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-17 09:20:39,696 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-connect  
 
 2020-11-17 09:20:39,697 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20008} created. select * from t_types  
 
 2020-11-17 09:20:39,697 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20008} Parameters : []  
 
 2020-11-17 09:20:39,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20008} Types : []  
 
 2020-11-17 09:20:39,700 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20008} executed. 2.522901 millis. select * from t_types  
 
 2020-11-17 09:20:39,701 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} open  
 
 2020-11-17 09:20:39,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} Header: [id, name]  
 
 2020-11-17 09:20:39,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} Result: [8, 方法论]  
 
 2020-11-17 09:20:39,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} Result: [9, 理论类]  
 
 2020-11-17 09:20:39,705 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} Result: [21, 错误日记]  
 
 2020-11-17 09:20:39,706 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} Result: [23, 开发日记]  
 
 2020-11-17 09:20:39,707 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} Result: [24, 实践论]  
 
 2020-11-17 09:20:39,708 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} Result: [25, 想法论]  
 
 2020-11-17 09:20:39,710 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10006, pstmt-20008, rs-50008} closed  
 
 2020-11-17 09:20:39,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10006, pstmt-20008} clearParameters.   
 
 2020-11-17 09:20:39,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} pool-recycle  
 
 2020-11-17 09:21:45,747 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10006} closed  
 
 2020-11-17 09:21:45,760 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007,procId-174} connected  
 
 2020-11-17 09:21:45,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007} pool-connect  
 
 2020-11-17 09:21:45,776 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20009} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 09:21:45,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20009} Parameters : [null, Java简介, ##Java 语言是简单的：

Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。

##Java 语言是面向对象的：

Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。

##Java语言是分布式的：

Java 语言支持 Internet 应用的开发，在基本的 Java 应用编程接口中有一个网络应用编程接口（java net），它提供了用于网络应用编程的类库，包括 URL、URLConnection、Socket、ServerSocket 等。Java 的 RMI（远程方法激活）机制也是开发分布式应用的重要手段。

##Java 语言是健壮的：
Java 的强类型机制、异常处理、垃圾的自动收集等是 Java 程序健壮性的重要保证。对指针的丢弃是 Java 的明智选择。Java 的安全检查机制使得 Java 更具健壮性。

##Java语言是安全的：

Java通常被用在网络环境中，为此，Java 提供了一个安全机制以防恶意代码的攻击。除了Java 语言具有的许多安全特性以外，Java 对通过网络下载的类具有一个安全防范机制（类 ClassLoader），如分配不同的名字空间以防替代本地的同名类、字节代码检查，并提供安全管理机制（类 SecurityManager）让 Java 应用设置安全哨兵。

##Java 语言是体系结构中立的：

Java 程序（后缀为 java 的文件）在 Java 平台上被编译为体系结构中立的字节码格式（后缀为 class 的文件），然后可以在实现这个 Java 平台的任何系统中运行。这种途径适合于异构的网络环境和软件的分发。

##Java 语言是可移植的：

这种可移植性来源于体系结构中立性，另外，Java 还严格规定了各个基本数据类型的长度。Java 系统本身也具有很强的可移植性，Java 编译器是用 Java 实现的，Java 的运行环境是用 ANSI C 实现的。

##Java 语言是解释型的：

如前所述，Java 程序在 Java 平台上被编译为字节码格式，然后可以在实现这个 Java 平台的任何系统中运行。在运行时，Java 平台中的 Java 解释器对这些字节码进行解释执行，执行过程中需要的类在联接阶段被载入到运行环境中。

##Java 是高性能的：

与那些解释型的高级脚本语言相比，Java 的确是高性能的。事实上，Java 的运行速度随着 JIT(Just-In-Time）编译器技术的发展越来越接近于 C++。

##Java 语言是多线程的：

在 Java 语言中，线程是一种特殊的对象，它必须由 Thread 类或其子（孙）类来创建。通常有两种方法来创建线程：其一，使用型构为 Thread(Runnable) 的构造子类将一个实现了 Runnable 接口的对象包装成一个线程，其二，从 Thread 类派生出子类并重写 run 方法，使用该子类创建的对象即为线程。值得注意的是 Thread 类已经实现了 Runnable 接口，因此，任何一个线程均有它的 run 方法，而 run 方法中包含了线程所要运行的代码。线程的活动由一组方法来控制。Java 语言支持多个线程的同时执行，并提供多线程之间的同步机制（关键字为 synchronized）。, https://picsum.photos/seed/picsum/800/450, 是, 0, true, true, true, true, true]  
 
 2020-11-17 09:21:45,782 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20009} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-17 09:21:45,792 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20009} executed. 11.397 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 09:21:45,793 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20009} clearParameters.   
 
 2020-11-17 09:21:45,794 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007} pool-recycle  
 
 2020-11-17 09:21:45,795 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007} pool-connect  
 
 2020-11-17 09:21:45,797 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20010} created. select id from t_blog where title=?  
 
 2020-11-17 09:21:45,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20010} Parameters : [Java简介]  
 
 2020-11-17 09:21:45,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20010} Types : [VARCHAR]  
 
 2020-11-17 09:21:45,800 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20010} executed. 2.396399 millis. select id from t_blog where title=?  
 
 2020-11-17 09:21:45,801 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20010, rs-50009} open  
 
 2020-11-17 09:21:45,802 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20010, rs-50009} Header: [id]  
 
 2020-11-17 09:21:45,803 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20010, rs-50009} Result: [3]  
 
 2020-11-17 09:21:45,805 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20010, rs-50009} closed  
 
 2020-11-17 09:21:45,806 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20010} clearParameters.   
 
 2020-11-17 09:21:45,807 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007} pool-recycle  
 
 2020-11-17 09:21:45,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007} pool-connect  
 
 2020-11-17 09:21:45,810 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20011} created. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 09:21:45,811 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20011} Parameters : [null, 1, 3]  
 
 2020-11-17 09:21:45,812 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20011} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 09:21:45,818 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20011} executed. 6.6887 millis. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 09:21:45,819 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20011} clearParameters.   
 
 2020-11-17 09:21:45,820 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007} pool-recycle  
 
 2020-11-17 09:21:45,842 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007} pool-connect  
 
 2020-11-17 09:21:45,844 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20012} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:21:45,845 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20012} Parameters : [1]  
 
 2020-11-17 09:21:45,846 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20012} Types : [INTEGER]  
 
 2020-11-17 09:21:45,848 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20012} executed. 2.2781 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 09:21:45,848 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20012, rs-50010} open  
 
 2020-11-17 09:21:45,849 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20012, rs-50010} Header: [count(0)]  
 
 2020-11-17 09:21:45,849 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20012, rs-50010} Result: [2]  
 
 2020-11-17 09:21:45,850 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20012, rs-50010} closed  
 
 2020-11-17 09:21:45,851 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20012} clearParameters.   
 
 2020-11-17 09:21:45,853 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20013} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:21:45,855 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20013} Parameters : [1, 5]  
 
 2020-11-17 09:21:45,856 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20013} Types : [INTEGER, INTEGER]  
 
 2020-11-17 09:21:45,857 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20013} executed. 2.2731 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 09:21:45,858 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20013, rs-50011} open  
 
 2020-11-17 09:21:45,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20013, rs-50011} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 09:21:45,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20013, rs-50011} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 09:21:45,861 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20013, rs-50011} Result: [zhangsan, 3, Java简介, 2020-11-17 17:21:45.0, 1, true, true]  
 
 2020-11-17 09:21:45,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10007, pstmt-20013, rs-50011} closed  
 
 2020-11-17 09:21:45,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10007, pstmt-20013} clearParameters.   
 
 2020-11-17 09:21:45,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10007} pool-recycle  
 
 2020-11-17 10:32:02,769 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-175} connected  
 
 2020-11-17 10:32:02,832 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-176} connected  
 
 2020-11-17 10:32:02,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-177} connected  
 
 2020-11-17 10:32:02,921 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-178} connected  
 
 2020-11-17 10:32:02,963 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-179} connected  
 
 2020-11-17 10:32:02,976 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:03,349 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 10:32:03,385 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 10:32:03,386 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 10:32:03,411 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 33.5033 millis. select * from t_types  
 
 2020-11-17 10:32:03,421 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 10:32:03,426 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 10:32:03,450 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 10:32:03,457 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 10:32:03,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 10:32:03,460 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 10:32:03,464 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 10:32:03,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 10:32:03,469 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 10:32:03,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 10:32:03,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:03,478 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:03,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 10:32:03,481 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 10:32:03,482 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 10:32:03,484 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.4667 millis. select * from t_tages  
 
 2020-11-17 10:32:03,484 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 10:32:03,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 10:32:03,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 10:32:03,487 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 10:32:03,488 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 10:32:03,489 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 10:32:03,490 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 10:32:03,491 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 10:32:03,492 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 10:32:03,493 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 10:32:03,493 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:04,073 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:04,075 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 10:32:04,075 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 10:32:04,081 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 6.0519 millis. select * from t_types  
 
 2020-11-17 10:32:04,083 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-17 10:32:04,085 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-17 10:32:04,085 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-17 10:32:04,089 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-17 10:32:04,090 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-17 10:32:04,092 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-17 10:32:04,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-17 10:32:04,096 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-17 10:32:04,098 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-17 10:32:04,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 10:32:04,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:04,102 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:04,103 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 10:32:04,103 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 10:32:04,105 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.2379 millis. select * from t_tages  
 
 2020-11-17 10:32:04,106 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 10:32:04,107 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-17 10:32:04,108 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习日记]  
 
 2020-11-17 10:32:04,109 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-17 10:32:04,110 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-17 10:32:04,112 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-17 10:32:04,113 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-17 10:32:04,115 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-17 10:32:04,117 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 10:32:04,118 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 10:32:04,119 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:14,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:14,679 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 10:32:14,680 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 10:32:14,680 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 10:32:14,682 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 1.5184 millis. select * from t_user where username=?  
 
 2020-11-17 10:32:14,682 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-17 10:32:14,682 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 10:32:14,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 10:32:14,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-17 10:32:14,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 10:32:14,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:23,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:23,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:23,970 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:23,981 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 10:32:23,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 10:32:23,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 10:32:23,989 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 4.5468 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 10:32:23,990 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} open  
 
 2020-11-17 10:32:23,991 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Header: [count(0)]  
 
 2020-11-17 10:32:23,992 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Result: [2]  
 
 2020-11-17 10:32:23,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} closed  
 
 2020-11-17 10:32:23,994 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 10:32:24,001 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 10:32:24,003 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 10:32:24,004 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 10:32:24,005 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.1847 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 10:32:24,006 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} open  
 
 2020-11-17 10:32:24,007 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 10:32:24,008 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 10:32:24,011 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 3, Java简介, 2020-11-17 17:21:45.0, 1, true, true]  
 
 2020-11-17 10:32:24,012 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} closed  
 
 2020-11-17 10:32:24,012 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 10:32:24,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:32,752 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:32,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND title LIKE concat('%', ?, '%')  
 
 2020-11-17 10:32:32,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [笔记]  
 
 2020-11-17 10:32:32,762 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [VARCHAR]  
 
 2020-11-17 10:32:32,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 3.8789 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND title LIKE concat('%', ?, '%')  
 
 2020-11-17 10:32:32,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50007} open  
 
 2020-11-17 10:32:32,767 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50007} Header: [count(0)]  
 
 2020-11-17 10:32:32,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50007} Result: [1]  
 
 2020-11-17 10:32:32,769 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50007} closed  
 
 2020-11-17 10:32:32,770 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 10:32:32,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
          where
        tb.id=tub.bid and tub.uid=us.id
            and
        title like concat('%',?,'%') LIMIT ?   
 
 2020-11-17 10:32:32,777 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [笔记, 5]  
 
 2020-11-17 10:32:32,778 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [VARCHAR, INTEGER]  
 
 2020-11-17 10:32:32,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 2.8867 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
          where
        tb.id=tub.bid and tub.uid=us.id
            and
        title like concat('%',?,'%') LIMIT ?   
 
 2020-11-17 10:32:32,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50008} open  
 
 2020-11-17 10:32:32,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50008} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 10:32:32,783 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50008} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 10:32:32,784 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50008} closed  
 
 2020-11-17 10:32:32,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 10:32:32,786 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:38,465 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:38,467 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : []  
 
 2020-11-17 10:32:38,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [VARCHAR]  
 
 2020-11-17 10:32:38,470 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 2.9375 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND title LIKE concat('%', ?, '%')  
 
 2020-11-17 10:32:38,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50009} open  
 
 2020-11-17 10:32:38,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50009} Header: [count(0)]  
 
 2020-11-17 10:32:38,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50009} Result: [2]  
 
 2020-11-17 10:32:38,472 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50009} closed  
 
 2020-11-17 10:32:38,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 10:32:38,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [, 5]  
 
 2020-11-17 10:32:38,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [VARCHAR, INTEGER]  
 
 2020-11-17 10:32:38,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 1.701 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
          where
        tb.id=tub.bid and tub.uid=us.id
            and
        title like concat('%',?,'%') LIMIT ?   
 
 2020-11-17 10:32:38,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50010} open  
 
 2020-11-17 10:32:38,477 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50010} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 10:32:38,477 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50010} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 10:32:38,479 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50010} Result: [zhangsan, 3, Java简介, 2020-11-17 17:21:45.0, 1, true, true]  
 
 2020-11-17 10:32:38,481 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50010} closed  
 
 2020-11-17 10:32:38,481 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 10:32:38,482 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:41,974 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:41,975 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [笔记]  
 
 2020-11-17 10:32:41,976 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [VARCHAR]  
 
 2020-11-17 10:32:41,977 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 1.8747 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND title LIKE concat('%', ?, '%')  
 
 2020-11-17 10:32:41,977 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50011} open  
 
 2020-11-17 10:32:41,978 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50011} Header: [count(0)]  
 
 2020-11-17 10:32:41,978 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50011} Result: [1]  
 
 2020-11-17 10:32:41,979 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50011} closed  
 
 2020-11-17 10:32:41,979 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 10:32:41,980 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [笔记, 5]  
 
 2020-11-17 10:32:41,981 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [VARCHAR, INTEGER]  
 
 2020-11-17 10:32:41,982 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 2.0526 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
          where
        tb.id=tub.bid and tub.uid=us.id
            and
        title like concat('%',?,'%') LIMIT ?   
 
 2020-11-17 10:32:41,983 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50012} open  
 
 2020-11-17 10:32:41,983 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50012} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 10:32:41,984 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50012} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 10:32:41,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50012} closed  
 
 2020-11-17 10:32:41,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 10:32:41,986 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:32:43,605 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:32:43,606 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : []  
 
 2020-11-17 10:32:43,606 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [VARCHAR]  
 
 2020-11-17 10:32:43,608 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 1.6134 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND title LIKE concat('%', ?, '%')  
 
 2020-11-17 10:32:43,608 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50013} open  
 
 2020-11-17 10:32:43,609 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50013} Header: [count(0)]  
 
 2020-11-17 10:32:43,609 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50013} Result: [2]  
 
 2020-11-17 10:32:43,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50013} closed  
 
 2020-11-17 10:32:43,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 10:32:43,611 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [, 5]  
 
 2020-11-17 10:32:43,611 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [VARCHAR, INTEGER]  
 
 2020-11-17 10:32:43,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 1.3105 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
          where
        tb.id=tub.bid and tub.uid=us.id
            and
        title like concat('%',?,'%') LIMIT ?   
 
 2020-11-17 10:32:43,613 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} open  
 
 2020-11-17 10:32:43,613 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 10:32:43,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 10:32:43,615 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} Result: [zhangsan, 3, Java简介, 2020-11-17 17:21:45.0, 1, true, true]  
 
 2020-11-17 10:32:43,616 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50014} closed  
 
 2020-11-17 10:32:43,616 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 10:32:43,617 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:54:13,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-186} connected  
 
 2020-11-17 10:54:13,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-187} connected  
 
 2020-11-17 10:54:13,948 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-188} connected  
 
 2020-11-17 10:54:13,984 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-189} connected  
 
 2020-11-17 10:54:14,021 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-190} connected  
 
 2020-11-17 10:54:14,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:54:14,738 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-17 10:54:14,797 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-17 10:54:14,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-17 10:54:14,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 42.5643 millis. select * from t_user where username=?  
 
 2020-11-17 10:54:14,844 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 10:54:14,850 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 10:54:14,890 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 10:54:14,899 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 10:54:14,905 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 10:54:14,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:54:18,204 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:54:18,204 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:54:18,245 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:54:18,257 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 10:54:18,261 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 10:54:18,262 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 10:54:18,269 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 8.5537 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 10:54:18,271 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 10:54:18,272 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [count(0)]  
 
 2020-11-17 10:54:18,273 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2]  
 
 2020-11-17 10:54:18,277 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 10:54:18,279 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 10:54:18,291 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 10:54:18,295 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 10:54:18,296 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 10:54:18,300 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 5.2952 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 10:54:18,302 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 10:54:18,303 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 10:54:18,306 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 10:54:18,312 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [zhangsan, 3, Java简介, 2020-11-17 17:21:45.0, 1, true, true]  
 
 2020-11-17 10:54:18,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 10:54:18,318 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 10:54:18,319 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:54:25,228 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:54:25,234 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. delete from t_user_blog where bid=?  
 
 2020-11-17 10:54:25,236 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [3]  
 
 2020-11-17 10:54:25,237 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 10:54:25,256 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 19.7992 millis. delete from t_user_blog where bid=?  
 
 2020-11-17 10:54:25,257 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 10:54:25,259 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:54:25,282 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:54:25,283 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. delete from t_blog where id=?  
 
 2020-11-17 10:54:25,285 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [3]  
 
 2020-11-17 10:54:25,285 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER]  
 
 2020-11-17 10:54:25,293 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 8.5327 millis. delete from t_blog where id=?  
 
 2020-11-17 10:54:25,295 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 10:54:25,296 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:54:25,313 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:54:25,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : [1]  
 
 2020-11-17 10:54:25,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : [INTEGER]  
 
 2020-11-17 10:54:25,318 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.8738 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 10:54:25,319 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 10:54:25,320 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [count(0)]  
 
 2020-11-17 10:54:25,320 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1]  
 
 2020-11-17 10:54:25,322 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 10:54:25,322 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 10:54:25,324 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [1, 5]  
 
 2020-11-17 10:54:25,325 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [INTEGER, INTEGER]  
 
 2020-11-17 10:54:25,328 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 3.4247 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 10:54:25,329 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-17 10:54:25,330 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 10:54:25,331 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 10:54:25,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-17 10:54:25,335 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 10:54:25,335 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:54:26,679 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:54:26,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. select * from t_tages  
 
 2020-11-17 10:54:26,682 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : []  
 
 2020-11-17 10:54:26,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : []  
 
 2020-11-17 10:54:26,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 2.5984 millis. select * from t_tages  
 
 2020-11-17 10:54:26,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} open  
 
 2020-11-17 10:54:26,686 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Header: [id, tage]  
 
 2020-11-17 10:54:26,687 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Result: [1, 学习日记]  
 
 2020-11-17 10:54:26,688 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Result: [2, 错误笔记]  
 
 2020-11-17 10:54:26,689 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Result: [3, 数据库笔记]  
 
 2020-11-17 10:54:26,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Result: [4, 程序运行日记]  
 
 2020-11-17 10:54:26,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Result: [5, 开发日记]  
 
 2020-11-17 10:54:26,692 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} Result: [8, 开发手册]  
 
 2020-11-17 10:54:26,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50005} closed  
 
 2020-11-17 10:54:26,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 10:54:26,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:54:26,696 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:54:26,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. select * from t_types  
 
 2020-11-17 10:54:26,700 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : []  
 
 2020-11-17 10:54:26,700 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : []  
 
 2020-11-17 10:54:26,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 2.6547 millis. select * from t_types  
 
 2020-11-17 10:54:26,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} open  
 
 2020-11-17 10:54:26,704 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Header: [id, name]  
 
 2020-11-17 10:54:26,705 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [8, 方法论]  
 
 2020-11-17 10:54:26,707 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [9, 理论类]  
 
 2020-11-17 10:54:26,709 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [21, 错误日记]  
 
 2020-11-17 10:54:26,710 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [23, 开发日记]  
 
 2020-11-17 10:54:26,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [24, 实践论]  
 
 2020-11-17 10:54:26,712 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} Result: [25, 想法论]  
 
 2020-11-17 10:54:26,713 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50006} closed  
 
 2020-11-17 10:54:26,714 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 10:54:26,714 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:56:57,605 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-191} connected  
 
 2020-11-17 10:56:57,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-192} connected  
 
 2020-11-17 10:56:57,662 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-193} connected  
 
 2020-11-17 10:56:57,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-194} connected  
 
 2020-11-17 10:56:57,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-195} connected  
 
 2020-11-17 10:56:57,711 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:56:58,251 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 10:56:58,303 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 10:56:58,304 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 10:56:58,334 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 41.871 millis. select * from t_types  
 
 2020-11-17 10:56:58,345 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 10:56:58,348 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 10:56:58,366 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 10:56:58,370 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 10:56:58,372 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 10:56:58,373 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 10:56:58,375 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 10:56:58,376 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 10:56:58,379 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 10:56:58,382 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 10:56:58,384 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:56:58,385 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:56:58,387 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 10:56:58,388 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 10:56:58,389 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 10:56:58,391 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.977 millis. select * from t_tages  
 
 2020-11-17 10:56:58,392 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 10:56:58,393 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 10:56:58,393 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 10:56:58,395 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 10:56:58,396 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 10:56:58,397 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 10:56:58,398 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 10:56:58,399 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 10:56:58,400 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 10:56:58,402 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 10:56:58,403 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:57:05,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:57:05,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 10:57:05,618 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 10:57:05,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 10:57:05,633 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 8.1749 millis. select * from t_user where username=?  
 
 2020-11-17 10:57:05,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 10:57:05,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 10:57:05,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 10:57:05,648 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 10:57:05,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 10:57:05,650 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:57:08,404 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:57:08,406 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 10:57:08,407 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 10:57:08,409 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.7181 millis. select * from t_tages  
 
 2020-11-17 10:57:08,410 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 10:57:08,411 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-17 10:57:08,412 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习日记]  
 
 2020-11-17 10:57:08,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-17 10:57:08,415 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-17 10:57:08,415 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-17 10:57:08,415 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-17 10:57:08,416 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-17 10:57:08,417 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 10:57:08,418 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 10:57:08,418 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 10:57:08,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 10:57:08,421 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 10:57:08,422 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 10:57:08,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 2.4261 millis. select * from t_types  
 
 2020-11-17 10:57:08,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} open  
 
 2020-11-17 10:57:08,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Header: [id, name]  
 
 2020-11-17 10:57:08,425 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [8, 方法论]  
 
 2020-11-17 10:57:08,426 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [9, 理论类]  
 
 2020-11-17 10:57:08,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [21, 错误日记]  
 
 2020-11-17 10:57:08,428 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [23, 开发日记]  
 
 2020-11-17 10:57:08,429 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [24, 实践论]  
 
 2020-11-17 10:57:08,430 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [25, 想法论]  
 
 2020-11-17 10:57:08,431 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} closed  
 
 2020-11-17 10:57:08,431 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 10:57:08,432 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:00:10,460 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-196} connected  
 
 2020-11-17 11:00:10,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-197} connected  
 
 2020-11-17 11:00:10,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-198} connected  
 
 2020-11-17 11:00:10,495 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-199} connected  
 
 2020-11-17 11:00:10,505 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-200} connected  
 
 2020-11-17 11:00:10,510 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:00:10,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 11:00:10,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 11:00:10,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 11:00:10,715 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 17.8639 millis. select * from t_types  
 
 2020-11-17 11:00:10,721 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 11:00:10,724 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 11:00:10,738 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 11:00:10,741 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 11:00:10,742 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 11:00:10,743 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 11:00:10,744 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 11:00:10,745 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 11:00:10,746 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 11:00:10,748 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:00:10,750 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:00:10,752 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:00:10,753 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 11:00:10,754 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:00:10,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:00:10,756 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.0356 millis. select * from t_tages  
 
 2020-11-17 11:00:10,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 11:00:10,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 11:00:10,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 11:00:10,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 11:00:10,760 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 11:00:10,760 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 11:00:10,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 11:00:10,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 11:00:10,762 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 11:00:10,762 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:00:10,762 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:00:17,519 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:00:17,670 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 11:00:17,676 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 11:00:17,677 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 11:00:17,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 7.3895 millis. select * from t_user where username=?  
 
 2020-11-17 11:00:17,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 11:00:17,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 11:00:17,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 11:00:17,699 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 11:00:17,699 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 11:00:17,700 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:00:20,752 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:00:20,753 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:00:20,755 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:00:20,757 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.3626 millis. select * from t_tages  
 
 2020-11-17 11:00:20,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 11:00:20,758 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-17 11:00:20,759 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习日记]  
 
 2020-11-17 11:00:20,761 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-17 11:00:20,763 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-17 11:00:20,764 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-17 11:00:20,765 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-17 11:00:20,766 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-17 11:00:20,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 11:00:20,768 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:00:20,769 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:00:20,770 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:00:20,772 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 11:00:20,772 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 11:00:20,774 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 2.8014 millis. select * from t_types  
 
 2020-11-17 11:00:20,775 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} open  
 
 2020-11-17 11:00:20,776 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Header: [id, name]  
 
 2020-11-17 11:00:20,777 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [8, 方法论]  
 
 2020-11-17 11:00:20,779 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [9, 理论类]  
 
 2020-11-17 11:00:20,781 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [21, 错误日记]  
 
 2020-11-17 11:00:20,782 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [23, 开发日记]  
 
 2020-11-17 11:00:20,782 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [24, 实践论]  
 
 2020-11-17 11:00:20,783 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [25, 想法论]  
 
 2020-11-17 11:00:20,784 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} closed  
 
 2020-11-17 11:00:20,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:00:20,786 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:01:46,340 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001} closed  
 
 2020-11-17 11:01:46,342 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002} closed  
 
 2020-11-17 11:01:46,343 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003} closed  
 
 2020-11-17 11:01:46,344 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004} closed  
 
 2020-11-17 11:01:46,344 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} closed  
 
 2020-11-17 11:01:46,344 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} closed  
 
 2020-11-17 11:01:46,345 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} closed  
 
 2020-11-17 11:01:46,345 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} closed  
 
 2020-11-17 11:02:30,263 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-201} connected  
 
 2020-11-17 11:02:30,312 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-202} connected  
 
 2020-11-17 11:02:30,354 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-203} connected  
 
 2020-11-17 11:02:30,393 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-204} connected  
 
 2020-11-17 11:02:30,427 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-205} connected  
 
 2020-11-17 11:02:30,438 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:02:30,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 11:02:30,965 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 11:02:30,967 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 11:02:30,998 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 43.6651 millis. select * from t_types  
 
 2020-11-17 11:02:31,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 11:02:31,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 11:02:31,054 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 11:02:31,062 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 11:02:31,064 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 11:02:31,067 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 11:02:31,071 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 11:02:31,073 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 11:02:31,076 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 11:02:31,082 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:02:31,086 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:02:31,089 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:02:31,092 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 11:02:31,094 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:02:31,095 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:02:31,099 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.8848 millis. select * from t_tages  
 
 2020-11-17 11:02:31,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 11:02:31,102 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 11:02:31,104 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 11:02:31,107 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 11:02:31,110 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 11:02:31,111 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 11:02:31,113 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 11:02:31,115 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 11:02:31,119 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 11:02:31,121 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:02:31,123 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:03:01,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:03:01,977 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 11:03:01,982 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 11:03:01,983 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 11:03:01,990 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 8.0981 millis. select * from t_user where username=?  
 
 2020-11-17 11:03:01,991 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 11:03:01,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 11:03:01,998 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 11:03:02,004 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 11:03:02,006 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 11:03:02,008 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:03:08,980 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:03:08,983 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:03:08,983 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:03:08,985 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.808 millis. select * from t_tages  
 
 2020-11-17 11:03:08,986 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 11:03:08,987 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-17 11:03:08,988 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习日记]  
 
 2020-11-17 11:03:08,989 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-17 11:03:08,990 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-17 11:03:08,991 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-17 11:03:08,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-17 11:03:08,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-17 11:03:08,995 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 11:03:08,995 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:03:08,995 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:03:08,996 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:03:08,997 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 11:03:08,999 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 11:03:09,001 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 3.1194 millis. select * from t_types  
 
 2020-11-17 11:03:09,001 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} open  
 
 2020-11-17 11:03:09,002 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Header: [id, name]  
 
 2020-11-17 11:03:09,003 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [8, 方法论]  
 
 2020-11-17 11:03:09,004 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [9, 理论类]  
 
 2020-11-17 11:03:09,004 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [21, 错误日记]  
 
 2020-11-17 11:03:09,005 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [23, 开发日记]  
 
 2020-11-17 11:03:09,006 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [24, 实践论]  
 
 2020-11-17 11:03:09,007 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [25, 想法论]  
 
 2020-11-17 11:03:09,009 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} closed  
 
 2020-11-17 11:03:09,010 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:03:09,010 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:03:37,002 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:03:37,012 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:03:37,017 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [null, Java笔记, ##Java 语言是简单的：

Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。

##Java 语言是面向对象的：

Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。

, https://picsum.photos/seed/picsum/800/450, 是, 0, false, false, false, true, false]  
 
 2020-11-17 11:03:37,018 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-17 11:03:37,024 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 7.0143 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:03:37,025 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 11:03:37,025 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:03:37,026 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:03:37,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select id from t_blog where title=?  
 
 2020-11-17 11:03:37,029 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [Java笔记]  
 
 2020-11-17 11:03:37,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [VARCHAR]  
 
 2020-11-17 11:03:37,031 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.6842 millis. select id from t_blog where title=?  
 
 2020-11-17 11:03:37,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} open  
 
 2020-11-17 11:03:37,034 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} Header: [id]  
 
 2020-11-17 11:03:37,035 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} Result: [1]  
 
 2020-11-17 11:03:37,036 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} Result: [4]  
 
 2020-11-17 11:03:37,038 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} closed  
 
 2020-11-17 11:03:37,039 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 11:03:37,041 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:12:45,146 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-206} connected  
 
 2020-11-17 11:12:45,197 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-207} connected  
 
 2020-11-17 11:12:45,238 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-208} connected  
 
 2020-11-17 11:12:45,269 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-209} connected  
 
 2020-11-17 11:12:45,289 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-210} connected  
 
 2020-11-17 11:12:45,297 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:12:45,855 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-17 11:12:45,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-17 11:12:45,916 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-17 11:12:45,936 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 34.5392 millis. select * from t_user where username=?  
 
 2020-11-17 11:12:45,943 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 11:12:45,946 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 11:12:45,967 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 11:12:45,972 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 11:12:45,976 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:12:45,979 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:12:47,780 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:12:47,785 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 11:12:47,786 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:12:47,786 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:12:47,789 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.6318 millis. select * from t_tages  
 
 2020-11-17 11:12:47,791 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 11:12:47,792 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 11:12:47,793 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 11:12:47,795 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 11:12:47,795 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 11:12:47,796 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 11:12:47,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 11:12:47,798 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 11:12:47,800 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 11:12:47,801 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:12:47,802 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:12:47,803 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:12:47,805 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-17 11:12:47,806 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-17 11:12:47,806 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-17 11:12:47,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.794 millis. select * from t_types  
 
 2020-11-17 11:12:47,809 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 11:12:47,810 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-17 11:12:47,811 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-17 11:12:47,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-17 11:12:47,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-17 11:12:47,814 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-17 11:12:47,815 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-17 11:12:47,816 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-17 11:12:47,818 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 11:12:47,818 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 11:12:47,819 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:13:14,847 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:13:14,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:13:14,866 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [null, Java笔记, ##Java 语言是简单的：

Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。

##Java 语言是面向对象的：

Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。

, https://picsum.photos/seed/picsum/800/450, 是, 0, false, false, false, true, false]  
 
 2020-11-17 11:13:14,867 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-17 11:13:14,875 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 9.0347 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:13:14,877 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 11:13:14,877 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:13:14,878 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:13:14,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select id from t_blog where title=?  
 
 2020-11-17 11:13:14,880 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [Java笔记]  
 
 2020-11-17 11:13:14,881 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [VARCHAR]  
 
 2020-11-17 11:13:14,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.4682 millis. select id from t_blog where title=?  
 
 2020-11-17 11:13:14,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} open  
 
 2020-11-17 11:13:14,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} Header: [id]  
 
 2020-11-17 11:13:14,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} Result: [1]  
 
 2020-11-17 11:13:14,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} Result: [4]  
 
 2020-11-17 11:13:14,888 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} Result: [5]  
 
 2020-11-17 11:13:14,889 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} closed  
 
 2020-11-17 11:13:14,890 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 11:13:14,893 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:18:06,022 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-215} connected  
 
 2020-11-17 11:18:06,074 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-216} connected  
 
 2020-11-17 11:18:06,113 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-217} connected  
 
 2020-11-17 11:18:06,146 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-218} connected  
 
 2020-11-17 11:18:06,168 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-219} connected  
 
 2020-11-17 11:18:06,176 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:18:06,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 11:18:06,618 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 11:18:06,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 11:18:06,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 24.4221 millis. select * from t_types  
 
 2020-11-17 11:18:06,644 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 11:18:06,648 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 11:18:06,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 11:18:06,689 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 11:18:06,692 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 11:18:06,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 11:18:06,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 11:18:06,699 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 11:18:06,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 11:18:06,709 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:18:06,712 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:18:06,714 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:18:06,716 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 11:18:06,718 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:18:06,718 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:18:06,720 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.47 millis. select * from t_tages  
 
 2020-11-17 11:18:06,721 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 11:18:06,721 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 11:18:06,722 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 11:18:06,724 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 11:18:06,725 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 11:18:06,726 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 11:18:06,727 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 11:18:06,728 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 11:18:06,729 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 11:18:06,730 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:18:06,730 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:18:18,729 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:18:18,843 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 11:18:18,849 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 11:18:18,850 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 11:18:18,863 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 7.0966 millis. select * from t_user where username=?  
 
 2020-11-17 11:18:18,864 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 11:18:18,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 11:18:18,870 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 11:18:18,876 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 11:18:18,878 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 11:18:18,880 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:18:21,557 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:18:21,559 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:18:21,560 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:18:21,563 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 3.6364 millis. select * from t_tages  
 
 2020-11-17 11:18:21,564 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 11:18:21,565 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-17 11:18:21,566 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习日记]  
 
 2020-11-17 11:18:21,568 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-17 11:18:21,569 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-17 11:18:21,571 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-17 11:18:21,572 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-17 11:18:21,573 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-17 11:18:21,575 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 11:18:21,575 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:18:21,576 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:18:21,578 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:18:21,579 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 11:18:21,580 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 11:18:21,581 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 2.4739 millis. select * from t_types  
 
 2020-11-17 11:18:21,582 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} open  
 
 2020-11-17 11:18:21,583 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Header: [id, name]  
 
 2020-11-17 11:18:21,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [8, 方法论]  
 
 2020-11-17 11:18:21,585 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [9, 理论类]  
 
 2020-11-17 11:18:21,586 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [21, 错误日记]  
 
 2020-11-17 11:18:21,587 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [23, 开发日记]  
 
 2020-11-17 11:18:21,588 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [24, 实践论]  
 
 2020-11-17 11:18:21,589 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [25, 想法论]  
 
 2020-11-17 11:18:21,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} closed  
 
 2020-11-17 11:18:21,591 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:18:21,591 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:18:42,348 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:18:42,349 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:18:42,389 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:18:42,396 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 11:18:42,399 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 11:18:42,400 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 11:18:42,402 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.9365 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 11:18:42,403 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} open  
 
 2020-11-17 11:18:42,404 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Header: [count(0)]  
 
 2020-11-17 11:18:42,404 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Result: [1]  
 
 2020-11-17 11:18:42,406 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} closed  
 
 2020-11-17 11:18:42,407 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 11:18:42,414 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 11:18:42,417 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 11:18:42,417 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 11:18:42,419 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.7391 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 11:18:42,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} open  
 
 2020-11-17 11:18:42,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 11:18:42,423 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 11:18:42,426 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} closed  
 
 2020-11-17 11:18:42,426 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 11:18:42,427 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:20:20,101 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-220} connected  
 
 2020-11-17 11:20:20,114 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-221} connected  
 
 2020-11-17 11:20:20,125 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-222} connected  
 
 2020-11-17 11:20:20,134 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-223} connected  
 
 2020-11-17 11:20:20,143 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-224} connected  
 
 2020-11-17 11:20:20,147 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:20:20,373 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 11:20:20,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 11:20:20,426 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 11:20:20,449 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 34.4535 millis. select * from t_types  
 
 2020-11-17 11:20:20,460 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 11:20:20,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 11:20:20,492 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 11:20:20,498 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 11:20:20,500 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 11:20:20,503 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 11:20:20,506 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 11:20:20,507 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 11:20:20,510 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 11:20:20,517 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:20:20,521 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:20:20,524 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:20:20,527 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 11:20:20,529 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:20:20,530 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:20:20,534 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.7646 millis. select * from t_tages  
 
 2020-11-17 11:20:20,536 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 11:20:20,538 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 11:20:20,540 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 11:20:20,544 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 11:20:20,546 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 11:20:20,548 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 11:20:20,550 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 11:20:20,552 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 11:20:20,556 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 11:20:20,558 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:20:20,559 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:20:27,500 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:20:27,636 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 11:20:27,639 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 11:20:27,640 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 11:20:27,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 4.0133 millis. select * from t_user where username=?  
 
 2020-11-17 11:20:27,647 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 11:20:27,648 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 11:20:27,650 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 11:20:27,653 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 11:20:27,654 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 11:20:27,654 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:20:33,207 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:20:33,208 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:20:33,249 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:20:33,259 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 11:20:33,264 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 11:20:33,266 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 11:20:33,271 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 6.3399 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 11:20:33,272 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-17 11:20:33,273 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [count(0)]  
 
 2020-11-17 11:20:33,275 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [1]  
 
 2020-11-17 11:20:33,278 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-17 11:20:33,281 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 11:20:33,293 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 11:20:33,299 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 11:20:33,300 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 11:20:33,305 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 6.2552 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 11:20:33,307 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} open  
 
 2020-11-17 11:20:33,309 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 11:20:33,314 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 11:20:33,319 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} closed  
 
 2020-11-17 11:20:33,322 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 11:20:33,323 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:20:51,122 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:20:51,124 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 11:20:51,125 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 11:20:51,128 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.9404 millis. select * from t_tages  
 
 2020-11-17 11:20:51,128 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} open  
 
 2020-11-17 11:20:51,129 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Header: [id, tage]  
 
 2020-11-17 11:20:51,130 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [1, 学习日记]  
 
 2020-11-17 11:20:51,132 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [2, 错误笔记]  
 
 2020-11-17 11:20:51,132 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [3, 数据库笔记]  
 
 2020-11-17 11:20:51,134 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [4, 程序运行日记]  
 
 2020-11-17 11:20:51,134 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [5, 开发日记]  
 
 2020-11-17 11:20:51,136 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [8, 开发手册]  
 
 2020-11-17 11:20:51,136 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} closed  
 
 2020-11-17 11:20:51,136 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 11:20:51,137 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:20:51,138 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:20:51,138 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 11:20:51,139 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 11:20:51,140 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 1.6939 millis. select * from t_types  
 
 2020-11-17 11:20:51,140 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} open  
 
 2020-11-17 11:20:51,141 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Header: [id, name]  
 
 2020-11-17 11:20:51,142 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [8, 方法论]  
 
 2020-11-17 11:20:51,144 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [9, 理论类]  
 
 2020-11-17 11:20:51,145 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [21, 错误日记]  
 
 2020-11-17 11:20:51,146 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [23, 开发日记]  
 
 2020-11-17 11:20:51,147 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [24, 实践论]  
 
 2020-11-17 11:20:51,148 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} Result: [25, 想法论]  
 
 2020-11-17 11:20:51,150 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50006} closed  
 
 2020-11-17 11:20:51,151 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 11:20:51,152 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:21:22,406 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:21:22,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:21:22,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [null, Java简介, ##Java 语言是简单的：

Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。

##Java 语言是面向对象的：

Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。

, https://picsum.photos/seed/picsum/800/450, 是, 0, true, true, true, true, true]  
 
 2020-11-17 11:21:22,425 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-17 11:21:22,432 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 7.6516 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:21:22,433 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 11:21:22,434 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:21:22,435 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:21:22,437 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. select id from t_blog where title=?  
 
 2020-11-17 11:21:22,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [Java简介]  
 
 2020-11-17 11:21:22,440 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [VARCHAR]  
 
 2020-11-17 11:21:22,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 2.3988 millis. select id from t_blog where title=?  
 
 2020-11-17 11:21:22,442 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50007} open  
 
 2020-11-17 11:21:22,443 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50007} Header: [id]  
 
 2020-11-17 11:21:22,444 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50007} Result: [6]  
 
 2020-11-17 11:21:22,445 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50007} closed  
 
 2020-11-17 11:21:22,445 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 11:21:22,446 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:21:22,447 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:21:22,449 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} created. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:21:22,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Parameters : [null, 1, 6]  
 
 2020-11-17 11:21:22,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 11:21:22,457 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} executed. 6.2541 millis. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:21:22,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} clearParameters.   
 
 2020-11-17 11:21:22,459 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:21:22,460 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:21:22,463 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Parameters : [null, 8, 6]  
 
 2020-11-17 11:21:22,464 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 11:21:22,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} executed. 7.9283 millis. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:21:22,472 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} clearParameters.   
 
 2020-11-17 11:21:22,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:21:22,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:21:22,476 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} created. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:21:22,477 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} Parameters : [null, 1, 6]  
 
 2020-11-17 11:21:22,478 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 11:21:22,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} executed. 6.0307 millis. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 11:21:22,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} clearParameters.   
 
 2020-11-17 11:21:22,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 11:21:22,512 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 11:21:22,514 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 11:21:22,515 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 11:21:22,517 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.8058 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 11:21:22,518 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50008} open  
 
 2020-11-17 11:21:22,519 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50008} Header: [count(0)]  
 
 2020-11-17 11:21:22,520 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50008} Result: [2]  
 
 2020-11-17 11:21:22,521 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50008} closed  
 
 2020-11-17 11:21:22,522 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 11:21:22,524 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 11:21:22,525 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 11:21:22,527 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.736 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 11:21:22,528 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50009} open  
 
 2020-11-17 11:21:22,528 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50009} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 11:21:22,529 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50009} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 11:21:22,530 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50009} Result: [zhangsan, 6, Java简介, 2020-11-17 19:21:22.0, 1, true, true]  
 
 2020-11-17 11:21:22,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50009} closed  
 
 2020-11-17 11:21:22,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 11:21:22,533 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:01:46,231 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-232} connected  
 
 2020-11-17 19:01:46,245 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-233} connected  
 
 2020-11-17 19:01:46,261 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-234} connected  
 
 2020-11-17 19:01:46,279 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-235} connected  
 
 2020-11-17 19:01:46,298 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-236} connected  
 
 2020-11-17 19:01:46,304 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:01:46,570 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 19:01:46,584 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 19:01:46,585 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 19:01:46,596 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 14.4814 millis. select * from t_types  
 
 2020-11-17 19:01:46,599 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 19:01:46,601 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 19:01:46,611 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 19:01:46,613 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 19:01:46,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 19:01:46,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 19:01:46,615 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 19:01:46,616 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 19:01:46,616 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 19:01:46,618 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 19:01:46,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:01:46,620 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:01:46,621 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 19:01:46,621 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:01:46,621 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:01:46,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.7367 millis. select * from t_tages  
 
 2020-11-17 19:01:46,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 19:01:46,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 19:01:46,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 19:01:46,625 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 19:01:46,626 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 19:01:46,626 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 19:01:46,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 19:01:46,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 19:01:46,628 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 19:01:46,629 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:01:46,629 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:01:47,423 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:01:47,427 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 19:01:47,429 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 19:01:47,436 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 9.2045 millis. select * from t_types  
 
 2020-11-17 19:01:47,441 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} open  
 
 2020-11-17 19:01:47,443 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Header: [id, name]  
 
 2020-11-17 19:01:47,445 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [8, 方法论]  
 
 2020-11-17 19:01:47,451 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [9, 理论类]  
 
 2020-11-17 19:01:47,455 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [21, 错误日记]  
 
 2020-11-17 19:01:47,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [23, 开发日记]  
 
 2020-11-17 19:01:47,464 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [24, 实践论]  
 
 2020-11-17 19:01:47,466 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} Result: [25, 想法论]  
 
 2020-11-17 19:01:47,471 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50002} closed  
 
 2020-11-17 19:01:47,473 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 19:01:47,475 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:01:47,478 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:01:47,481 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:01:47,482 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:01:47,487 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 5.3888 millis. select * from t_tages  
 
 2020-11-17 19:01:47,488 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 19:01:47,489 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-17 19:01:47,491 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习日记]  
 
 2020-11-17 19:01:47,493 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-17 19:01:47,495 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-17 19:01:47,497 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-17 19:01:47,499 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-17 19:01:47,500 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-17 19:01:47,503 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 19:01:47,505 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:01:47,507 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:01:56,590 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:01:56,788 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 19:01:56,794 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 19:01:56,795 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 19:01:56,801 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 7.163 millis. select * from t_user where username=?  
 
 2020-11-17 19:01:56,803 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-17 19:01:56,804 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 19:01:56,811 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 19:01:56,817 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-17 19:01:56,819 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 19:01:56,821 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:02:00,563 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:02:00,564 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:02:00,602 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:02:00,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:02:00,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 19:02:00,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 19:02:00,615 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 3.0008 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:02:00,615 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} open  
 
 2020-11-17 19:02:00,616 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Header: [count(0)]  
 
 2020-11-17 19:02:00,617 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Result: [2]  
 
 2020-11-17 19:02:00,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} closed  
 
 2020-11-17 19:02:00,620 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 19:02:00,627 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:02:00,630 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 19:02:00,631 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 19:02:00,634 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.5792 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:02:00,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} open  
 
 2020-11-17 19:02:00,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 19:02:00,637 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 19:02:00,639 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 6, Java简介, 2020-11-17 19:21:22.0, 1, true, true]  
 
 2020-11-17 19:02:00,641 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} closed  
 
 2020-11-17 19:02:00,642 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 19:02:00,643 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:02:03,917 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:02:03,922 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. delete from t_user_blog where bid=?  
 
 2020-11-17 19:02:03,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [6]  
 
 2020-11-17 19:02:03,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-17 19:02:03,937 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 12.5852 millis. delete from t_user_blog where bid=?  
 
 2020-11-17 19:02:03,938 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 19:02:03,938 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:02:03,954 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:02:03,955 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. delete from t_blog where id=?  
 
 2020-11-17 19:02:03,956 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [6]  
 
 2020-11-17 19:02:03,957 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER]  
 
 2020-11-17 19:02:03,985 ERROR [com.alibaba.druid.filter.logging.Log4jFilter.statementLogError(Log4jFilter.java:152)] {conn-10005, pstmt-20006} execute error. delete from t_blog where id=?  
 java.sql.SQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails (`blog`.`t_blog_tages`, CONSTRAINT `bid` FOREIGN KEY (`bid`) REFERENCES `t_blog` (`id`) ON DELETE RESTRICT ON UPDATE RESTRICT)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:117)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:955)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:372)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3461)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:654)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3459)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:497)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy112.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy110.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.delete(DefaultSqlSession.java:213)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy73.delete(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.delete(SqlSessionTemplate.java:310)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy74.delete(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy75.delete(Unknown Source)
	at com.example.blog.service.BaseServiceImpl.delete(BaseServiceImpl.java:97)
	at com.example.blog.service.BolgServiceImpl.deleteByid(BolgServiceImpl.java:67)
	at com.example.blog.controller.BlogController.deleteBlog(BlogController.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:118)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:158)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:92)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

 2020-11-17 19:02:03,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 19:02:03,995 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} closed  
 
 2020-11-17 19:02:03,996 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:02:04,065 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:02:04,066 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:02:06,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:02:06,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 19:02:06,685 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 19:02:06,687 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.9817 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:02:06,688 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50007} open  
 
 2020-11-17 19:02:06,689 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50007} Header: [count(0)]  
 
 2020-11-17 19:02:06,690 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50007} Result: [1]  
 
 2020-11-17 19:02:06,691 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50007} closed  
 
 2020-11-17 19:02:06,692 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 19:02:06,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 19:02:06,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 19:02:06,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.9544 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:02:06,699 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50008} open  
 
 2020-11-17 19:02:06,699 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50008} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 19:02:06,700 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50008} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 19:02:06,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50008} closed  
 
 2020-11-17 19:02:06,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 19:02:06,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:02:10,808 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:02:10,810 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:02:10,810 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:02:10,812 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.7199 millis. select * from t_tages  
 
 2020-11-17 19:02:10,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} open  
 
 2020-11-17 19:02:10,814 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Header: [id, tage]  
 
 2020-11-17 19:02:10,815 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [1, 学习日记]  
 
 2020-11-17 19:02:10,816 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [2, 错误笔记]  
 
 2020-11-17 19:02:10,817 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [3, 数据库笔记]  
 
 2020-11-17 19:02:10,818 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [4, 程序运行日记]  
 
 2020-11-17 19:02:10,820 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [5, 开发日记]  
 
 2020-11-17 19:02:10,821 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} Result: [8, 开发手册]  
 
 2020-11-17 19:02:10,823 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50009} closed  
 
 2020-11-17 19:02:10,824 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:02:10,825 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:02:10,826 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:02:10,827 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 19:02:10,829 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 19:02:10,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 2.5014 millis. select * from t_types  
 
 2020-11-17 19:02:10,831 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} open  
 
 2020-11-17 19:02:10,831 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} Header: [id, name]  
 
 2020-11-17 19:02:10,832 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} Result: [8, 方法论]  
 
 2020-11-17 19:02:10,833 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} Result: [9, 理论类]  
 
 2020-11-17 19:02:10,834 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} Result: [21, 错误日记]  
 
 2020-11-17 19:02:10,834 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} Result: [23, 开发日记]  
 
 2020-11-17 19:02:10,837 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} Result: [24, 实践论]  
 
 2020-11-17 19:02:10,838 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} Result: [25, 想法论]  
 
 2020-11-17 19:02:10,839 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50010} closed  
 
 2020-11-17 19:02:10,840 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 19:02:10,840 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:04:29,488 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-237} connected  
 
 2020-11-17 19:04:29,539 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-238} connected  
 
 2020-11-17 19:04:29,580 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-239} connected  
 
 2020-11-17 19:04:29,617 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-240} connected  
 
 2020-11-17 19:04:29,653 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-241} connected  
 
 2020-11-17 19:04:29,666 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:04:30,309 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_user where username=?  
 
 2020-11-17 19:04:30,368 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : [zhangsan]  
 
 2020-11-17 19:04:30,370 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : [VARCHAR]  
 
 2020-11-17 19:04:30,401 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 43.9628 millis. select * from t_user where username=?  
 
 2020-11-17 19:04:30,413 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 19:04:30,420 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 19:04:30,458 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 19:04:30,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 19:04:30,474 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 19:04:30,478 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:04:33,122 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:04:33,127 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 19:04:33,128 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:04:33,129 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:04:33,137 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 4.2175 millis. select * from t_tages  
 
 2020-11-17 19:04:33,138 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 19:04:33,139 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 19:04:33,140 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 19:04:33,142 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 19:04:33,144 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 19:04:33,145 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 19:04:33,147 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 19:04:33,149 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 19:04:33,150 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 19:04:33,151 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:04:33,152 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:04:33,154 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:04:33,155 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_types  
 
 2020-11-17 19:04:33,156 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-17 19:04:33,157 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-17 19:04:33,159 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.9145 millis. select * from t_types  
 
 2020-11-17 19:04:33,160 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 19:04:33,161 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, name]  
 
 2020-11-17 19:04:33,162 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [8, 方法论]  
 
 2020-11-17 19:04:33,164 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [9, 理论类]  
 
 2020-11-17 19:04:33,165 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [21, 错误日记]  
 
 2020-11-17 19:04:33,166 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [23, 开发日记]  
 
 2020-11-17 19:04:33,167 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [24, 实践论]  
 
 2020-11-17 19:04:33,168 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [25, 想法论]  
 
 2020-11-17 19:04:33,170 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 19:04:33,170 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 19:04:33,171 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:04:54,272 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:04:54,288 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:04:54,294 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [null, Java简介, ##Java 语言是简单的：

Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。

##Java 语言是面向对象的：

Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。, https://picsum.photos/seed/picsum/800/450, 是, 0, true, true, true, true, true]  
 
 2020-11-17 19:04:54,294 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-17 19:04:54,303 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 8.9214 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:04:54,304 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 19:04:54,304 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:04:54,305 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:04:54,307 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select id from t_blog where title=?  
 
 2020-11-17 19:04:54,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [Java简介]  
 
 2020-11-17 19:04:54,309 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [VARCHAR]  
 
 2020-11-17 19:04:54,311 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.6904 millis. select id from t_blog where title=?  
 
 2020-11-17 19:04:54,312 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} open  
 
 2020-11-17 19:04:54,313 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} Header: [id]  
 
 2020-11-17 19:04:54,314 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} Result: [6]  
 
 2020-11-17 19:04:54,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} Result: [7]  
 
 2020-11-17 19:04:54,318 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50003} closed  
 
 2020-11-17 19:04:54,319 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 19:04:54,321 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:05:23,286 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:05:23,288 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : []  
 
 2020-11-17 19:05:23,289 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : []  
 
 2020-11-17 19:05:23,291 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 2.677 millis. select * from t_types  
 
 2020-11-17 19:05:23,291 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} open  
 
 2020-11-17 19:05:23,292 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Header: [id, name]  
 
 2020-11-17 19:05:23,293 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [8, 方法论]  
 
 2020-11-17 19:05:23,293 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [9, 理论类]  
 
 2020-11-17 19:05:23,295 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [21, 错误日记]  
 
 2020-11-17 19:05:23,295 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [23, 开发日记]  
 
 2020-11-17 19:05:23,296 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [24, 实践论]  
 
 2020-11-17 19:05:23,297 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} Result: [25, 想法论]  
 
 2020-11-17 19:05:23,297 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50004} closed  
 
 2020-11-17 19:05:23,298 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 19:05:23,299 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:05:23,300 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:05:23,302 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:05:23,302 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:05:23,304 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.8398 millis. select * from t_tages  
 
 2020-11-17 19:05:23,305 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} open  
 
 2020-11-17 19:05:23,307 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Header: [id, tage]  
 
 2020-11-17 19:05:23,307 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [1, 学习日记]  
 
 2020-11-17 19:05:23,308 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [2, 错误笔记]  
 
 2020-11-17 19:05:23,310 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [3, 数据库笔记]  
 
 2020-11-17 19:05:23,310 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [4, 程序运行日记]  
 
 2020-11-17 19:05:23,312 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [5, 开发日记]  
 
 2020-11-17 19:05:23,312 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} Result: [8, 开发手册]  
 
 2020-11-17 19:05:23,314 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50005} closed  
 
 2020-11-17 19:05:23,315 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:05:23,316 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:05:27,024 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:05:27,025 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:05:27,065 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:05:27,075 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:05:27,076 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [1]  
 
 2020-11-17 19:05:27,077 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-17 19:05:27,079 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 3.0371 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:05:27,081 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50006} open  
 
 2020-11-17 19:05:27,084 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50006} Header: [count(0)]  
 
 2020-11-17 19:05:27,086 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50006} Result: [1]  
 
 2020-11-17 19:05:27,090 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50006} closed  
 
 2020-11-17 19:05:27,092 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 19:05:27,106 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:05:27,111 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [1, 5]  
 
 2020-11-17 19:05:27,113 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]  
 
 2020-11-17 19:05:27,118 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 6.4769 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:05:27,119 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50007} open  
 
 2020-11-17 19:05:27,121 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50007} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 19:05:27,126 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50007} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 19:05:27,130 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50007} closed  
 
 2020-11-17 19:05:27,133 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 19:05:27,135 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:05:28,902 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:05:28,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [1]  
 
 2020-11-17 19:05:28,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-17 19:05:28,905 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 1.7676 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:05:28,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50008} open  
 
 2020-11-17 19:05:28,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50008} Header: [count(0)]  
 
 2020-11-17 19:05:28,907 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50008} Result: [1]  
 
 2020-11-17 19:05:28,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20005, rs-50008} closed  
 
 2020-11-17 19:05:28,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 19:05:28,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [1, 5]  
 
 2020-11-17 19:05:28,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER, INTEGER]  
 
 2020-11-17 19:05:28,912 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 2.5218 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:05:28,913 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50009} open  
 
 2020-11-17 19:05:28,913 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50009} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 19:05:28,914 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50009} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 19:05:28,917 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20006, rs-50009} closed  
 
 2020-11-17 19:05:28,917 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 19:05:28,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:06:39,649 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-247} connected  
 
 2020-11-17 19:06:39,664 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-248} connected  
 
 2020-11-17 19:06:39,674 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-249} connected  
 
 2020-11-17 19:06:39,684 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-250} connected  
 
 2020-11-17 19:06:39,694 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-251} connected  
 
 2020-11-17 19:06:39,698 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:06:39,832 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 19:06:39,845 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 19:06:39,846 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 19:06:39,853 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 10.5042 millis. select * from t_types  
 
 2020-11-17 19:06:39,857 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 19:06:39,860 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 19:06:39,869 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 19:06:39,871 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 19:06:39,872 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 19:06:39,872 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 19:06:39,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 19:06:39,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 19:06:39,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 19:06:39,876 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 19:06:39,878 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:06:39,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:06:39,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 19:06:39,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:06:39,880 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:06:39,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.3764 millis. select * from t_tages  
 
 2020-11-17 19:06:39,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 19:06:39,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 19:06:39,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 19:06:39,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 19:06:39,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 19:06:39,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 19:06:39,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 19:06:39,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 19:06:39,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 19:06:39,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:06:39,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:06:48,290 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:06:48,505 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 19:06:48,512 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 19:06:48,513 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 19:06:48,529 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 7.4819 millis. select * from t_user where username=?  
 
 2020-11-17 19:06:48,531 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 19:06:48,533 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 19:06:48,540 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 19:06:48,546 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 19:06:48,547 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 19:06:48,548 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:06:56,720 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:06:56,722 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:06:56,722 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:06:56,724 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.991 millis. select * from t_tages  
 
 2020-11-17 19:06:56,724 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} open  
 
 2020-11-17 19:06:56,725 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Header: [id, tage]  
 
 2020-11-17 19:06:56,725 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [1, 学习日记]  
 
 2020-11-17 19:06:56,726 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [2, 错误笔记]  
 
 2020-11-17 19:06:56,727 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [3, 数据库笔记]  
 
 2020-11-17 19:06:56,728 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [4, 程序运行日记]  
 
 2020-11-17 19:06:56,729 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [5, 开发日记]  
 
 2020-11-17 19:06:56,729 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} Result: [8, 开发手册]  
 
 2020-11-17 19:06:56,730 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50003} closed  
 
 2020-11-17 19:06:56,730 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:06:56,731 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:06:56,732 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:06:56,733 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 19:06:56,733 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 19:06:56,735 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 1.9261 millis. select * from t_types  
 
 2020-11-17 19:06:56,735 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} open  
 
 2020-11-17 19:06:56,736 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Header: [id, name]  
 
 2020-11-17 19:06:56,736 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [8, 方法论]  
 
 2020-11-17 19:06:56,737 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [9, 理论类]  
 
 2020-11-17 19:06:56,737 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [21, 错误日记]  
 
 2020-11-17 19:06:56,738 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [23, 开发日记]  
 
 2020-11-17 19:06:56,738 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [24, 实践论]  
 
 2020-11-17 19:06:56,739 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} Result: [25, 想法论]  
 
 2020-11-17 19:06:56,740 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50004} closed  
 
 2020-11-17 19:06:56,740 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 19:06:56,740 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:07:23,815 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:07:23,830 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,835 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [null, Java简介, ##Java 语言是简单的：

Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。

##Java 语言是面向对象的：

Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。, https://picsum.photos/seed/picsum/800/450, 是, 0, true, true, true, true, true]  
 
 2020-11-17 19:07:23,836 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-17 19:07:23,843 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 8.1632 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,845 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 19:07:23,845 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:07:23,846 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:07:23,849 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select id from t_blog where title=?  
 
 2020-11-17 19:07:23,851 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [Java简介]  
 
 2020-11-17 19:07:23,852 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [VARCHAR]  
 
 2020-11-17 19:07:23,853 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.8233 millis. select id from t_blog where title=?  
 
 2020-11-17 19:07:23,854 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} open  
 
 2020-11-17 19:07:23,855 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} Header: [id]  
 
 2020-11-17 19:07:23,856 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} Result: [8]  
 
 2020-11-17 19:07:23,857 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50005} closed  
 
 2020-11-17 19:07:23,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 19:07:23,860 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:07:23,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:07:23,864 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,866 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [null, 1, 8]  
 
 2020-11-17 19:07:23,867 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 19:07:23,872 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 6.4103 millis. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 19:07:23,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:07:23,875 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:07:23,876 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [null, 8, 8]  
 
 2020-11-17 19:07:23,876 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 19:07:23,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 5.7671 millis. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 19:07:23,883 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:07:23,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:07:23,886 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. insert into t_blog_type
         (  
            id
         , 
            bid
         , 
            tyid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,888 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [null, 8, 8]  
 
 2020-11-17 19:07:23,888 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 19:07:23,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 6.4547 millis. insert into t_blog_type
         (  
            id
         , 
            bid
         , 
            tyid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,895 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 19:07:23,896 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:07:23,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:07:23,900 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} created. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,902 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Parameters : [null, 1, 8]  
 
 2020-11-17 19:07:23,903 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 19:07:23,909 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} executed. 7.2286 millis. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:07:23,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} clearParameters.   
 
 2020-11-17 19:07:23,911 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:07:23,942 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:07:23,943 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:07:23,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:07:24,005 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:07:24,007 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} Parameters : [1]  
 
 2020-11-17 19:07:24,008 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} Types : [INTEGER]  
 
 2020-11-17 19:07:24,009 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} executed. 1.8715 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:07:24,009 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20008, rs-50006} open  
 
 2020-11-17 19:07:24,010 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20008, rs-50006} Header: [count(0)]  
 
 2020-11-17 19:07:24,011 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20008, rs-50006} Result: [2]  
 
 2020-11-17 19:07:24,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20008, rs-50006} closed  
 
 2020-11-17 19:07:24,013 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} clearParameters.   
 
 2020-11-17 19:07:24,018 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:07:24,019 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} Parameters : [1, 5]  
 
 2020-11-17 19:07:24,020 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} Types : [INTEGER, INTEGER]  
 
 2020-11-17 19:07:24,021 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} executed. 2.0085 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:07:24,022 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20009, rs-50007} open  
 
 2020-11-17 19:07:24,022 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20009, rs-50007} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 19:07:24,025 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20009, rs-50007} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 19:07:24,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20009, rs-50007} Result: [zhangsan, 8, Java简介, 2020-11-18 03:07:23.0, 1, true, true]  
 
 2020-11-17 19:07:24,029 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20009, rs-50007} closed  
 
 2020-11-17 19:07:24,030 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} clearParameters.   
 
 2020-11-17 19:07:24,031 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:12,610 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10001,procId-260} connected  
 
 2020-11-17 19:12:12,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10002,procId-261} connected  
 
 2020-11-17 19:12:12,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10003,procId-262} connected  
 
 2020-11-17 19:12:12,645 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10004,procId-263} connected  
 
 2020-11-17 19:12:12,656 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005,procId-264} connected  
 
 2020-11-17 19:12:12,659 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:12,797 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} created. select * from t_types  
 
 2020-11-17 19:12:12,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 19:12:12,813 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 19:12:12,826 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 16.5268 millis. select * from t_types  
 
 2020-11-17 19:12:12,832 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} open  
 
 2020-11-17 19:12:12,835 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Header: [id, name]  
 
 2020-11-17 19:12:12,848 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [8, 方法论]  
 
 2020-11-17 19:12:12,850 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [9, 理论类]  
 
 2020-11-17 19:12:12,851 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [21, 错误日记]  
 
 2020-11-17 19:12:12,852 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [23, 开发日记]  
 
 2020-11-17 19:12:12,853 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [24, 实践论]  
 
 2020-11-17 19:12:12,854 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} Result: [25, 想法论]  
 
 2020-11-17 19:12:12,856 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50000} closed  
 
 2020-11-17 19:12:12,859 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 19:12:12,861 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:12,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:12,863 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} created. select * from t_tages  
 
 2020-11-17 19:12:12,863 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:12:12,864 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:12:12,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 1.6743 millis. select * from t_tages  
 
 2020-11-17 19:12:12,865 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} open  
 
 2020-11-17 19:12:12,866 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Header: [id, tage]  
 
 2020-11-17 19:12:12,867 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [1, 学习日记]  
 
 2020-11-17 19:12:12,868 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [2, 错误笔记]  
 
 2020-11-17 19:12:12,869 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [3, 数据库笔记]  
 
 2020-11-17 19:12:12,869 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [4, 程序运行日记]  
 
 2020-11-17 19:12:12,870 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [5, 开发日记]  
 
 2020-11-17 19:12:12,870 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} Result: [8, 开发手册]  
 
 2020-11-17 19:12:12,872 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50001} closed  
 
 2020-11-17 19:12:12,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:12:12,874 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:17,894 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:18,027 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} created. select * from t_user where username=?  
 
 2020-11-17 19:12:18,032 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Parameters : [zhangsan]  
 
 2020-11-17 19:12:18,033 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} Types : [VARCHAR]  
 
 2020-11-17 19:12:18,047 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} executed. 7.9673 millis. select * from t_user where username=?  
 
 2020-11-17 19:12:18,048 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} open  
 
 2020-11-17 19:12:18,049 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Header: [id, username, password, email, type, avator, time, updatetime]  
 
 2020-11-17 19:12:18,055 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} Result: [1, zhangsan, $2a$10$MqW9MEpSHtHfWFLp6egUmura2I/R1i40h9xN6vTy45FepVlEe6Mxy, 1799749389@qq.com, 1, https://picsum.photos/seed/picsum/200/300, 2020-11-12 04:35:11.0, 2020-11-12 04:35:11.0]  
 
 2020-11-17 19:12:18,062 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20002, rs-50002} closed  
 
 2020-11-17 19:12:18,063 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20002} clearParameters.   
 
 2020-11-17 19:12:18,064 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:20,423 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:20,424 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:20,468 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:20,478 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} created. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:12:20,480 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 19:12:20,482 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 19:12:20,483 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 3.3787 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:12:20,485 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} open  
 
 2020-11-17 19:12:20,486 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Header: [count(0)]  
 
 2020-11-17 19:12:20,486 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} Result: [2]  
 
 2020-11-17 19:12:20,488 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50003} closed  
 
 2020-11-17 19:12:20,489 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 19:12:20,496 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} created. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:12:20,498 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 19:12:20,499 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 19:12:20,502 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.3345 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:12:20,503 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} open  
 
 2020-11-17 19:12:20,503 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 19:12:20,505 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 19:12:20,508 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} Result: [zhangsan, 8, Java简介, 2020-11-18 03:07:23.0, 1, true, true]  
 
 2020-11-17 19:12:20,509 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50004} closed  
 
 2020-11-17 19:12:20,510 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 19:12:20,511 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:23,604 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:23,612 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} created. delete from t_blog_type where bid=?  
 
 2020-11-17 19:12:23,613 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Parameters : [8]  
 
 2020-11-17 19:12:23,614 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} Types : [INTEGER]  
 
 2020-11-17 19:12:23,619 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} executed. 6.1068 millis. delete from t_blog_type where bid=?  
 
 2020-11-17 19:12:23,620 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20005} clearParameters.   
 
 2020-11-17 19:12:23,621 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:23,622 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:23,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} created. delete from t_blog_tages where bid=?  
 
 2020-11-17 19:12:23,623 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Parameters : [8]  
 
 2020-11-17 19:12:23,624 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} Types : [INTEGER]  
 
 2020-11-17 19:12:23,631 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} executed. 7.828 millis. delete from t_blog_tages where bid=?  
 
 2020-11-17 19:12:23,632 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20006} clearParameters.   
 
 2020-11-17 19:12:23,633 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:23,634 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:23,635 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} created. delete from t_user_blog where bid=?  
 
 2020-11-17 19:12:23,637 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Parameters : [8]  
 
 2020-11-17 19:12:23,638 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} Types : [INTEGER]  
 
 2020-11-17 19:12:23,644 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} executed. 7.1082 millis. delete from t_user_blog where bid=?  
 
 2020-11-17 19:12:23,645 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20007} clearParameters.   
 
 2020-11-17 19:12:23,646 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:23,672 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:23,674 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} created. delete from t_blog where id=?  
 
 2020-11-17 19:12:23,675 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} Parameters : [8]  
 
 2020-11-17 19:12:23,676 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} Types : [INTEGER]  
 
 2020-11-17 19:12:23,681 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} executed. 5.6606 millis. delete from t_blog where id=?  
 
 2020-11-17 19:12:23,682 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20008} clearParameters.   
 
 2020-11-17 19:12:23,683 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:23,695 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:23,697 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 19:12:23,697 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 19:12:23,700 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 3.302 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:12:23,701 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} open  
 
 2020-11-17 19:12:23,702 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Header: [count(0)]  
 
 2020-11-17 19:12:23,703 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} Result: [1]  
 
 2020-11-17 19:12:23,705 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50005} closed  
 
 2020-11-17 19:12:23,706 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 19:12:23,709 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 19:12:23,710 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 19:12:23,712 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 3.3649 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:12:23,713 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} open  
 
 2020-11-17 19:12:23,714 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 19:12:23,715 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 19:12:23,717 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50006} closed  
 
 2020-11-17 19:12:23,718 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 19:12:23,719 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:41,514 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:41,515 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Parameters : []  
 
 2020-11-17 19:12:41,516 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} Types : []  
 
 2020-11-17 19:12:41,518 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} executed. 2.9568 millis. select * from t_tages  
 
 2020-11-17 19:12:41,519 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} open  
 
 2020-11-17 19:12:41,519 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Header: [id, tage]  
 
 2020-11-17 19:12:41,520 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [1, 学习日记]  
 
 2020-11-17 19:12:41,522 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [2, 错误笔记]  
 
 2020-11-17 19:12:41,523 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [3, 数据库笔记]  
 
 2020-11-17 19:12:41,523 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [4, 程序运行日记]  
 
 2020-11-17 19:12:41,524 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [5, 开发日记]  
 
 2020-11-17 19:12:41,524 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} Result: [8, 开发手册]  
 
 2020-11-17 19:12:41,525 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20001, rs-50007} closed  
 
 2020-11-17 19:12:41,525 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20001} clearParameters.   
 
 2020-11-17 19:12:41,525 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:12:41,526 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:12:41,527 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Parameters : []  
 
 2020-11-17 19:12:41,527 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} Types : []  
 
 2020-11-17 19:12:41,528 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} executed. 1.2112 millis. select * from t_types  
 
 2020-11-17 19:12:41,528 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} open  
 
 2020-11-17 19:12:41,528 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Header: [id, name]  
 
 2020-11-17 19:12:41,529 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [8, 方法论]  
 
 2020-11-17 19:12:41,529 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [9, 理论类]  
 
 2020-11-17 19:12:41,530 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [21, 错误日记]  
 
 2020-11-17 19:12:41,530 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [23, 开发日记]  
 
 2020-11-17 19:12:41,530 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [24, 实践论]  
 
 2020-11-17 19:12:41,531 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} Result: [25, 想法论]  
 
 2020-11-17 19:12:41,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20000, rs-50008} closed  
 
 2020-11-17 19:12:41,532 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20000} clearParameters.   
 
 2020-11-17 19:12:41,533 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:13:12,841 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:13:12,857 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} created. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,861 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} Parameters : [null, Java简介, ##Java 语言是简单的：

Java 语言的语法与 C 语言和 C++ 语言很接近，使得大多数程序员很容易学习和使用。另一方面，Java 丢弃了 C++ 中很少使用的、很难理解的、令人迷惑的那些特性，如操作符重载、多继承、自动的强制类型转换。特别地，Java 语言不使用指针，而是引用。并提供了自动分配和回收内存空间，使得程序员不必为内存管理而担忧。

##Java 语言是面向对象的：

Java 语言提供类、接口和继承等面向对象的特性，为了简单起见，只支持类之间的单继承，但支持接口之间的多继承，并支持类与接口之间的实现机制（关键字为 implements）。Java 语言全面支持动态绑定，而 C++语言只对虚函数使用动态绑定。总之，Java语言是一个纯的面向对象程序设计语言。, https://picsum.photos/seed/picsum/800/450, 是, 0, true, true, true, true, true]  
 
 2020-11-17 19:13:12,862 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} Types : [OTHER, VARCHAR, VARCHAR, VARCHAR, VARCHAR, INTEGER, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN, BOOLEAN]  
 
 2020-11-17 19:13:12,868 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} executed. 7.3912 millis. insert into t_blog
         (  
            id
         , 
            title
         , 
            content
         , 
            firstpicture
         , 
            flag
         , 
            views
         , 
            appreciation
         , 
            Opencomment
         , 
            sharestatment
         , 
            publish
         , 
            recommend
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,868 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20009} clearParameters.   
 
 2020-11-17 19:13:12,870 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:13:12,871 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:13:12,873 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20010} created. select id from t_blog where title=?  
 
 2020-11-17 19:13:12,875 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20010} Parameters : [Java简介]  
 
 2020-11-17 19:13:12,876 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20010} Types : [VARCHAR]  
 
 2020-11-17 19:13:12,878 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20010} executed. 2.8299 millis. select id from t_blog where title=?  
 
 2020-11-17 19:13:12,879 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20010, rs-50009} open  
 
 2020-11-17 19:13:12,880 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20010, rs-50009} Header: [id]  
 
 2020-11-17 19:13:12,882 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20010, rs-50009} Result: [9]  
 
 2020-11-17 19:13:12,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20010, rs-50009} closed  
 
 2020-11-17 19:13:12,884 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20010} clearParameters.   
 
 2020-11-17 19:13:12,885 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:13:12,887 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:13:12,889 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} created. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,890 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} Parameters : [null, 1, 9]  
 
 2020-11-17 19:13:12,891 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 19:13:12,895 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} executed. 4.693 millis. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,897 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} clearParameters.   
 
 2020-11-17 19:13:12,897 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:13:12,898 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:13:12,900 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} Parameters : [null, 8, 9]  
 
 2020-11-17 19:13:12,900 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 19:13:12,904 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} executed. 4.5876 millis. insert into t_blog_tages
         (  
            id
         , 
            tid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,905 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20011} clearParameters.   
 
 2020-11-17 19:13:12,905 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:13:12,906 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:13:12,908 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20012} created. insert into t_blog_type
         (  
            id
         , 
            bid
         , 
            tyid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20012} Parameters : [null, 9, 8]  
 
 2020-11-17 19:13:12,910 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20012} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 19:13:12,914 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20012} executed. 4.5872 millis. insert into t_blog_type
         (  
            id
         , 
            bid
         , 
            tyid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20012} clearParameters.   
 
 2020-11-17 19:13:12,915 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:13:12,916 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:13:12,918 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20013} created. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20013} Parameters : [null, 1, 9]  
 
 2020-11-17 19:13:12,919 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20013} Types : [OTHER, INTEGER, INTEGER]  
 
 2020-11-17 19:13:12,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20013} executed. 5.0256 millis. insert into t_user_blog
         (  
            id
         , 
            uid
         , 
            bid
         ) 
        values
         (  
            ?
         , 
            ?
         , 
            ?
         )  
 
 2020-11-17 19:13:12,924 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20013} clearParameters.   
 
 2020-11-17 19:13:12,925 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 
 2020-11-17 19:13:12,981 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-connect  
 
 2020-11-17 19:13:12,983 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Parameters : [1]  
 
 2020-11-17 19:13:12,984 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} Types : [INTEGER]  
 
 2020-11-17 19:13:12,987 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} executed. 2.9622 millis. SELECT count(0) FROM t_blog tb, t_user_blog tub, t_user us WHERE tb.id = tub.bid AND tub.uid = us.id AND us.id = ?  
 
 2020-11-17 19:13:12,987 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50010} open  
 
 2020-11-17 19:13:12,988 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50010} Header: [count(0)]  
 
 2020-11-17 19:13:12,989 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50010} Result: [2]  
 
 2020-11-17 19:13:12,990 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20003, rs-50010} closed  
 
 2020-11-17 19:13:12,991 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20003} clearParameters.   
 
 2020-11-17 19:13:12,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Parameters : [1, 5]  
 
 2020-11-17 19:13:12,993 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} Types : [INTEGER, INTEGER]  
 
 2020-11-17 19:13:12,995 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} executed. 2.8004 millis. select us.username uname,tb.id,tb.title ,tb.createtime ,us.id uid,tb.publish,tb.recommend
          from
        t_blog tb,t_user_blog tub,t_user us
         where
        tb.id=tub.bid and tub.uid=us.id
         and 
        us.id=? LIMIT ?   
 
 2020-11-17 19:13:12,996 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} open  
 
 2020-11-17 19:13:12,997 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} Header: [username, id, title, createtime, id, publish, recommend]  
 
 2020-11-17 19:13:12,998 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} Result: [zhangsan, 1, Java笔记, 2020-11-16 21:52:49.0, 1, true, true]  
 
 2020-11-17 19:13:12,999 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} Result: [zhangsan, 9, Java简介, 2020-11-18 03:13:12.0, 1, true, true]  
 
 2020-11-17 19:13:13,000 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.resultSetLog(Log4jFilter.java:142)] {conn-10005, pstmt-20004, rs-50011} closed  
 
 2020-11-17 19:13:13,001 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.statementLog(Log4jFilter.java:137)] {conn-10005, pstmt-20004} clearParameters.   
 
 2020-11-17 19:13:13,002 DEBUG [com.alibaba.druid.filter.logging.Log4jFilter.connectionLog(Log4jFilter.java:132)] {conn-10005} pool-recycle  
 